/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /home/rich/code/LibRawGo/src/librawgo.i

#define SWIGMODULE librawgo

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


/* Put headers and other declarations here */
#define __cplusplus 201402L
#define CRX_BUF_SIZE 0x10000
#define libraw_inline inline __attribute__((always_inline))
#define _byteswap_ulong(x) __builtin_bswap32(x)
typedef ushort ushort3[3];
typedef int int3[3];
#include "internal/libraw_cxx_defs.h"
#include "libraw/libraw_alloc.h"
#include "libraw/libraw_datastream.h"
#include "libraw/libraw_internal.h"
#include "libraw/libraw_types.h"
#include "libraw/libraw_version.h"
#include "libraw/libraw.h"

static const char * const static_camera_list[] = {
	"Adobe Digital Negative (DNG)",
	"AgfaPhoto DC-833m",
	"Alcatel 5035D",
	"Apple iPad Pro",
	"Apple iPhone SE",
	"Apple iPhone 6s",
	"Apple iPhone 6 plus",
	"Apple iPhone 7",
	"Apple iPhone 7 plus",
	"Apple iPhone 8",
	"Apple iPhone 8 plus",
	"Apple iPhone X",
	"Apple QuickTake 100",
	"Apple QuickTake 150",
	"Apple QuickTake 200",
	"ARRI ALEXA",
	"ARRI ALEXA65",
	"ARRI ALEXA LF",
	"ARRI ALEXA XT",
	"ARRI ALEXA SXT",
	"ASUS ZenPhone4",
	"ASUS ZenPhone6",
	"AVT F-080C",
	"AVT F-145C",
	"AVT F-201C",
	"AVT F-510C",
	"AVT F-810C",
	"Baumer TXG14",
	"BlackMagic Cinema Camera",
	"BlackMagic Micro Cinema Camera",
	"BlackMagic Pocket Cinema Camera",
	"BlackMagic Production Camera 4k",
	"BlackMagic URSA",
	"BlackMagic URSA Mini 4k",
	"BlackMagic URSA Mini 4.6k",
	"BlackMagic URSA Mini Pro 4.6k",
	"BQ Aquarius U",
	"Canon PowerShot 600",
	"Canon PowerShot A5",
	"Canon PowerShot A5 Zoom",
	"Canon PowerShot A50",
	"Canon PowerShot A410 (CHDK hack)",
	"Canon PowerShot A460 (CHDK hack)",
	"Canon PowerShot A470 (CHDK hack)",
	"Canon PowerShot A480 (CHDK hack)",
	"Canon PowerShot A530 (CHDK hack)",
	"Canon PowerShot A540 (CHDK hack)",
	"Canon PowerShot A550 (CHDK hack)",
	"Canon PowerShot A560 (CHDK hack)",
	"Canon PowerShot A570 (CHDK hack)",
	"Canon PowerShot A590 (CHDK hack)",
	"Canon PowerShot A610 (CHDK hack)",
	"Canon PowerShot A620 (CHDK hack)",
	"Canon PowerShot A630 (CHDK hack)",
	"Canon PowerShot A640 (CHDK hack)",
	"Canon PowerShot A650 (CHDK hack)",
	"Canon PowerShot A710 IS (CHDK hack)",
	"Canon PowerShot A720 IS (CHDK hack)",
	"Canon PowerShot A3300 IS (CHDK hack)",
	"Canon PowerShot D10 (CHDK hack)",
	"Canon PowerShot ELPH 130 IS (CHDK hack)",
	"Canon PowerShot ELPH 160 IS (CHDK hack)",
	"Canon PowerShot Pro70",
	"Canon PowerShot Pro90 IS",
	"Canon PowerShot Pro1",
	"Canon PowerShot G1",
	"Canon PowerShot G1 X",
	"Canon PowerShot G1 X Mark II",
	"Canon PowerShot G1 X Mark III",
	"Canon PowerShot G2",
	"Canon PowerShot G3",
	"Canon PowerShot G3 X",
	"Canon PowerShot G5",
	"Canon PowerShot G5 X",
	"Canon PowerShot G5 X Mark II",
	"Canon PowerShot G6",
	"Canon PowerShot G7 (CHDK hack)",
	"Canon PowerShot G7 X",
	"Canon PowerShot G7 X Mark II",
	"Canon PowerShot G7 X Mark III",
	"Canon PowerShot G9",
	"Canon PowerShot G9 X",
	"Canon PowerShot G9 X Mark II",
	"Canon PowerShot G10",
	"Canon PowerShot G11",
	"Canon PowerShot G12",
	"Canon PowerShot G15",
	"Canon PowerShot G16",
	"Canon PowerShot S2 IS (CHDK hack)",
	"Canon PowerShot S3 IS (CHDK hack)",
	"Canon PowerShot S5 IS (CHDK hack)",
	"Canon PowerShot SD300 (CHDK hack)",
	"Canon PowerShot SD750 (CHDK hack)",
	"Canon PowerShot SD950 (CHDK hack)",
	"Canon PowerShot S30",
	"Canon PowerShot S40",
	"Canon PowerShot S45",
	"Canon PowerShot S50",
	"Canon PowerShot S60",
	"Canon PowerShot S70",
	"Canon PowerShot S90",
	"Canon PowerShot S95",
	"Canon PowerShot S100",
	"Canon PowerShot S110",
	"Canon PowerShot S120",
	"Canon PowerShot SX1 IS",
	"Canon PowerShot SX50 HS",
	"Canon PowerShot SX60 HS",
	"Canon PowerShot SX70 HS",
	"Canon PowerShot SX100 IS (CHDK hack)",
	"Canon PowerShot SX110 IS (CHDK hack)",
	"Canon PowerShot SX120 IS (CHDK hack)",
	"Canon PowerShot SX130 IS (CHDK hack)",
	"Canon PowerShot SX160 IS (CHDK hack)",
	"Canon PowerShot SX220 HS (CHDK hack)",
	"Canon PowerShot SX510 HS (CHDK hack)",
	"Canon PowerShot SX10 IS (CHDK hack)",
	"Canon PowerShot SX20 IS (CHDK hack)",
	"Canon PowerShot SX30 IS (CHDK hack)",
	"Canon PowerShot IXUS 95 (CHDK hack)",
	"Canon PowerShot IXUS 160 (CHDK hack)",
	"Canon PowerShot IXUS 900Ti (CHDK hack)",
	"Canon EOS R",
	"Canon EOS RP",
	"Canon EOS D30",
	"Canon EOS D60",
	"Canon EOS 5DS",
	"Canon EOS 5DS R",
	"Canon EOS 5D",
	"Canon EOS 5D Mark II",
	"Canon EOS 5D Mark III",
	"Canon EOS 5D Mark IV",
	"Canon EOS 6D",
	"Canon EOS 6D Mark II",
	"Canon EOS 7D",
	"Canon EOS 7D Mark II",
	"Canon EOS 10D",
	"Canon EOS 20D",
	"Canon EOS 20Da",
	"Canon EOS 30D",
	"Canon EOS 40D",
	"Canon EOS 50D",
	"Canon EOS 60D",
	"Canon EOS 60Da",
	"Canon EOS 70D",
	"Canon EOS 77D / 9000D",
	"Canon EOS 80D",
	"Canon EOS 90D",
	"Canon EOS 100D / Rebel SL1 / Kiss X7",
	"Canon EOS 200D / Rebel SL2 / Kiss X9",
	"Canon EOS 250D / 200D II / Rebel SL3 / Kiss X10",
	"Canon EOS 300D / Digital Rebel / Kiss Digital",
	"Canon EOS 350D / Digital Rebel XT / Kiss Digital N",
	"Canon EOS 400D / Digital Rebel XTi / Kiss Digital X",
	"Canon EOS 450D / Digital Rebel XSi / Kiss X2",
	"Canon EOS 500D / Rebel T1i / Kiss X3",
	"Canon EOS 550D / Rebel T2i / Kiss X4",
	"Canon EOS 600D / Rebel T3i / Kiss X5",
	"Canon EOS 650D / Rebel T4i / Kiss X6i",
	"Canon EOS 700D / Rebel T5i / Kiss X7i",
	"Canon EOS 750D / Rebel T6i / Kiss X8i",
	"Canon EOS 760D / Rebel T6S / 8000D",
	"Canon EOS 800D / Rebel T7i / Kiss X9i",
	"Canon EOS 1000D / Digital Rebel XS / Kiss F",
	"Canon EOS 1100D / Rebel T3 / Kiss X50",
	"Canon EOS 1200D / Kiss X70 / REBEL T5 / Hi",
	"Canon EOS 1300D / Rebel T6 / Kiss X80",
	"Canon EOS 1500D / 2000D / Rebel T7 / Kiss X90",
	"Canon EOS 3000D / 4000D / Rebel T100",
	"Canon EOS C500",
	"Canon EOS D2000",
	"Canon EOS M",
	"Canon EOS M2",
	"Canon EOS M3",
	"Canon EOS M5",
	"Canon EOS M6",
	"Canon EOS M6 Mark II",
	"Canon EOS M10",
	"Canon EOS M50 / Kiss M",
	"Canon EOS M100",
	"Canon EOS M200",
	"Canon EOS-1D C",
	"Canon EOS-1D X",
	"Canon EOS-1D X Mark II",
	"Canon EOS-1D X Mark III (lossless compressed only)",
	"Canon EOS-1D",
	"Canon EOS-1D Mark II",
	"Canon EOS-1D Mark II N",
	"Canon EOS-1D Mark III",
	"Canon EOS-1D Mark IV",
	"Canon EOS-1DS",
	"Canon EOS-1Ds Mark II",
	"Canon EOS-1Ds Mark III",
	"Casio QV-2000UX (secret menu hack)",
	"Casio QV-3000EX (secret menu hack)",
	"Casio QV-3500EX (secret menu hack)",
	"Casio QV-4000 (secret menu hack)",
	"Casio QV-5700 (secret menu hack)",
	"Casio QV-R41",
	"Casio QV-R51",
	"Casio QV-R61",
	"Casio EX-F1",
	"Casio EX-FC300S",
	"Casio EX-FC400S",
	"Casio EX-FH20",
	"Casio EX-FH25",
	"Casio EX-FH100",
	"Casio EX-S20 / M20",
	"Casio EX-S100",
	"Casio EX-Z4",
	"Casio EX-Z50",
	"Casio EX-Z500",
	"Casio EX-Z55",
	"Casio EX-Z60",
	"Casio EX-Z75",
	"Casio EX-Z750",
	"Casio EX-Z8",
	"Casio EX-Z850",
	"Casio EX-Z1050",
	"Casio EX-ZR100",
	"Casio EX-Z1080",
	"Casio EX-ZR700",
	"Casio EX-ZR710",
	"Casio EX-ZR750",
	"Casio EX-ZR800",
	"Casio EX-ZR850",
	"Casio EX-ZR1000",
	"Casio EX-ZR1100",
	"Casio EX-ZR1200",
	"Casio EX-ZR1300",
	"Casio EX-ZR1500",
	"Casio EX-ZR3000",
	"Casio EX-ZR3100",
	"Casio EX-ZR3200",
	"Casio EX-ZR3500",
	"Casio EX-ZR3600",
	"Casio EX-ZR3700",
	"Casio EX-ZR4000 / 5000",
	"Casio EX-ZR4100 / 5100",
	"Casio EX-100",
	"Casio EX-100F",
	"Casio EX-100PRO",
	"Casio EX-10",
	"Casio EX-P505 (secret menu hack)",
	"Casio EX-P600 (secret menu hack)",
	"Casio EX-P700 (secret menu hack)",
	"CLAUSS pix500",
	"Contax N Digital",
	"Creative PC-CAM 600",
	"Digital Bolex D16",
	"Digital Bolex D16M",
	"DJI 4384x3288",
	"DJI Mavic Air",
	"DJI Mavic Air2",
	"DJI Osmo Action",
	"DJI Phantom4 Pro/Pro+",
	"DJI Zenmuse X5",
	"DJI Zenmuse X5R",
	"DXO One",
	"Epson R-D1",
	"Epson R-D1s",
	"Epson R-D1x",
	"Eyedeas E1",
	"Foculus 531C",
	"FujiFilm DBP for GX680 / DX-2000",
	"FujiFilm E550",
	"FujiFilm E900",
	"FujiFilm F500EXR / F505EXR",
	"FujiFilm F550EXR",
	"FujiFilm F600EXR / F605EXR",
	"FujiFilm F700",
	"FujiFilm F710",
	"FujiFilm F770EXR / F775EXR",
	"FujiFilm F800EXR",
	"FujiFilm F810",
	"FujiFilm F900EXR",
	"FujiFilm S2Pro",
	"FujiFilm S3Pro",
	"FujiFilm S5Pro",
	"FujiFilm S20Pro",
	"FujiFilm S1",
	"FujiFilm S100FS",
	"FujiFilm S5000",
	"FujiFilm S5100 / S5500",
	"FujiFilm S5200 / S5600",
	"FujiFilm S6000fd / S6500fd",
	"FujiFilm S7000",
	"FujiFilm S9000 / S9500",
	"FujiFilm S9100 / S9600",
	"FujiFilm S200EXR / S205EXR",
	"FujiFilm SL1000",
	"FujiFilm HS10/HS11",
	"FujiFilm HS20EXR / HS22EXR",
	"FujiFilm HS30EXR / HS33EXR / HS35EXR",
	"FujiFilm HS50EXR",
	"FujiFilm GFX 50S",
	"FujiFilm GFX 50R",
	"FujiFilm GFX 100",
	"FujiFilm X-Pro1",
	"FujiFilm X-Pro2",
	"FujiFilm X-Pro3",
	"FujiFilm X-S1",
	"FujiFilm XQ1",
	"FujiFilm XQ2",
	"FujiFilm X100",
	"FujiFilm X100f",
	"FujiFilm X100S",
	"FujiFilm X100T",
	"FujiFilm X100V",
	"FujiFilm X10",
	"FujiFilm X20",
	"FujiFilm X30",
	"FujiFilm X70",
	"FujiFilm X-A1",
	"FujiFilm X-A2",
	"FujiFilm X-A3",
	"FujiFilm X-A5",
	"FujiFilm X-A7",
	"FujiFilm X-A10",
	"FujiFilm X-A20",
	"FujiFilm X-E1",
	"FujiFilm X-E2",
	"FujiFilm X-E2S",
	"FujiFilm X-E3",
	"FujiFilm X-M1",
	"FujiFilm XF1",
	"FujiFilm XF10",
	"FujiFilm X-H1",
	"FujiFilm X-T1",
	"FujiFilm X-T1 Graphite Silver",
	"FujiFilm X-T2",
	"FujiFilm X-T3",
	"FujiFilm X-T4 (uncompressed and lossless compressed only)",
	"FujiFilm X-T10",
	"FujiFilm X-T20",
	"FujiFilm X-T30",
	"FujiFilm X-T100",
	"FujiFilm X-T200",
	"FujiFilm IS-1",
	"Gione E7",
	"GITUP GIT2",
	"GITUP GIT2P",
	"GITUP G3 DUO (16:9 mode only)",
	"Google Pixel",
	"Google Pixel XL",
	"Google Pixel 3a",
	"Google Pixel 4 XL",
#ifdef  USE_GPRSDK
	"GoPro Fusion",
	"GoPro HERO5",
	"GoPro HERO6",
	"GoPro HERO7",
	"GoPro HERO8",
#endif
	"Hasselblad H2D-22",
	"Hasselblad H2D-39",
	"Hasselblad H3DII-22",
	"Hasselblad H3DII-31",
	"Hasselblad H3DII-39",
	"Hasselblad H3DII-50",
	"Hasselblad H3D-22",
	"Hasselblad H3D-31",
	"Hasselblad H3D-39",
	"Hasselblad H4D-60",
	"Hasselblad H4D-50",
	"Hasselblad H4D-40",
	"Hasselblad H4D-31",
	"Hasselblad H5D-60",
	"Hasselblad H5D-50",
	"Hasselblad H5D-50c",
	"Hasselblad H5D-40",
	"Hasselblad H6D-100c",
	"Hasselblad A6D-100c", // Aerial camera
	"Hasselblad CFV",
	"Hasselblad CFV-50",
	"Hasselblad CFH",
	"Hasselblad CF-22",
	"Hasselblad CF-31",
	"Hasselblad CF-39",
	"Hasselblad V96C",
	"Hasselblad L1D-20c (DJI Mavic 2 Pro)",
	"Hasselblad Lusso",
	"Hasselblad Lunar",
	"Hasselblad True Zoom",
	"Hasselblad Stellar",
	"Hasselblad Stellar II",
	"Hasselblad HV",
	"Hasselblad X1D",
	"Hasselblad X1D II 50C",
	"HTC UltraPixel",
	"HTC MyTouch 4G",
	"HTC One (A9)",
	"HTC One (M9)",
	"HTC 10",
	"HTC U12",
	"Huawei P8 Lite (PRA-LX1)",
	"Huawei P9 (EVA-L09/AL00)",
	"Huawei P10 (VTR-L09)",
	"Huawei P10+ (VKY-L09)",
	"Huawei P10 Lite (WAS-LX1A)",
	"Huawei P20 (EML-L09)",
	"Huawei P20 Pro (CLT-L29/L09)",
	"Huawei P30 Pro (VOG-L29)",
	"Huawei Honor6a",
	"Huawei Honor7a pro",
	"Huawei Honor8 (FRD-L09)",
	"Huawei Honor9",
	"Huawei Honor10",
	"Huawei Honor20",
	"Huawei Honor View 10 (BKL-L09)",
	"Huawei Honor View 20 (PCT-L29)",
	"Huawei Mate8 (NXT-L29)",
	"Huawei Mate10 (BLA-L29)",
	"Huawei Mate20 Pro (LYA-L29)",
	"Imacon Ixpress 96, 96C",
	"Imacon Ixpress 384, 384C (single shot only)",
	"Imacon Ixpress 132C",
	"Imacon Ixpress 528C (single shot only)",
	"ISG 2020x1520",
	"Ikonoskop A-Cam dII Panchromatic",
	"Ikonoskop A-Cam dII",
	"Kinefinity KineMINI",
	"Kinefinity KineRAW Mini",
	"Kinefinity KineRAW S35",
	"Kodak DC20",
	"Kodak DC25",
	"Kodak DC40",
	"Kodak DC50",
	"Kodak DC120",
	"Kodak DCS200",
	"Kodak DCS315C",
	"Kodak DCS330C",
	"Kodak DCS420",
	"Kodak DCS460",
	"Kodak DCS460M",
	"Kodak DCS460",
	"Kodak DCS520C",
	"Kodak DCS560C",
	"Kodak DCS620C",
	"Kodak DCS620X",
	"Kodak DCS660C",
	"Kodak DCS660M",
	"Kodak DCS720X",
	"Kodak DCS760C",
	"Kodak DCS760M",
	"Kodak EOSDCS1",
	"Kodak EOSDCS3",
	"Kodak NC2000",
	"Kodak ProBack",
	"Kodak PB645C",
	"Kodak PB645H",
	"Kodak PB645M",
	"Kodak DCS Pro 14n",
	"Kodak DCS Pro 14nx",
	"Kodak DCS Pro SLR/c",
	"Kodak DCS Pro SLR/n",
	"Kodak C330",
	"Kodak C603",
	"Kodak P850",
	"Kodak P880",
	"Kodak PIXPRO AZ901",
	"Kodak PIXPRO S-1",
	"Kodak Z980",
	"Kodak Z981",
	"Kodak Z990",
	"Kodak Z1015",
	"Kodak KAI-0340",
	"Konica KD-400Z",
	"Konica KD-510Z",
	"Leaf AFi 5",
	"Leaf AFi 6",
	"Leaf AFi 7",
	"Leaf AFi-II 6",
	"Leaf AFi-II 7",
	"Leaf AFi-II 10",
	"Leaf AFi-II 10R",
	"Leaf Aptus-II 5",
	"Leaf Aptus-II 6",
	"Leaf Aptus-II 7",
	"Leaf Aptus-II 8",
	"Leaf Aptus-II 10",
	"Leaf Aptus-II 12",
	"Leaf Aptus-II 12R",
	"Leaf Aptus 17",
	"Leaf Aptus 22",
	"Leaf Aptus 54S",
	"Leaf Aptus 65",
	"Leaf Aptus 65S",
	"Leaf Aptus 75",
	"Leaf Aptus 75S",
	"Leaf Cantare",
	"Leaf Cantare XY",
	"Leaf CatchLight",
	"Leaf CMost",
	"Leaf Credo 40",
	"Leaf Credo 50",
	"Leaf Credo 60",
	"Leaf Credo 80 (low compression mode only)",
	"Leaf DCB-II",
	"Leaf Valeo 6",
	"Leaf Valeo 11",
	"Leaf Valeo 17",
	"Leaf Valeo 17wi",
	"Leaf Valeo 22",
	"Leaf Valeo 22wi",
	"Leaf Volare",
	"Lenovo a820",
	"Leica C (Typ 112)",
	"Leica CL",
	"Leica C-Lux / CAM-DC25",
	"Leica Digilux 2",
	"Leica Digilux 3",
	"Leica Digital-Modul-R",
	"Leica D-LUX2",
	"Leica D-LUX3",
	"Leica D-LUX4",
	"Leica D-LUX5",
	"Leica D-LUX6",
	"Leica D-LUX7",
	"Leica D-Lux (Typ 109)",
	"Leica M8",
	"Leica M8.2",
	"Leica M9",
	"Leica M10",
	"Leica M10-D",
	"Leica M10-P",
	"Leica M10 Monochrom",
	"Leica M (Typ 240)",
	"Leica M (Typ 262)",
	"Leica Monochrom (Typ 240)",
	"Leica Monochrom (Typ 246)",
	"Leica M-D (Typ 262)",
	"Leica M-E",
	"Leica M-P",
	"Leica R8",
	"Leica Q (Typ 116)",
	"Leica Q-P",
	"Leica Q2",
	"Leica S",
	"Leica S2",
	"Leica S (Typ 007)",
	"Leica SL (Typ 601)",
	"Leica SL2",
	"Leica T (Typ 701)",
	"Leica TL",
	"Leica TL2",
	"Leica X1",
	"Leica X (Typ 113)",
	"Leica X2",
	"Leica X-E (Typ 102)",
	"Leica X-U (Typ 113)",
	"Leica V-LUX1",
	"Leica V-LUX2",
	"Leica V-LUX3",
	"Leica V-LUX4",
	"Leica V-LUX5",
	"Leica V-Lux (Typ 114)",
	"Leica X VARIO (Typ 107)",
	"LG G3",
	"LG G4",
	"LG G6",
	"LG V20 (F800K)",
	"LG VS995",
	"Logitech Fotoman Pixtura",
	"Mamiya ZD",
	"Matrix 4608x3288",
	"Meizy MX4",
	"Micron 2010",
	"Minolta RD175 / Agfa ActionCam",
	"Minolta DiMAGE 5",
	"Minolta DiMAGE 7",
	"Minolta DiMAGE 7i",
	"Minolta DiMAGE 7Hi",
	"Minolta DiMAGE A1",
	"Minolta DiMAGE A2",
	"Minolta DiMAGE A200",
	"Minolta DiMAGE G400",
	"Minolta DiMAGE G500",
	"Minolta DiMAGE G530",
	"Minolta DiMAGE G600",
	"Minolta DiMAGE Z2",
	"Minolta Alpha/Dynax/Maxxum 5D",
	"Minolta Alpha/Dynax/Maxxum 7D",
	"Motorola PIXL",
	"Motorola Moto G (5S)",
	"Motorola Moto G7 Play",
	"Nikon D1",
	"Nikon D1H",
	"Nikon D1X",
	"Nikon D2H",
	"Nikon D2Hs",
	"Nikon D2X",
	"Nikon D2Xs",
	"Nikon D3",
	"Nikon D3s",
	"Nikon D3X",
	"Nikon D4",
	"Nikon D4s",
	"Nikon D40",
	"Nikon D40X",
	"Nikon D5",
	"Nikon D50",
	"Nikon D5",
	"Nikon D60",
	"Nikon D70",
	"Nikon D70s",
	"Nikon D80",
	"Nikon D90",
	"Nikon D100",
	"Nikon D200",
	"Nikon D300",
	"Nikon D300s",
	"Nikon D500",
	"Nikon D600",
	"Nikon D610",
	"Nikon D700",
	"Nikon D750",
	"Nikon D780",
	"Nikon D800",
	"Nikon D800E",
	"Nikon D810",
	"Nikon D810A",
	"Nikon D850",
	"Nikon D3000",
	"Nikon D3100",
	"Nikon D3200",
	"Nikon D3300",
	"Nikon D3400",
	"Nikon D3500",
	"Nikon D5000",
	"Nikon D5100",
	"Nikon D5200",
	"Nikon D5300",
	"Nikon D5500",
	"Nikon D5600",
	"Nikon D7000",
	"Nikon D7100",
	"Nikon D7200",
	"Nikon D7500",
	"Nikon Df",
	"Nikon Z6",
	"Nikon Z7",
	"Nikon Z50",
	"Nikon 1 AW1",
	"Nikon 1 J1",
	"Nikon 1 J2",
	"Nikon 1 J3",
	"Nikon 1 J4",
	"Nikon 1 J5",
	"Nikon 1 S1",
	"Nikon 1 S2",
	"Nikon 1 V1",
	"Nikon 1 V2",
	"Nikon 1 V3",
	"Nikon Coolpix 700 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 800 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 880 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 900 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 950 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 990 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 995 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 2100 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 2500 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 3200 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 3700 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 4300 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 4500 (\"DIAG RAW\" hack)",
	"Nikon Coolpix 5000",
	"Nikon Coolpix 5400",
	"Nikon Coolpix 5700",
	"Nikon Coolpix 8400",
	"Nikon Coolpix 8700",
	"Nikon Coolpix 8800",
	"Nikon Coolpix A",
	"Nikon Coolpix A1000",
	"Nikon Coolpix B700",
	"Nikon Coolpix P330",
	"Nikon Coolpix P340",
	"Nikon Coolpix P950",
	"Nikon Coolpix P6000",
	"Nikon Coolpix P1000",
	"Nikon Coolpix P7000",
	"Nikon Coolpix P7100",
	"Nikon Coolpix P7700",
	"Nikon Coolpix P7800",
	"Nikon Coolpix S6 (\"DIAG RAW\" hack)",
	"Nikon Coolscan NEF",
	"Nokia 7 Plus",
	"Nokia N95",
	"Nokia X2",
	"Nokia 1200x1600",
	"Nokia Lumia 930",
	"Nokia Lumia 950 XL",
	"Nokia Lumia 1020",
	"Nokia Lumia 1520",
	"Olympus AIR A01",
	"Olympus C-3030Z",
	"Olympus C-5050Z",
	"Olympus C-5060WZ",
	"Olympus C-7070WZ",
	"Olympus C-70Z / C-7000Z",
	"Olympus C-740UZ",
	"Olympus C-770UZ",
	"Olympus C-8080WZ",
	"Olympus X200 / D-560Z / C-350Z",
	"Olympus E-1",
	"Olympus E-3",
	"Olympus E-5",
	"Olympus E-10",
	"Olympus E-20 / E-20N / E-20P",
	"Olympus E-30",
	"Olympus E-300",
	"Olympus E-330",
	"Olympus E-400",
	"Olympus E-410",
	"Olympus E-420",
	"Olympus E-450",
	"Olympus E-500",
	"Olympus E-510",
	"Olympus E-520",
	"Olympus E-600",
	"Olympus E-620",
	"Olympus E-P1",
	"Olympus E-P2",
	"Olympus E-P3",
	"Olympus E-P5",
	"Olympus E-PL1",
	"Olympus E-PL1s",
	"Olympus E-PL2",
	"Olympus E-PL3",
	"Olympus E-PL5",
	"Olympus E-PL6",
	"Olympus E-PL7",
	"Olympus E-PL8",
	"Olympus E-PL9",
	"Olympus E-PL10",
	"Olympus E-PM1",
	"Olympus E-PM2",
	"Olympus E-M1",
	"Olympus E-M1 Mark II",
	"Olympus E-M1 Mark III",
	"Olympus E-M1X",
	"Olympus E-M10",
	"Olympus E-M10 Mark II",
	"Olympus E-M10 Mark III",
	"Olympus E-M5",
	"Olympus E-M5 Mark II",
	"Olympus E-M5 Mark III",
	"Olympus Pen-F",
	"Olympus SP-310",
	"Olympus SP-320",
	"Olympus SP-350",
	"Olympus SP-500UZ",
	"Olympus SP-510UZ",
	"Olympus SP-550UZ",
	"Olympus SP-560UZ",
	"Olympus SP-565UZ",
	"Olympus SP-570UZ",
	"Olympus Stylus 1",
	"Olympus Stylus 1s",
	"Olympus SH-2",
	"Olympus SH-3",
	"Olympus TG-4",
	"Olympus TG-5",
	"Olympus TG-6",
	"Olympus XZ-1",
	"Olympus XZ-2",
	"Olympus XZ-10",
	"OmniVision 4688",
	"OmniVision OV5647",
	"OmniVision OV5648",
	"OmniVision OV8850",
	"OmniVision 13860",
	"OnePlus 6T",
	"OnePlus One",
	"OnePlus A3303",
	"OnePlus A5000",
	"Panasonic DMC-CM1",
	"Panasonic DMC-FZ8",
	"Panasonic DMC-FZ18",
	"Panasonic DMC-FZ28",
	"Panasonic DMC-FZ30",
	"Panasonic DMC-FZ35 / FZ38",
	"Panasonic DMC-FZ40 / FZ42 / FZ45",
	"Panasonic DMC-FZ50",
	"Panasonic DMC-FZ70 / FZ72",
	"Panasonic DC-FZ80 / FZ81 / FZ82 / FZ83 / FZ85",
	"Panasonic DMC-FZ100",
	"Panasonic DMC-FZ150",
	"Panasonic DMC-FZ200",
	"Panasonic DMC-FZ300 / FZ330",
	"Panasonic DMC-FZ1000",
	"Panasonic DC-FZ1000 II / FZ1000M2 / DC-FZ10002",
	"Panasonic DMC-FZ2000 / FZ2500 / FZH1",
	"Panasonic DMC-FX150 / FX180",
	"Panasonic DMC-G1",
	"Panasonic DMC-G10",
	"Panasonic DMC-G2",
	"Panasonic DMC-G3",
	"Panasonic DMC-G5",
	"Panasonic DMC-G6",
	"Panasonic DMC-G7 / G70",
	"Panasonic DMC-G8 / G80 / G81 / G85",
	"Panasonic DC-G9",
	"Panasonic DC-G90 / G95 / G91 / G99",
	"Panasonic DMC-GF1",
	"Panasonic DMC-GF2",
	"Panasonic DMC-GF3",
	"Panasonic DMC-GF5",
	"Panasonic DMC-GF6",
	"Panasonic DMC-GF7",
	"Panasonic DC-GF10 / GF90",
	"Panasonic DMC-GH1",
	"Panasonic DMC-GH2",
	"Panasonic DMC-GH3",
	"Panasonic DMC-GH4",
	"Panasonic AG-GH4",
	"Panasonic DC-GH5",
	"Panasonic DC-GH5S",
	"Panasonic DMC-GM1",
	"Panasonic DMC-GM1s",
	"Panasonic DMC-GM5",
	"Panasonic DMC-GX1",
	"Panasonic DMC-GX7",
	"Panasonic DMC-GX8",
	"Panasonic DC-GX9 / GX7mkIII",
	"Panasonic DMC-GX80 / GX85, DMC-GX7mkII",
	"Panasonic DC-GX800 / GX850, DC-GF9",
	"Panasonic DMC-L1",
	"Panasonic DMC-L10",
	"Panasonic DMC-LC1",
	"Panasonic DMC-LF1",
	"Panasonic DMC-LX1",
	"Panasonic DMC-LX2",
	"Panasonic DMC-LX3",
	"Panasonic DMC-LX5",
	"Panasonic DMC-LX7",
	"Panasonic DMC-LX9 / LX10 / LX15",
	"Panasonic DMC-LX100",
	"Panasonic DC-LX100M2",
	"Panasonic DC-S1",
	"Panasonic DC-S1H",
	"Panasonic DC-S1R",
	"Panasonic DMC-ZS40, DMC-TZ60 / TZ61",
	"Panasonic DMC-ZS50, DMC-TZ70 / TZ71",
	"Panasonic DMC-ZS60, DMC-TZ80 / TZ81 / TZ82 / TZ85",
	"Panasonic DC-ZS70, DC-TZ90 / TZ91 / TZ92 / TZ93",
	"Panasonic DC-ZS80, DC-TZ95 / TZ96 / TZ97",
	"Panasonic DMC-ZS100 / ZS110, DMC-TZ100 / TZ101 / TZ110, DMC-TX1",
	"Panasonic DC-ZS200 / ZS220, DC-TZ200 / TZ202 / TZ220, DC-TX2",
	"PARROT Anafi",
	"PARROT Bebop 2",
	"PARROT Bebop Drone",
	"Pentax *ist D",
	"Pentax *ist DL",
	"Pentax *ist DL2",
	"Pentax *ist DS",
	"Pentax *ist DS2",
	"Pentax K10D",
	"Pentax K20D",
	"Pentax K100D",
	"Pentax K100D Super",
	"Pentax K110D",
	"Pentax K200D",
	"Pentax K2000/K-m",
	"Pentax KP",
	"Pentax K-x",
	"Pentax K-r",
	"Pentax K-01",
	"Pentax K-1",
	"Pentax K-1 Mark II",
	"Pentax K-3",
	"Pentax K-3 II",
	"Pentax K-30",
	"Pentax K-5",
	"Pentax K-5 II",
	"Pentax K-5 IIs",
	"Pentax K-50",
	"Pentax K-500",
	"Pentax K-7",
	"Pentax K-70",
	"Pentax K-S1",
	"Pentax K-S2",
	"Pentax MX-1",
	"Pentax Q",
	"Pentax Q7",
	"Pentax Q10",
	"Pentax QS-1",
	"Pentax Optio S (secret menu or hack)",
	"Pentax Optio S4 (secret menu or hack)",
	"Pentax Optio 33WR (secret menu or hack)",
	"Pentax Optio 750Z (secret menu or hack)",
	"Pentax 645D",
	"Pentax 645Z",
	"PhaseOne IQ140",
	"PhaseOne IQ150",
	"PhaseOne IQ160",
	"PhaseOne IQ180",
	"PhaseOne IQ180 IR",
	"PhaseOne IQ250",
	"PhaseOne IQ260",
	"PhaseOne IQ260 Achromatic",
	"PhaseOne IQ280",
	"PhaseOne IQ3 50MP",
	"PhaseOne IQ3 60MP",
	"PhaseOne IQ3 80MP",
	"PhaseOne IQ3 100MP",
	"PhaseOne IQ3 100MP Trichromatic",
	"PhaseOne IQ4 150MP",
	"PhaseOne LightPhase",
	"PhaseOne Achromatic+",
	"PhaseOne H 10",
	"PhaseOne H 20",
	"PhaseOne H 25",
	"PhaseOne P 20",
	"PhaseOne P 20+",
	"PhaseOne P 21",
	"PhaseOne P 25",
	"PhaseOne P 25+",
	"PhaseOne P 30",
	"PhaseOne P 30+",
	"PhaseOne P 40+",
	"PhaseOne P 45",
	"PhaseOne P 45+",
	"PhaseOne P 65",
	"PhaseOne P 65+",
	"Photron BC2-HD",
	"Pixelink A782",
#ifdef USE_X3FTOOLS
	"Polaroid x530",
#endif
	"RaspberryPi Camera",
	"RaspberryPi Camera V2",
	"Ricoh GR",
	"Realme 3 Pro",
	"Ricoh GR II",
	"Ricoh GR III",
	"Ricoh GR Digital",
	"Ricoh GR Digital II",
	"Ricoh GR Digital III",
	"Ricoh GR Digital IV",
	"Ricoh Caplio GX100",
	"Ricoh Caplio GX200",
	"Ricoh GXR Mount A12",
	"Ricoh GXR GR Lens A12 50mm F2.5 Macro",
	"Ricoh GXR GR Lens A12 28mm F2.5",
	"Ricoh GXR Ricoh Lens A16 24-85mm F3.5-5.5",
	"Ricoh GXR Ricoh Lens S10 24-72mm F2.5-4.4 VC",
	"Ricoh GXR Ricoh Lens P10 28-300 mm F3.5-5.6 VC",
#ifndef NO_JASPER
	"Redcode R3D format",
#endif
	"Rollei d530flex",
	"RoverShot 3320af",
	"Samsung EX1 / TL500",
	"Samsung EX2F",
	"Samsung GX-1L",
	"Samsung GX-1S",
	"Samsung GX10",
	"Samsung GX20",
	"Samsung Galaxy Nexus",
	"Samsung Galaxy Note 9",
	"Samsung Galaxy NX (EK-GN120)",
	"Samsung Galaxy S3",
	"Samsung Galaxy S6 (SM-G920F)",
	"Samsung Galaxy S7",
	"Samsung Galaxy S7 Edge",
	"Samsung Galaxy S8 (SM-G950U)",
	"Samsung Galaxy S9 (SM-G960F)",
	"Samsung Galaxy S9+ (SM-G965U / 965F)",
	"Samsung Galaxy S10 (SM-G973F)",
	"Samsung Galaxy S10+ (SM-G975U)",
	"Samsung NX1",
	"Samsung NX5",
	"Samsung NX10",
	"Samsung NX11",
	"Samsung NX100",
	"Samsung NX1000",
	"Samsung NX1100",
	"Samsung NX20",
	"Samsung NX200",
	"Samsung NX210",
	"Samsung NX2000",
	"Samsung NX30",
	"Samsung NX300",
	"Samsung NX300M",
	"Samsung NX3000",
	"Samsung NX500",
	"Samsung NX mini / NXF1",
	"Samsung Pro815",
	"Samsung WB550 / WB560 / HZ15W",
	"Samsung WB2000 / TL350",
	"Samsung WB5000 / HZ25W",
	"Samsung S85 (hacked)",
	"Samsung S850 (hacked)",
	"Sarnoff 4096x5440",
	"Seitz 6x17",
	"Seitz Roundshot D3",
	"Seitz Roundshot D2X",
	"Seitz Roundshot D2Xs",
	"Sigma fp",
#ifdef USE_X3FTOOLS
	"Sigma SD9 (raw decode only)",
	"Sigma SD10 (raw decode only)",
	"Sigma SD14 (raw decode only)",
	"Sigma SD15 (raw decode only)",
	"Sigma SD1",
	"Sigma SD1 Merrill",
	"Sigma DP1",
	"Sigma DP1 Merrill",
	"Sigma DP1S",
	"Sigma DP1X",
	"Sigma DP2",
	"Sigma DP2 Merrill",
	"Sigma DP2S",
	"Sigma DP2X",
	"Sigma DP3 Merrill",
	"Sigma dp0 Quattro",
	"Sigma dp1 Quattro",
	"Sigma dp2 Quattro",
	"Sigma dp3 Quattro",
	"Sigma sd Quattro",
	"Sigma sd Quattro H",
#else
		"Sigma dp0 Quattro (DNG only)",
		"Sigma dp1 Quattro (DNG only)",
		"Sigma dp2 Quattro (DNG only)",
		"Sigma dp3 Quattro (DNG only)",
		"Sigma sd Quattro (DNG only)",
		"Sigma sd Quattro H (DNG only)",
#endif
	"Sinar eMotion 22",
	"Sinar eMotion 54",
	"Sinar eSpirit 65",
	"Sinar eMotion 75",
	"Sinar eVolution 75",
	"Sinar 3072x2048 (Sinarback 23)",
	"Sinar 4080x4080 (Sinarback 44)",
	"Sinar 4080x5440",
	"Sinar STI format",
	"Sinar Sinarback 54",
	"SMaL Ultra-Pocket 3",
	"SMaL Ultra-Pocket 4",
	"SMaL Ultra-Pocket 5",
	"Sony ILCE-7 (A7)",
	"Sony ILCE-7M2 (A7 II)",
	"Sony ILCE-7M3 (A7 III)",
	"Sony ILCE-7R (A7R",
	"Sony ILCE-7RM2 (A7R II)",
	"Sony ILCE-7RM3 (A7R III)",
	"Sony ILCE-7RM4 (A7R IV)",
	"Sony ILCE-7S (A7S)",
	"Sony ILCE-7S2 (A7S II)",
	"Sony ILCE-9 (A9)",
	"Sony ILCE-9M2 (A9 II)",
	"Sony ILCA-68 (A68)",
	"Sony ILCA-77M2 (A77-II)",
	"Sony ILCA-99M2 (A99-II)",
	"Sony ILCE-3000 / 3500",
	"Sony ILCE-5000",
	"Sony ILCE-5100",
	"Sony ILCE-6000",
	"Sony ILCE-6100",
	"Sony ILCE-6300",
	"Sony ILCE-6400",
	"Sony ILCE-6500",
	"Sony ILCE-6600",
	"Sony ILCE-QX1",
	"Sony DSC-F828",
	"Sony DSC-HX95",
	"Sony DSC-HX99",
	"Sony DSC-R1",
	"Sony DSC-RX0",
	"Sony DSC-RX0 II",
	"Sony DSC-RX1",
	"Sony DSC-RX1R",
	"Sony DSC-RX1R II",
	"Sony DSC-RX10",
	"Sony DSC-RX10 II",
	"Sony DSC-RX10 III",
	"Sony DSC-RX10 IV",
	"Sony DSC-RX100",
	"Sony DSC-RX100 II",
	"Sony DSC-RX100 III",
	"Sony DSC-RX100 IV",
	"Sony DSC-RX100 V",
	"Sony DSC-RX100 VA",
	"Sony DSC-RX100 VI",
	"Sony DSC-RX100 VII",
	"Sony DSC-V3",
	"Sony DSLR-A100",
	"Sony DSLR-A200",
	"Sony DSLR-A230",
	"Sony DSLR-A290",
	"Sony DSLR-A300",
	"Sony DSLR-A330",
	"Sony DSLR-A350",
	"Sony DSLR-A380 / A390",
	"Sony DSLR-A450",
	"Sony DSLR-A500",
	"Sony DSLR-A550",
	"Sony DSLR-A560",
	"Sony DSLR-A580",
	"Sony DSLR-A700",
	"Sony DSLR-A850",
	"Sony DSLR-A900",
	"Sony NEX-3",
	"Sony NEX-3N",
	"Sony NEX-5",
	"Sony NEX-5N",
	"Sony NEX-5R",
	"Sony NEX-5T",
	"Sony NEX-6",
	"Sony NEX-7",
	"Sony NEX-C3",
	"Sony NEX-F3",
	"Sony NEX-VG20",
	"Sony NEX-VG30",
	"Sony NEX-VG900",
	"Sony SLT-A33",
	"Sony SLT-A35",
	"Sony SLT-A37",
	"Sony SLT-A55(V)",
	"Sony SLT-A57",
	"Sony SLT-A58",
	"Sony SLT-A65(V)",
	"Sony SLT-A77(V)",
	"Sony SLT-A99(V)",
	"Sony XCD-SX910CR",
	"Sony IMX135-mipi 13mp",
	"Sony IMX135-QCOM",
	"Sony IMX072-mipi",
	"Sony IMX214",
	"Sony IMX219",
	"Sony IMX230",
	"Sony IMX298-mipi 16mp",
	"Sony IMX219-mipi 8mp",
	"Sony Xperia L",
	"STV680 VGA",
	"PtGrey GRAS-50S5C",
	"JaiPulnix BB-500CL",
	"JaiPulnix BB-500GE",
	"SVS SVS625CL",
	"Yi M1",
	"YUNEEC CGO3",
	"YUNEEC CGO3P",
	"YUNEEC CGO4",
	"Xiaomi MI3",
	"Xiaomi MI 9 Lite",
	"Xiaomi RedMi Note3 Pro",
	"Xiaomi RedMi Note7",
	"Xiaomi FIMI X8SE",
	"Xiaoyi YIAC3 (YI 4k)",
	"Zenit M",
	NULL
};

struct int_pair
{
  int value1;
  int value2;
};

enum _xt_lines
{
  _R0 = 0,
  _R1,
  _R2,
  _R3,
  _R4,
  _G0,
  _G1,
  _G2,
  _G3,
  _G4,
  _G5,
  _G6,
  _G7,
  _B0,
  _B1,
  _B2,
  _B3,
  _B4,
  _ltotal
};

struct fuji_compressed_block
{
  int cur_bit;            // current bit being read (from left to right)
  int cur_pos;            // current position in a buffer
  INT64 cur_buf_offset;   // offset of this buffer in a file
  unsigned max_read_size; // Amount of data to be read
  int cur_buf_size;       // buffer size
  uchar *cur_buf;         // currently read block
  int fillbytes;          // Counter to add extra byte for block size N*16
  LibRaw_abstract_datastream *input;
  struct int_pair grad_even[3][41]; // tables of gradients
  struct int_pair grad_odd[3][41];
  ushort *linealloc;
  ushort *linebuf[_ltotal];
};

struct CrxBitstream
{
  uint8_t mdatBuf[CRX_BUF_SIZE];
  uint64_t mdatSize;
  uint64_t curBufOffset;
  uint32_t curPos;
  uint32_t curBufSize;
  uint32_t bitData;
  int32_t bitsLeft;
  LibRaw_abstract_datastream *input;
};

struct CrxBandParam
{
  CrxBitstream bitStream;
  int16_t subbandWidth;
  int16_t subbandHeight;
  int32_t roundedBitsMask;
  int32_t roundedBits;
  int16_t curLine;
  int32_t *lineBuf0;
  int32_t *lineBuf1;
  int32_t *lineBuf2;
  int32_t sParam;
  int32_t kParam;
  int32_t *paramData;
  int32_t *nonProgrData;
  int8_t supportsPartial;
};

struct CrxWaveletTransform
{
  int32_t *subband0Buf;
  int32_t *subband1Buf;
  int32_t *subband2Buf;
  int32_t *subband3Buf;
  int32_t *lineBuf[8];
  int16_t curLine;
  int16_t curH;
  int8_t fltTapH;
  int16_t height;
  int16_t width;
};

struct CrxSubband
{
  CrxBandParam *bandParam;
  uint64_t mdatOffset;
  uint8_t *bandBuf;
  int32_t bandSize;
  uint64_t dataSize;
  int8_t supportsPartial;
  int32_t quantValue;
  uint16_t width;
  uint16_t height;
  int32_t paramK;
  int64_t dataOffset;
};

struct CrxPlaneComp
{
  uint8_t *compBuf;
  CrxSubband *subBands;
  CrxWaveletTransform *waveletTransform;
  int8_t compNumber;
  int64_t dataOffset;
  int32_t compSize;
  int8_t supportsPartial;
  int32_t roundedBitsMask;
  int8_t tileFlag;
};

struct CrxTile
{
  CrxPlaneComp *comps;
  int8_t tileFlag;
  int8_t tileNumber;
  int64_t dataOffset;
  int32_t tileSize;
  uint16_t width;
  uint16_t height;
};

struct CrxImage
{
  uint8_t nPlanes;
  uint16_t planeWidth;
  uint16_t planeHeight;
  uint8_t samplePrecision;
  uint8_t subbandCount;
  uint8_t levels;
  uint8_t nBits;
  uint8_t encType;
  uint8_t tileCols;
  uint8_t tileRows;
  CrxTile *tiles;
  uint64_t mdatOffset;
  uint64_t mdatSize;
  int16_t *outBufs[4]; // one per plane
  int16_t *planeBuf;
  LibRaw_abstract_datastream *input;
#ifdef LIBRAW_CR3_MEMPOOL
  libraw_memmgr memmgr;
  CrxImage() : memmgr(0){}
#endif
};

enum TileFlags
{
  E_HAS_TILES_ON_THE_RIGHT = 1,
  E_HAS_TILES_ON_THE_LEFT = 2,
  E_HAS_TILES_ON_THE_BOTTOM = 4,
  E_HAS_TILES_ON_THE_TOP = 8
};

typedef uint32_t DWORD;

static void fuji_fill_buffer(struct fuji_compressed_block *info);
static void fuji_zerobits(struct fuji_compressed_block *info, int *count);
static void fuji_read_code(struct fuji_compressed_block *info, int *data,
                                  int bits_to_read);
static int bitDiff(int value1, int value2);
static void fuji_decode_interpolation_even(int line_width, ushort *line_buf,
                                           int pos);
static void fuji_extend_generic(ushort *linebuf[_ltotal], int line_width,
                                int start, int end);
static void fuji_extend_red(ushort *linebuf[_ltotal], int line_width);
static void fuji_extend_green(ushort *linebuf[_ltotal], int line_width);
static void fuji_extend_blue(ushort *linebuf[_ltotal], int line_width);
static int fuji_decode_sample_even(struct fuji_compressed_block *info,
                        const struct fuji_compressed_params *params,
                        ushort *line_buf, int pos, struct int_pair *grads);
static int
fuji_decode_sample_odd(struct fuji_compressed_block *info,
                       const struct fuji_compressed_params *params,
                       ushort *line_buf, int pos, struct int_pair *grads);

static void _BitScanReverse(DWORD *Index, unsigned long Mask);
static void crxFillBuffer(CrxBitstream *bitStrm);
static int crxBitstreamGetZeros(CrxBitstream *bitStrm);
static uint32_t crxBitstreamGetBits(CrxBitstream *bitStrm, int bits);
static int crxPredictKParameter(int32_t prevK, int32_t bitCode,
                                       int32_t maxVal = 0);
static void crxDecodeSymbolL1(CrxBandParam *param,
                                     int32_t doMedianPrediction,
                                     int32_t notEOL = 0);
static void crxDecodeSymbolL1Rounded(CrxBandParam *param,
                                            int32_t doSym = 1,
                                            int32_t doCode = 1);
static void unpack28bytesto16x16ns(unsigned char *src,
                                          unsigned short *dest);																			 
void swab32arr(unsigned *arr, unsigned len);

static void unpack7bytesto4x16_nikon(unsigned char *src,
                                            unsigned short *dest);
static float calc_dist(float c1, float c2) throw();
static int Y(ushort3 &rgb) throw();
static int U(ushort3 &rgb) throw();
static int V(ushort3 &rgb) throw();
static int nr_offset(int row, int col) throw();
void crxConvertPlaneLine(CrxImage *img, int imageRow, int imageCol = 0,
                         int plane = 0, int32_t *lineData = 0,
                         int lineLength = 0);

int32_t exCoefNumTbl[0x120] = {
    // level 1
    1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,

    // level 2
    1, 1, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 3, 2, 1, 0, 1, 0, 0, 0, 0, 0, 1,
    2, 4, 4, 2, 1, 2, 1, 0, 0, 0, 0, 1, 1, 4, 3, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
    3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 3, 2, 1, 0, 1, 0, 0, 0, 0, 0, 1, 2, 4,
    4, 2, 1, 2, 1, 0, 0, 0, 0, 1, 1, 4, 3, 1, 1, 1, 1, 0, 0, 0, 0,

    // level 3
    1, 1, 7, 7, 1, 1, 3, 3, 1, 1, 1, 1, 1, 0, 7, 6, 1, 0, 3, 2, 1, 0, 1, 0, 1,
    2, 10, 10, 2, 2, 5, 4, 2, 1, 2, 1, 1, 1, 10, 9, 1, 2, 4, 4, 2, 1, 2, 1, 1,
    1, 9, 9, 1, 2, 4, 4, 2, 1, 2, 1, 1, 0, 9, 8, 1, 1, 4, 3, 1, 1, 1, 1, 1, 2,
    8, 8, 2, 1, 4, 3, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 3, 3, 1, 1, 1, 1};

uint32_t JS[32] = {1,     1,     1,     1,     2,      2,      2,      2,
                   4,     4,     4,     4,     8,      8,      8,      8,
                   0x10,  0x10,  0x20,  0x20,  0x40,   0x40,   0x80,   0x80,
                   0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000, 0x8000};

uint32_t J[32] = {0, 0, 0, 0, 1,    1,    1,    1,    2,    2,   2,
                  2, 3, 3, 3, 3,    4,    4,    5,    5,    6,   6,
                  7, 7, 8, 9, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F};

int crxDecodeLine(CrxBandParam *param);
int crxDecodeLineRounded(CrxBandParam *param);
int crxDecodeLineNoRefPrevLine(CrxBandParam *param);
int crxDecodeTopLine(CrxBandParam *param);
int crxDecodeTopLineRounded(CrxBandParam *param);
int crxDecodeTopLineNoRefPrevLine(CrxBandParam *param);
int crxDecodeLine(CrxBandParam *param, uint8_t *bandBuf);
int crxDecodeLineWithIQuantization(CrxSubband *subband);
void crxHorizontal53(int32_t *lineBufLA, int32_t *lineBufLB,
                     CrxWaveletTransform *wavelet, uint32_t tileFlag);
int32_t *crxIdwt53FilterGetLine(CrxPlaneComp *comp, int32_t level);
int crxIdwt53FilterDecode(CrxPlaneComp *comp, int32_t level);
int crxIdwt53FilterTransform(CrxPlaneComp *comp, uint32_t level);
int crxIdwt53FilterInitialize(CrxPlaneComp *comp, int32_t prevLevel);
void crxFreeSubbandData(CrxImage *image, CrxPlaneComp *comp);
void crxConvertPlaneLine(CrxImage *img, int imageRow, int imageCol = 0,
                         int plane = 0, int32_t *lineData = 0,
                         int lineLength = 0);
int crxParamInit(
#ifdef LIBRAW_CR3_MEMPOOL
	libraw_memmgr&  mm,
#endif	
	CrxBandParam **param, uint64_t subbandMdatOffset,
                 uint64_t subbandDataSize, uint32_t subbandWidth,
                 uint32_t subbandHeight, int32_t supportsPartial,
                 uint32_t roundedBitsMask, LibRaw_abstract_datastream *input);
int crxSetupSubbandData(CrxImage *img, CrxPlaneComp *planeComp,
                        const CrxTile *tile, uint32_t mdatOffset);
int crxReadSubbandHeaders(crx_data_header_t *hdr, CrxImage *img, CrxTile *tile,
                          CrxPlaneComp *comp, uint8_t **subbandMdatPtr,
                          int32_t *hdrSize);
int crxReadImageHeaders(crx_data_header_t *hdr, CrxImage *img, uint8_t *mdatPtr,
                        int32_t hdrBufSize);
int crxSetupImageData(crx_data_header_t *hdr, CrxImage *img, int16_t *outBuf,
                      uint64_t mdatOffset, uint32_t mdatSize, int32_t hdrBufSize,
                      uint8_t *mdatHdrPtr);
int crxFreeImageData(CrxImage *img);



#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_librawgo_fabcac84457d17f6(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


libraw_memmgr *_wrap_new_libraw_memmgr_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  unsigned int arg1 ;
  libraw_memmgr *result = 0 ;
  libraw_memmgr *_swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (libraw_memmgr *)new libraw_memmgr(arg1);
  *(libraw_memmgr **)&_swig_go_result = (libraw_memmgr *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_memmgr_librawgo_fabcac84457d17f6(libraw_memmgr *_swig_go_0) {
  libraw_memmgr *arg1 = (libraw_memmgr *) 0 ;
  
  arg1 = *(libraw_memmgr **)&_swig_go_0; 
  
  delete arg1;
  
}


void *_wrap_libraw_memmgr_malloc_librawgo_fabcac84457d17f6(libraw_memmgr *_swig_go_0, long long _swig_go_1) {
  libraw_memmgr *arg1 = (libraw_memmgr *) 0 ;
  size_t arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_memmgr **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (void *)(arg1)->malloc(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void *_wrap_libraw_memmgr_calloc_librawgo_fabcac84457d17f6(libraw_memmgr *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  libraw_memmgr *arg1 = (libraw_memmgr *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_memmgr **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (void *)(arg1)->calloc(arg2,arg3);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void *_wrap_libraw_memmgr_realloc_librawgo_fabcac84457d17f6(libraw_memmgr *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  libraw_memmgr *arg1 = (libraw_memmgr *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_memmgr **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (void *)(arg1)->realloc(arg2,arg3);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_memmgr_free_librawgo_fabcac84457d17f6(libraw_memmgr *_swig_go_0, void *_swig_go_1) {
  libraw_memmgr *arg1 = (libraw_memmgr *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_memmgr **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->free(arg2);
  
}


void _wrap_libraw_memmgr_cleanup_librawgo_fabcac84457d17f6(libraw_memmgr *_swig_go_0) {
  libraw_memmgr *arg1 = (libraw_memmgr *) 0 ;
  
  arg1 = *(libraw_memmgr **)&_swig_go_0; 
  
  (arg1)->cleanup();
  
}


void _wrap_delete_LibRaw_abstract_datastream_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_LibRaw_abstract_datastream_valid_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->valid();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_abstract_datastream_read_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0, void *_swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (int)(arg1)->read(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_abstract_datastream_seek_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  INT64 arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->seek(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_abstract_datastream_tell_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->tell();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_abstract_datastream_size_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_abstract_datastream_get_char_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->get_char();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_abstract_datastream_gets_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (char *)(arg1)->gets(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_abstract_datastream_scanf_one_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  
  result = (int)(arg1)->scanf_one((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_abstract_datastream_eof_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->eof();
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_LibRaw_abstract_datastream_make_jas_stream_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (void *)(arg1)->make_jas_stream();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_abstract_datastream_jpeg_src_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0, void *_swig_go_1) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)(arg1)->jpeg_src(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_abstract_datastream_buffering_off_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  (arg1)->buffering_off();
  
}


intgo _wrap_LibRaw_abstract_datastream_lock_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->lock();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_abstract_datastream_unlock_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  (arg1)->unlock();
  
}


_gostring_ _wrap_LibRaw_abstract_datastream_fname_librawgo_fabcac84457d17f6(LibRaw_abstract_datastream *_swig_go_0) {
  LibRaw_abstract_datastream *arg1 = (LibRaw_abstract_datastream *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_abstract_datastream **)&_swig_go_0; 
  
  result = (char *)(arg1)->fname();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_LibRaw_file_datastream_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  delete arg1;
  
}


LibRaw_file_datastream *_wrap_new_LibRaw_file_datastream_librawgo_fabcac84457d17f6(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  LibRaw_file_datastream *result = 0 ;
  LibRaw_file_datastream *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (LibRaw_file_datastream *)new LibRaw_file_datastream((char const *)arg1);
  *(LibRaw_file_datastream **)&_swig_go_result = (LibRaw_file_datastream *)result; 
  free(arg1); 
  return _swig_go_result;
}


void *_wrap_LibRaw_file_datastream_make_jas_stream_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (void *)(arg1)->make_jas_stream();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_valid_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->valid();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_read_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0, void *_swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (int)(arg1)->read(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_eof_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->eof();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_seek_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  INT64 arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->seek(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_file_datastream_tell_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->tell();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_file_datastream_size_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_get_char_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->get_char();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_file_datastream_gets_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (char *)(arg1)->gets(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_scanf_one_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  
  result = (int)(arg1)->scanf_one((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_file_datastream_fname_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  result = (char *)(arg1)->fname();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_file_datastream_jpeg_src_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0, void *_swig_go_1) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  result = (int)(swig_b0)->jpeg_src(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_file_datastream_buffering_off_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  (swig_b0)->buffering_off();
  
}


intgo _wrap_LibRaw_file_datastream_lock_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  result = (int)(swig_b0)->lock();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_file_datastream_unlock_librawgo_fabcac84457d17f6(LibRaw_file_datastream *_swig_go_0) {
  LibRaw_file_datastream *arg1 = (LibRaw_file_datastream *) 0 ;
  
  arg1 = *(LibRaw_file_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  (swig_b0)->unlock();
  
}


LibRaw_buffer_datastream *_wrap_new_LibRaw_buffer_datastream_librawgo_fabcac84457d17f6(void *_swig_go_0, long long _swig_go_1) {
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  LibRaw_buffer_datastream *result = 0 ;
  LibRaw_buffer_datastream *_swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (LibRaw_buffer_datastream *)new LibRaw_buffer_datastream(arg1,arg2);
  *(LibRaw_buffer_datastream **)&_swig_go_result = (LibRaw_buffer_datastream *)result; 
  return _swig_go_result;
}


void _wrap_delete_LibRaw_buffer_datastream_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_LibRaw_buffer_datastream_valid_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->valid();
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_LibRaw_buffer_datastream_make_jas_stream_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  result = (void *)(arg1)->make_jas_stream();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_buffer_datastream_jpeg_src_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0, void *_swig_go_1) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (int)(arg1)->jpeg_src(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_buffer_datastream_read_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0, void *_swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (int)(arg1)->read(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_buffer_datastream_eof_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->eof();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_buffer_datastream_seek_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  INT64 arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->seek(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_buffer_datastream_tell_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->tell();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_buffer_datastream_size_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_buffer_datastream_gets_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (char *)(arg1)->gets(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_buffer_datastream_scanf_one_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  
  result = (int)(arg1)->scanf_one((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_buffer_datastream_get_char_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->get_char();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_buffer_datastream_buffering_off_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  (swig_b0)->buffering_off();
  
}


intgo _wrap_LibRaw_buffer_datastream_lock_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  result = (int)(swig_b0)->lock();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_buffer_datastream_unlock_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  (swig_b0)->unlock();
  
}


_gostring_ _wrap_LibRaw_buffer_datastream_fname_librawgo_fabcac84457d17f6(LibRaw_buffer_datastream *_swig_go_0) {
  LibRaw_buffer_datastream *arg1 = (LibRaw_buffer_datastream *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_buffer_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  result = (char *)(swig_b0)->fname();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


LibRaw_bigfile_datastream *_wrap_new_LibRaw_bigfile_datastream_librawgo_fabcac84457d17f6(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  LibRaw_bigfile_datastream *result = 0 ;
  LibRaw_bigfile_datastream *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (LibRaw_bigfile_datastream *)new LibRaw_bigfile_datastream((char const *)arg1);
  *(LibRaw_bigfile_datastream **)&_swig_go_result = (LibRaw_bigfile_datastream *)result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_delete_LibRaw_bigfile_datastream_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_LibRaw_bigfile_datastream_valid_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->valid();
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_LibRaw_bigfile_datastream_make_jas_stream_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (void *)(arg1)->make_jas_stream();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_bigfile_datastream_read_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0, void *_swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (int)(arg1)->read(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_bigfile_datastream_eof_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->eof();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_bigfile_datastream_seek_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  INT64 arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->seek(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_bigfile_datastream_tell_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->tell();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LibRaw_bigfile_datastream_size_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (INT64)(arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_bigfile_datastream_gets_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (char *)(arg1)->gets(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_bigfile_datastream_scanf_one_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  
  result = (int)(arg1)->scanf_one((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_bigfile_datastream_fname_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (char *)(arg1)->fname();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_bigfile_datastream_get_char_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  result = (int)(arg1)->get_char();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_bigfile_datastream_jpeg_src_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0, void *_swig_go_1) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  result = (int)(swig_b0)->jpeg_src(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_bigfile_datastream_buffering_off_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  (swig_b0)->buffering_off();
  
}


intgo _wrap_LibRaw_bigfile_datastream_lock_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  result = (int)(swig_b0)->lock();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_bigfile_datastream_unlock_librawgo_fabcac84457d17f6(LibRaw_bigfile_datastream *_swig_go_0) {
  LibRaw_bigfile_datastream *arg1 = (LibRaw_bigfile_datastream *) 0 ;
  
  arg1 = *(LibRaw_bigfile_datastream **)&_swig_go_0; 
  
  LibRaw_abstract_datastream *swig_b0 = (LibRaw_abstract_datastream *)arg1;
  (swig_b0)->unlock();
  
}


void _wrap_LibRaw_TLS_jpeg_buffer_set_librawgo_fabcac84457d17f6(LibRaw_TLS *_swig_go_0, char *_swig_go_1) {
  LibRaw_TLS *arg1 = (LibRaw_TLS *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(LibRaw_TLS **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->jpeg_buffer;
    for (ii = 0; ii < (size_t)4096; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_LibRaw_TLS_jpeg_buffer_get_librawgo_fabcac84457d17f6(LibRaw_TLS *_swig_go_0) {
  LibRaw_TLS *arg1 = (LibRaw_TLS *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(LibRaw_TLS **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->jpeg_buffer);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_TLS_init_librawgo_fabcac84457d17f6(LibRaw_TLS *_swig_go_0) {
  LibRaw_TLS *arg1 = (LibRaw_TLS *) 0 ;
  
  arg1 = *(LibRaw_TLS **)&_swig_go_0; 
  
  (arg1)->init();
  
}


LibRaw_TLS *_wrap_new_LibRaw_TLS_librawgo_fabcac84457d17f6() {
  LibRaw_TLS *result = 0 ;
  LibRaw_TLS *_swig_go_result;
  
  
  result = (LibRaw_TLS *)new LibRaw_TLS();
  *(LibRaw_TLS **)&_swig_go_result = (LibRaw_TLS *)result; 
  return _swig_go_result;
}


void _wrap_delete_LibRaw_TLS_librawgo_fabcac84457d17f6(LibRaw_TLS *_swig_go_0) {
  LibRaw_TLS *arg1 = (LibRaw_TLS *) 0 ;
  
  arg1 = *(LibRaw_TLS **)&_swig_go_0; 
  
  delete arg1;
  
}


float *_wrap_LibRaw_constants_d65_white_get_librawgo_fabcac84457d17f6() {
  float *result = 0 ;
  float *_swig_go_result;
  
  
  result = (float *)(float *)LibRaw_constants::d65_white;
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_xyz_rgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::xyz_rgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_xyzd50_srgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::xyzd50_srgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_rgb_rgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::rgb_rgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_adobe_rgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::adobe_rgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_wide_rgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::wide_rgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_prophoto_rgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::prophoto_rgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


double **_wrap_LibRaw_constants_aces_rgb_get_librawgo_fabcac84457d17f6() {
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  
  result = (double (*)[3])(double (*)[3])LibRaw_constants::aces_rgb;
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


LibRaw_constants *_wrap_new_LibRaw_constants_librawgo_fabcac84457d17f6() {
  LibRaw_constants *result = 0 ;
  LibRaw_constants *_swig_go_result;
  
  
  result = (LibRaw_constants *)new LibRaw_constants();
  *(LibRaw_constants **)&_swig_go_result = (LibRaw_constants *)result; 
  return _swig_go_result;
}


void _wrap_delete_LibRaw_constants_librawgo_fabcac84457d17f6(LibRaw_constants *_swig_go_0) {
  LibRaw_constants *arg1 = (LibRaw_constants *) 0 ;
  
  arg1 = *(LibRaw_constants **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_internal_data_t_input_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, LibRaw_abstract_datastream *_swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  LibRaw_abstract_datastream *arg2 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  arg2 = *(LibRaw_abstract_datastream **)&_swig_go_1; 
  
  if (arg1) (arg1)->input = arg2;
  
}


LibRaw_abstract_datastream *_wrap_internal_data_t_input_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  LibRaw_abstract_datastream *result = 0 ;
  LibRaw_abstract_datastream *_swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (LibRaw_abstract_datastream *) ((arg1)->input);
  *(LibRaw_abstract_datastream **)&_swig_go_result = (LibRaw_abstract_datastream *)result; 
  return _swig_go_result;
}


void _wrap_internal_data_t_output_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, FILE *_swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  arg2 = *(FILE **)&_swig_go_1; 
  
  if (arg1) (arg1)->output = arg2;
  
}


FILE *_wrap_internal_data_t_output_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  FILE *result = 0 ;
  FILE *_swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (FILE *) ((arg1)->output);
  *(FILE **)&_swig_go_result = (FILE *)result; 
  return _swig_go_result;
}


void _wrap_internal_data_t_input_internal_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, intgo _swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->input_internal = arg2;
  
}


intgo _wrap_internal_data_t_input_internal_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->input_internal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_internal_data_t_meta_data_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, _gostring_ _swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->meta_data;
    if (arg2) {
      arg1->meta_data = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->meta_data, (const char *)arg2);
    } else {
      arg1->meta_data = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_internal_data_t_meta_data_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->meta_data);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_internal_data_t_profile_offset_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, long long _swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->profile_offset = arg2;
  
}


long long _wrap_internal_data_t_profile_offset_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->profile_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_internal_data_t_toffset_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, long long _swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->toffset = arg2;
  
}


long long _wrap_internal_data_t_toffset_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->toffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_internal_data_t_pana_black_set_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0, intgo *_swig_go_1) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->pana_black;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_internal_data_t_pana_black_get_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->pana_black);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


internal_data_t *_wrap_new_internal_data_t_librawgo_fabcac84457d17f6() {
  internal_data_t *result = 0 ;
  internal_data_t *_swig_go_result;
  
  
  result = (internal_data_t *)new internal_data_t();
  *(internal_data_t **)&_swig_go_result = (internal_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_internal_data_t_librawgo_fabcac84457d17f6(internal_data_t *_swig_go_0) {
  internal_data_t *arg1 = (internal_data_t *) 0 ;
  
  arg1 = *(internal_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_output_data_t_histogram_set_librawgo_fabcac84457d17f6(output_data_t *_swig_go_0, intgo **_swig_go_1) {
  output_data_t *arg1 = (output_data_t *) 0 ;
  int (*arg2)[0x2000] = (int (*)[0x2000]) 0 ;
  
  arg1 = *(output_data_t **)&_swig_go_0; 
  arg2 = *(int (**)[0x2000])&_swig_go_1; 
  
  if (arg1) (arg1)->histogram = (int (*)[0x2000])arg2;
  
}


intgo **_wrap_output_data_t_histogram_get_librawgo_fabcac84457d17f6(output_data_t *_swig_go_0) {
  output_data_t *arg1 = (output_data_t *) 0 ;
  int (*result)[0x2000] = 0 ;
  intgo **_swig_go_result;
  
  arg1 = *(output_data_t **)&_swig_go_0; 
  
  result = (int (*)[0x2000]) ((arg1)->histogram);
  *(int (**)[0x2000])&_swig_go_result = (int (*)[0x2000])result; 
  return _swig_go_result;
}


void _wrap_output_data_t_oprof_set_librawgo_fabcac84457d17f6(output_data_t *_swig_go_0, intgo *_swig_go_1) {
  output_data_t *arg1 = (output_data_t *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  
  arg1 = *(output_data_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  if (arg1) (arg1)->oprof = arg2;
  
}


intgo *_wrap_output_data_t_oprof_get_librawgo_fabcac84457d17f6(output_data_t *_swig_go_0) {
  output_data_t *arg1 = (output_data_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(output_data_t **)&_swig_go_0; 
  
  result = (unsigned int *) ((arg1)->oprof);
  *(unsigned int **)&_swig_go_result = (unsigned int *)result; 
  return _swig_go_result;
}


output_data_t *_wrap_new_output_data_t_librawgo_fabcac84457d17f6() {
  output_data_t *result = 0 ;
  output_data_t *_swig_go_result;
  
  
  result = (output_data_t *)new output_data_t();
  *(output_data_t **)&_swig_go_result = (output_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_output_data_t_librawgo_fabcac84457d17f6(output_data_t *_swig_go_0) {
  output_data_t *arg1 = (output_data_t *) 0 ;
  
  arg1 = *(output_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_identify_data_t_olympus_exif_cfa_set_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0, intgo _swig_go_1) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->olympus_exif_cfa = arg2;
  
}


intgo _wrap_identify_data_t_olympus_exif_cfa_get_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->olympus_exif_cfa);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_identify_data_t_unique_id_set_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0, long long _swig_go_1) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->unique_id = arg2;
  
}


long long _wrap_identify_data_t_unique_id_get_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->unique_id);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_identify_data_t_OlyID_set_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0, long long _swig_go_1) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->OlyID = arg2;
  
}


long long _wrap_identify_data_t_OlyID_get_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->OlyID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_identify_data_t_tiff_nifds_set_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0, intgo _swig_go_1) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tiff_nifds = arg2;
  
}


intgo _wrap_identify_data_t_tiff_nifds_get_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tiff_nifds);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_identify_data_t_tiff_flip_set_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0, intgo _swig_go_1) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->tiff_flip = arg2;
  
}


intgo _wrap_identify_data_t_tiff_flip_get_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->tiff_flip);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_identify_data_t_metadata_blocks_set_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0, intgo _swig_go_1) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->metadata_blocks = arg2;
  
}


intgo _wrap_identify_data_t_metadata_blocks_get_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->metadata_blocks);
  _swig_go_result = result; 
  return _swig_go_result;
}


identify_data_t *_wrap_new_identify_data_t_librawgo_fabcac84457d17f6() {
  identify_data_t *result = 0 ;
  identify_data_t *_swig_go_result;
  
  
  result = (identify_data_t *)new identify_data_t();
  *(identify_data_t **)&_swig_go_result = (identify_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_identify_data_t_librawgo_fabcac84457d17f6(identify_data_t *_swig_go_0) {
  identify_data_t *arg1 = (identify_data_t *) 0 ;
  
  arg1 = *(identify_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_crx_data_header_t_version_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->version = arg2;
  
}


int32_t *_wrap_crx_data_header_t_version_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->version);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_f_width_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->f_width = arg2;
  
}


int32_t *_wrap_crx_data_header_t_f_width_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->f_width);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_f_height_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->f_height = arg2;
  
}


int32_t *_wrap_crx_data_header_t_f_height_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->f_height);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_tileWidth_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->tileWidth = arg2;
  
}


int32_t *_wrap_crx_data_header_t_tileWidth_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->tileWidth);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_tileHeight_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->tileHeight = arg2;
  
}


int32_t *_wrap_crx_data_header_t_tileHeight_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->tileHeight);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_nBits_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->nBits = arg2;
  
}


int32_t *_wrap_crx_data_header_t_nBits_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->nBits);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_nPlanes_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->nPlanes = arg2;
  
}


int32_t *_wrap_crx_data_header_t_nPlanes_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->nPlanes);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_cfaLayout_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->cfaLayout = arg2;
  
}


int32_t *_wrap_crx_data_header_t_cfaLayout_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->cfaLayout);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_encType_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->encType = arg2;
  
}


int32_t *_wrap_crx_data_header_t_encType_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->encType);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_imageLevels_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->imageLevels = arg2;
  
}


int32_t *_wrap_crx_data_header_t_imageLevels_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->imageLevels);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_hasTileCols_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->hasTileCols = arg2;
  
}


int32_t *_wrap_crx_data_header_t_hasTileCols_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->hasTileCols);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_hasTileRows_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->hasTileRows = arg2;
  
}


int32_t *_wrap_crx_data_header_t_hasTileRows_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->hasTileRows);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_mdatHdrSize_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, int32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->mdatHdrSize = arg2;
  
}


int32_t *_wrap_crx_data_header_t_mdatHdrSize_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->mdatHdrSize);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_MediaSize_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, uint32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->MediaSize = arg2;
  
}


uint32_t *_wrap_crx_data_header_t_MediaSize_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->MediaSize);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_MediaOffset_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, long long _swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->MediaOffset = arg2;
  
}


long long _wrap_crx_data_header_t_MediaOffset_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->MediaOffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_crx_data_header_t_MediaType_set_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, uint32_t *_swig_go_1) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->MediaType = arg2;
  
}


uint32_t *_wrap_crx_data_header_t_MediaType_get_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  result =  ((arg1)->MediaType);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


crx_data_header_t *_wrap_new_crx_data_header_t_librawgo_fabcac84457d17f6() {
  crx_data_header_t *result = 0 ;
  crx_data_header_t *_swig_go_result;
  
  
  result = (crx_data_header_t *)new crx_data_header_t();
  *(crx_data_header_t **)&_swig_go_result = (crx_data_header_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_crx_data_header_t_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_unpacker_data_t_order_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, short _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  short arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->order = arg2;
  
}


short _wrap_unpacker_data_t_order_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->order);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_sraw_mul_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, short *_swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->sraw_mul;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_unpacker_data_t_sraw_mul_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->sraw_mul);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_cr2_slice_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, short *_swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->cr2_slice;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_unpacker_data_t_cr2_slice_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->cr2_slice);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_kodak_cbpp_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->kodak_cbpp = arg2;
  
}


intgo _wrap_unpacker_data_t_kodak_cbpp_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->kodak_cbpp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_strip_offset_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, long long _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->strip_offset = arg2;
  
}


long long _wrap_unpacker_data_t_strip_offset_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->strip_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_data_offset_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, long long _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->data_offset = arg2;
  
}


long long _wrap_unpacker_data_t_data_offset_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->data_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_meta_offset_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, long long _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->meta_offset = arg2;
  
}


long long _wrap_unpacker_data_t_meta_offset_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->meta_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_data_size_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->data_size = arg2;
  
}


intgo _wrap_unpacker_data_t_data_size_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->data_size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_meta_length_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->meta_length = arg2;
  
}


intgo _wrap_unpacker_data_t_meta_length_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->meta_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_thumb_misc_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->thumb_misc = arg2;
  
}


intgo _wrap_unpacker_data_t_thumb_misc_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->thumb_misc);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_fuji_layout_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_layout = arg2;
  
}


intgo _wrap_unpacker_data_t_fuji_layout_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->fuji_layout);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_tiff_samples_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tiff_samples = arg2;
  
}


intgo _wrap_unpacker_data_t_tiff_samples_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tiff_samples);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_tiff_bps_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tiff_bps = arg2;
  
}


intgo _wrap_unpacker_data_t_tiff_bps_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tiff_bps);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_tiff_compress_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tiff_compress = arg2;
  
}


intgo _wrap_unpacker_data_t_tiff_compress_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tiff_compress);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_tiff_sampleformat_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tiff_sampleformat = arg2;
  
}


intgo _wrap_unpacker_data_t_tiff_sampleformat_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tiff_sampleformat);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_zero_after_ff_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->zero_after_ff = arg2;
  
}


intgo _wrap_unpacker_data_t_zero_after_ff_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->zero_after_ff);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_tile_width_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tile_width = arg2;
  
}


intgo _wrap_unpacker_data_t_tile_width_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tile_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_tile_length_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tile_length = arg2;
  
}


intgo _wrap_unpacker_data_t_tile_length_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tile_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_load_flags_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->load_flags = arg2;
  
}


intgo _wrap_unpacker_data_t_load_flags_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->load_flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_data_error_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->data_error = arg2;
  
}


intgo _wrap_unpacker_data_t_data_error_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->data_error);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_hasselblad_parser_flag_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->hasselblad_parser_flag = arg2;
  
}


intgo _wrap_unpacker_data_t_hasselblad_parser_flag_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->hasselblad_parser_flag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_posRAFData_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, long long _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  long long arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (long long)_swig_go_1; 
  
  if (arg1) (arg1)->posRAFData = arg2;
  
}


long long _wrap_unpacker_data_t_posRAFData_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  long long result;
  long long _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (long long) ((arg1)->posRAFData);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_lenRAFData_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->lenRAFData = arg2;
  
}


intgo _wrap_unpacker_data_t_lenRAFData_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->lenRAFData);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_fuji_total_lines_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_total_lines = arg2;
  
}


intgo _wrap_unpacker_data_t_fuji_total_lines_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->fuji_total_lines);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_fuji_total_blocks_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_total_blocks = arg2;
  
}


intgo _wrap_unpacker_data_t_fuji_total_blocks_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->fuji_total_blocks);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_fuji_block_width_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_block_width = arg2;
  
}


intgo _wrap_unpacker_data_t_fuji_block_width_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->fuji_block_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_fuji_bits_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_bits = arg2;
  
}


intgo _wrap_unpacker_data_t_fuji_bits_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->fuji_bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_fuji_raw_type_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_raw_type = arg2;
  
}


intgo _wrap_unpacker_data_t_fuji_raw_type_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->fuji_raw_type);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_pana_encoding_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->pana_encoding = arg2;
  
}


intgo _wrap_unpacker_data_t_pana_encoding_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->pana_encoding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_pana_bpp_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->pana_bpp = arg2;
  
}


intgo _wrap_unpacker_data_t_pana_bpp_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->pana_bpp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_crx_header_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, crx_data_header_t *_swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  crx_data_header_t *arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = *(crx_data_header_t **)&_swig_go_1; 
  
  {
    size_t ii;
    crx_data_header_t *b = (crx_data_header_t *) arg1->crx_header;
    for (ii = 0; ii < (size_t)LIBRAW_CRXTRACKS_MAXCOUNT; ii++) b[ii] = *((crx_data_header_t *) arg2 + ii);
  }
  
}


crx_data_header_t (*_wrap_unpacker_data_t_crx_header_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0))[LIBRAW_CRXTRACKS_MAXCOUNT] {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  crx_data_header_t *result = 0 ;
  crx_data_header_t (*_swig_go_result)[LIBRAW_CRXTRACKS_MAXCOUNT];
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (crx_data_header_t *)(crx_data_header_t *) ((arg1)->crx_header);
  *(crx_data_header_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_crx_track_selected_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->crx_track_selected = arg2;
  
}


intgo _wrap_unpacker_data_t_crx_track_selected_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->crx_track_selected);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_CR3_CTMDtag_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, short _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  short arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->CR3_CTMDtag = arg2;
  
}


short _wrap_unpacker_data_t_CR3_CTMDtag_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->CR3_CTMDtag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_CR3_Version_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, short _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  short arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->CR3_Version = arg2;
  
}


short _wrap_unpacker_data_t_CR3_Version_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->CR3_Version);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_CM_found_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->CM_found = arg2;
  
}


intgo _wrap_unpacker_data_t_CM_found_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->CM_found);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_is_NikonTransfer_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->is_NikonTransfer = arg2;
  
}


intgo _wrap_unpacker_data_t_is_NikonTransfer_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->is_NikonTransfer);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_is_Sony_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->is_Sony = arg2;
  
}


intgo _wrap_unpacker_data_t_is_Sony_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->is_Sony);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_is_pana_raw_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->is_pana_raw = arg2;
  
}


intgo _wrap_unpacker_data_t_is_pana_raw_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->is_pana_raw);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_is_4K_RAFdata_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->is_4K_RAFdata = arg2;
  
}


intgo _wrap_unpacker_data_t_is_4K_RAFdata_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->is_4K_RAFdata);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_is_PentaxRicohMakernotes_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->is_PentaxRicohMakernotes = arg2;
  
}


intgo _wrap_unpacker_data_t_is_PentaxRicohMakernotes_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->is_PentaxRicohMakernotes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_dng_frames_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, intgo *_swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->dng_frames;
    for (ii = 0; ii < (size_t)LIBRAW_IFD_MAXCOUNT*2; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_unpacker_data_t_dng_frames_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->dng_frames);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpacker_data_t_raw_stride_set_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0, short _swig_go_1) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->raw_stride = arg2;
  
}


short _wrap_unpacker_data_t_raw_stride_get_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->raw_stride);
  _swig_go_result = result; 
  return _swig_go_result;
}


unpacker_data_t *_wrap_new_unpacker_data_t_librawgo_fabcac84457d17f6() {
  unpacker_data_t *result = 0 ;
  unpacker_data_t *_swig_go_result;
  
  
  result = (unpacker_data_t *)new unpacker_data_t();
  *(unpacker_data_t **)&_swig_go_result = (unpacker_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_unpacker_data_t_librawgo_fabcac84457d17f6(unpacker_data_t *_swig_go_0) {
  unpacker_data_t *arg1 = (unpacker_data_t *) 0 ;
  
  arg1 = *(unpacker_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_internal_data_t_internal_data_set_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0, internal_data_t *_swig_go_1) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  internal_data_t *arg2 = (internal_data_t *) 0 ;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  arg2 = *(internal_data_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->internal_data = *arg2;
  
}


internal_data_t *_wrap_libraw_internal_data_t_internal_data_get_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  internal_data_t *result = 0 ;
  internal_data_t *_swig_go_result;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  
  result = (internal_data_t *)& ((arg1)->internal_data);
  *(internal_data_t **)&_swig_go_result = (internal_data_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_data_t_internal_output_params_set_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0, libraw_internal_output_params_t *_swig_go_1) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  libraw_internal_output_params_t *arg2 = (libraw_internal_output_params_t *) 0 ;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  arg2 = *(libraw_internal_output_params_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->internal_output_params = *arg2;
  
}


libraw_internal_output_params_t *_wrap_libraw_internal_data_t_internal_output_params_get_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  libraw_internal_output_params_t *result = 0 ;
  libraw_internal_output_params_t *_swig_go_result;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  
  result = (libraw_internal_output_params_t *)& ((arg1)->internal_output_params);
  *(libraw_internal_output_params_t **)&_swig_go_result = (libraw_internal_output_params_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_data_t_output_data_set_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0, output_data_t *_swig_go_1) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  output_data_t *arg2 = (output_data_t *) 0 ;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  arg2 = *(output_data_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->output_data = *arg2;
  
}


output_data_t *_wrap_libraw_internal_data_t_output_data_get_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  output_data_t *result = 0 ;
  output_data_t *_swig_go_result;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  
  result = (output_data_t *)& ((arg1)->output_data);
  *(output_data_t **)&_swig_go_result = (output_data_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_data_t_identify_data_set_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0, identify_data_t *_swig_go_1) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  identify_data_t *arg2 = (identify_data_t *) 0 ;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  arg2 = *(identify_data_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->identify_data = *arg2;
  
}


identify_data_t *_wrap_libraw_internal_data_t_identify_data_get_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  identify_data_t *result = 0 ;
  identify_data_t *_swig_go_result;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  
  result = (identify_data_t *)& ((arg1)->identify_data);
  *(identify_data_t **)&_swig_go_result = (identify_data_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_data_t_unpacker_data_set_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0, unpacker_data_t *_swig_go_1) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  unpacker_data_t *arg2 = (unpacker_data_t *) 0 ;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  arg2 = *(unpacker_data_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->unpacker_data = *arg2;
  
}


unpacker_data_t *_wrap_libraw_internal_data_t_unpacker_data_get_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  unpacker_data_t *result = 0 ;
  unpacker_data_t *_swig_go_result;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  
  result = (unpacker_data_t *)& ((arg1)->unpacker_data);
  *(unpacker_data_t **)&_swig_go_result = (unpacker_data_t *)result; 
  return _swig_go_result;
}


libraw_internal_data_t *_wrap_new_libraw_internal_data_t_librawgo_fabcac84457d17f6() {
  libraw_internal_data_t *result = 0 ;
  libraw_internal_data_t *_swig_go_result;
  
  
  result = (libraw_internal_data_t *)new libraw_internal_data_t();
  *(libraw_internal_data_t **)&_swig_go_result = (libraw_internal_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_internal_data_t_librawgo_fabcac84457d17f6(libraw_internal_data_t *_swig_go_0) {
  libraw_internal_data_t *arg1 = (libraw_internal_data_t *) 0 ;
  
  arg1 = *(libraw_internal_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_decode_branch_set_librawgo_fabcac84457d17f6(decode *_swig_go_0, decode **_swig_go_1) {
  decode *arg1 = (decode *) 0 ;
  decode **arg2 ;
  
  arg1 = *(decode **)&_swig_go_0; 
  arg2 = *(decode ***)&_swig_go_1; 
  
  {
    size_t ii;
    decode * *b = (decode * *) arg1->branch;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((decode * *) arg2 + ii);
  }
  
}


decode *(*_wrap_decode_branch_get_librawgo_fabcac84457d17f6(decode *_swig_go_0))[2] {
  decode *arg1 = (decode *) 0 ;
  decode **result = 0 ;
  decode *(*_swig_go_result)[2];
  
  arg1 = *(decode **)&_swig_go_0; 
  
  result = (decode **)(decode **) ((arg1)->branch);
  *(decode ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_decode_leaf_set_librawgo_fabcac84457d17f6(decode *_swig_go_0, intgo _swig_go_1) {
  decode *arg1 = (decode *) 0 ;
  int arg2 ;
  
  arg1 = *(decode **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->leaf = arg2;
  
}


intgo _wrap_decode_leaf_get_librawgo_fabcac84457d17f6(decode *_swig_go_0) {
  decode *arg1 = (decode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(decode **)&_swig_go_0; 
  
  result = (int) ((arg1)->leaf);
  _swig_go_result = result; 
  return _swig_go_result;
}


decode *_wrap_new_decode_librawgo_fabcac84457d17f6() {
  decode *result = 0 ;
  decode *_swig_go_result;
  
  
  result = (decode *)new decode();
  *(decode **)&_swig_go_result = (decode *)result; 
  return _swig_go_result;
}


void _wrap_delete_decode_librawgo_fabcac84457d17f6(decode *_swig_go_0) {
  decode *arg1 = (decode *) 0 ;
  
  arg1 = *(decode **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_tiff_ifd_t_t_width_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_width = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_width_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_height_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_height = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_height_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_height);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_bps_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->bps = arg2;
  
}


intgo _wrap_tiff_ifd_t_bps_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->bps);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_comp_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->comp = arg2;
  
}


intgo _wrap_tiff_ifd_t_comp_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->comp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_phint_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->phint = arg2;
  
}


intgo _wrap_tiff_ifd_t_phint_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->phint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_offset_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->offset = arg2;
  
}


intgo _wrap_tiff_ifd_t_offset_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_flip_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_flip = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_flip_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_flip);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_samples_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->samples = arg2;
  
}


intgo _wrap_tiff_ifd_t_samples_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->samples);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_bytes_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->bytes = arg2;
  
}


intgo _wrap_tiff_ifd_t_bytes_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->bytes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_extrasamples_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->extrasamples = arg2;
  
}


intgo _wrap_tiff_ifd_t_extrasamples_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->extrasamples);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_tile_width_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_tile_width = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_tile_width_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_tile_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_tile_length_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_tile_length = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_tile_length_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_tile_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_sample_format_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->sample_format = arg2;
  
}


intgo _wrap_tiff_ifd_t_sample_format_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->sample_format);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_predictor_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->predictor = arg2;
  
}


intgo _wrap_tiff_ifd_t_predictor_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->predictor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_rows_per_strip_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->rows_per_strip = arg2;
  
}


intgo _wrap_tiff_ifd_t_rows_per_strip_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->rows_per_strip);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_strip_offsets_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo *_swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->strip_offsets = arg2;
  
}


intgo *_wrap_tiff_ifd_t_strip_offsets_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int *) ((arg1)->strip_offsets);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_strip_offsets_count_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->strip_offsets_count = arg2;
  
}


intgo _wrap_tiff_ifd_t_strip_offsets_count_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->strip_offsets_count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_strip_byte_counts_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo *_swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->strip_byte_counts = arg2;
  
}


intgo *_wrap_tiff_ifd_t_strip_byte_counts_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int *) ((arg1)->strip_byte_counts);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_strip_byte_counts_count_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->strip_byte_counts_count = arg2;
  
}


intgo _wrap_tiff_ifd_t_strip_byte_counts_count_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->strip_byte_counts_count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_filters_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->t_filters = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_filters_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->t_filters);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_vwidth_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_vwidth = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_vwidth_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_vwidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_vheight_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_vheight = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_vheight_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_vheight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_lm_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_lm = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_lm_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_lm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_tm_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_tm = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_tm_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_tm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_fuji_width_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_fuji_width = arg2;
  
}


intgo _wrap_tiff_ifd_t_t_fuji_width_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_fuji_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_t_shutter_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, float _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  float arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->t_shutter = arg2;
  
}


float _wrap_tiff_ifd_t_t_shutter_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->t_shutter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_opcode2_offset_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, long long _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->opcode2_offset = arg2;
  
}


long long _wrap_tiff_ifd_t_opcode2_offset_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->opcode2_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_lineartable_offset_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, long long _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->lineartable_offset = arg2;
  
}


long long _wrap_tiff_ifd_t_lineartable_offset_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->lineartable_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_lineartable_len_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->lineartable_len = arg2;
  
}


intgo _wrap_tiff_ifd_t_lineartable_len_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->lineartable_len);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_dng_color_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, libraw_dng_color_t *_swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  libraw_dng_color_t *arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = *(libraw_dng_color_t **)&_swig_go_1; 
  
  {
    size_t ii;
    libraw_dng_color_t *b = (libraw_dng_color_t *) arg1->dng_color;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((libraw_dng_color_t *) arg2 + ii);
  }
  
}


libraw_dng_color_t (*_wrap_tiff_ifd_t_dng_color_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0))[2] {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  libraw_dng_color_t *result = 0 ;
  libraw_dng_color_t (*_swig_go_result)[2];
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (libraw_dng_color_t *)(libraw_dng_color_t *) ((arg1)->dng_color);
  *(libraw_dng_color_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_dng_levels_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, libraw_dng_levels_t *_swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  libraw_dng_levels_t *arg2 = (libraw_dng_levels_t *) 0 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = *(libraw_dng_levels_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->dng_levels = *arg2;
  
}


libraw_dng_levels_t *_wrap_tiff_ifd_t_dng_levels_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  libraw_dng_levels_t *result = 0 ;
  libraw_dng_levels_t *_swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (libraw_dng_levels_t *)& ((arg1)->dng_levels);
  *(libraw_dng_levels_t **)&_swig_go_result = (libraw_dng_levels_t *)result; 
  return _swig_go_result;
}


void _wrap_tiff_ifd_t_newsubfiletype_set_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0, intgo _swig_go_1) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->newsubfiletype = arg2;
  
}


intgo _wrap_tiff_ifd_t_newsubfiletype_get_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->newsubfiletype);
  _swig_go_result = result; 
  return _swig_go_result;
}


tiff_ifd_t *_wrap_new_tiff_ifd_t_librawgo_fabcac84457d17f6() {
  tiff_ifd_t *result = 0 ;
  tiff_ifd_t *_swig_go_result;
  
  
  result = (tiff_ifd_t *)new tiff_ifd_t();
  *(tiff_ifd_t **)&_swig_go_result = (tiff_ifd_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_tiff_ifd_t_librawgo_fabcac84457d17f6(tiff_ifd_t *_swig_go_0) {
  tiff_ifd_t *arg1 = (tiff_ifd_t *) 0 ;
  
  arg1 = *(tiff_ifd_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_jhead_algo_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->algo = arg2;
  
}


intgo _wrap_jhead_algo_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->algo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_bits_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->bits = arg2;
  
}


intgo _wrap_jhead_bits_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_high_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->high = arg2;
  
}


intgo _wrap_jhead_high_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->high);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_wide_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->wide = arg2;
  
}


intgo _wrap_jhead_wide_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->wide);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_clrs_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->clrs = arg2;
  
}


intgo _wrap_jhead_clrs_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->clrs);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_sraw_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->sraw = arg2;
  
}


intgo _wrap_jhead_sraw_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->sraw);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_psv_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->psv = arg2;
  
}


intgo _wrap_jhead_psv_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->psv);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_restart_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo _swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->restart = arg2;
  
}


intgo _wrap_jhead_restart_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int) ((arg1)->restart);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_vpred_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, intgo *_swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  int *arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->vpred;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_jhead_vpred_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->vpred);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_quant_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, short *_swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->quant;
    for (ii = 0; ii < (size_t)64; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_jhead_quant_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->quant);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_idct_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, short *_swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->idct;
    for (ii = 0; ii < (size_t)64; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_jhead_idct_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->idct);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_huff_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, short **_swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  ushort **arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = *(ushort ***)&_swig_go_1; 
  
  {
    size_t ii;
    ushort * *b = (ushort * *) arg1->huff;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((ushort * *) arg2 + ii);
  }
  
}


short **_wrap_jhead_huff_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  ushort **result = 0 ;
  short **_swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (ushort **)(ushort **) ((arg1)->huff);
  *(ushort ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_free_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, short **_swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  ushort **arg2 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = *(ushort ***)&_swig_go_1; 
  
  {
    size_t ii;
    ushort * *b = (ushort * *) arg1->free;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((ushort * *) arg2 + ii);
  }
  
}


short **_wrap_jhead_free_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  ushort **result = 0 ;
  short **_swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (ushort **)(ushort **) ((arg1)->free);
  *(ushort ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_jhead_row_set_librawgo_fabcac84457d17f6(jhead *_swig_go_0, short *_swig_go_1) {
  jhead *arg1 = (jhead *) 0 ;
  ushort *arg2 = (ushort *) 0 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  if (arg1) (arg1)->row = arg2;
  
}


short *_wrap_jhead_row_get_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  result = (ushort *) ((arg1)->row);
  *(ushort **)&_swig_go_result = (ushort *)result; 
  return _swig_go_result;
}


jhead *_wrap_new_jhead_librawgo_fabcac84457d17f6() {
  jhead *result = 0 ;
  jhead *_swig_go_result;
  
  
  result = (jhead *)new jhead();
  *(jhead **)&_swig_go_result = (jhead *)result; 
  return _swig_go_result;
}


void _wrap_delete_jhead_librawgo_fabcac84457d17f6(jhead *_swig_go_0) {
  jhead *arg1 = (jhead *) 0 ;
  
  arg1 = *(jhead **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_tiff_tag_tag_set_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0, short _swig_go_1) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->tag = arg2;
  
}


short _wrap_libraw_tiff_tag_tag_get_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->tag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_tiff_tag_Xtype_set_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0, short _swig_go_1) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->type = arg2;
  
}


short _wrap_libraw_tiff_tag_Xtype_get_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->type);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_tiff_tag_count_set_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0, intgo _swig_go_1) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->count = arg2;
  
}


intgo _wrap_libraw_tiff_tag_count_get_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  
  result = (int) ((arg1)->count);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_tiff_tag *_wrap_new_libraw_tiff_tag_librawgo_fabcac84457d17f6() {
  libraw_tiff_tag *result = 0 ;
  libraw_tiff_tag *_swig_go_result;
  
  
  result = (libraw_tiff_tag *)new libraw_tiff_tag();
  *(libraw_tiff_tag **)&_swig_go_result = (libraw_tiff_tag *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_tiff_tag_librawgo_fabcac84457d17f6(libraw_tiff_tag *_swig_go_0) {
  libraw_tiff_tag *arg1 = (libraw_tiff_tag *) 0 ;
  
  arg1 = *(libraw_tiff_tag **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_tiff_hdr_t_order_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->t_order = arg2;
  
}


short _wrap_tiff_hdr_t_order_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->t_order);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_magic_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->magic = arg2;
  
}


short _wrap_tiff_hdr_magic_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->magic);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_ifd_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, intgo _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ifd = arg2;
  
}


intgo _wrap_tiff_hdr_ifd_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (int) ((arg1)->ifd);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_pad_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->pad = arg2;
  
}


short _wrap_tiff_hdr_pad_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->pad);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_ntag_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ntag = arg2;
  
}


short _wrap_tiff_hdr_ntag_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ntag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_tag_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, libraw_tiff_tag *_swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  libraw_tiff_tag *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = *(libraw_tiff_tag **)&_swig_go_1; 
  
  {
    size_t ii;
    libraw_tiff_tag *b = (libraw_tiff_tag *) arg1->tag;
    for (ii = 0; ii < (size_t)23; ii++) b[ii] = *((libraw_tiff_tag *) arg2 + ii);
  }
  
}


libraw_tiff_tag (*_wrap_tiff_hdr_tag_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0))[23] {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  libraw_tiff_tag *result = 0 ;
  libraw_tiff_tag (*_swig_go_result)[23];
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (libraw_tiff_tag *)(libraw_tiff_tag *) ((arg1)->tag);
  *(libraw_tiff_tag **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_nextifd_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, intgo _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  int arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->nextifd = arg2;
  
}


intgo _wrap_tiff_hdr_nextifd_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (int) ((arg1)->nextifd);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_pad2_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->pad2 = arg2;
  
}


short _wrap_tiff_hdr_pad2_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->pad2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_nexif_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->nexif = arg2;
  
}


short _wrap_tiff_hdr_nexif_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->nexif);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_exif_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, libraw_tiff_tag *_swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  libraw_tiff_tag *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = *(libraw_tiff_tag **)&_swig_go_1; 
  
  {
    size_t ii;
    libraw_tiff_tag *b = (libraw_tiff_tag *) arg1->exif;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((libraw_tiff_tag *) arg2 + ii);
  }
  
}


libraw_tiff_tag (*_wrap_tiff_hdr_exif_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0))[4] {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  libraw_tiff_tag *result = 0 ;
  libraw_tiff_tag (*_swig_go_result)[4];
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (libraw_tiff_tag *)(libraw_tiff_tag *) ((arg1)->exif);
  *(libraw_tiff_tag **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_pad3_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->pad3 = arg2;
  
}


short _wrap_tiff_hdr_pad3_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->pad3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_ngps_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ngps = arg2;
  
}


short _wrap_tiff_hdr_ngps_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ngps);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_gpst_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, libraw_tiff_tag *_swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  libraw_tiff_tag *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = *(libraw_tiff_tag **)&_swig_go_1; 
  
  {
    size_t ii;
    libraw_tiff_tag *b = (libraw_tiff_tag *) arg1->gpst;
    for (ii = 0; ii < (size_t)10; ii++) b[ii] = *((libraw_tiff_tag *) arg2 + ii);
  }
  
}


libraw_tiff_tag (*_wrap_tiff_hdr_gpst_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0))[10] {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  libraw_tiff_tag *result = 0 ;
  libraw_tiff_tag (*_swig_go_result)[10];
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (libraw_tiff_tag *)(libraw_tiff_tag *) ((arg1)->gpst);
  *(libraw_tiff_tag **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_bps_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, short *_swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  short *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->bps;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_tiff_hdr_bps_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->bps);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_rat_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, intgo *_swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  int *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->rat;
    for (ii = 0; ii < (size_t)10; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_tiff_hdr_rat_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->rat);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_gps_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, intgo *_swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->gps;
    for (ii = 0; ii < (size_t)26; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_tiff_hdr_gps_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->gps);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tiff_hdr_t_desc_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, _gostring_ _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->t_desc, (const char *)arg2, 512-1);
      arg1->t_desc[512-1] = 0;
    } else {
      arg1->t_desc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_tiff_hdr_t_desc_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->t_desc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_tiff_hdr_t_make_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, _gostring_ _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->t_make, (const char *)arg2, 64-1);
      arg1->t_make[64-1] = 0;
    } else {
      arg1->t_make[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_tiff_hdr_t_make_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->t_make);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_tiff_hdr_t_model_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, _gostring_ _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->t_model, (const char *)arg2, 64-1);
      arg1->t_model[64-1] = 0;
    } else {
      arg1->t_model[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_tiff_hdr_t_model_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->t_model);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_tiff_hdr_soft_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, _gostring_ _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->soft, (const char *)arg2, 32-1);
      arg1->soft[32-1] = 0;
    } else {
      arg1->soft[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_tiff_hdr_soft_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->soft);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_tiff_hdr_date_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, _gostring_ _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->date, (const char *)arg2, 20-1);
      arg1->date[20-1] = 0;
    } else {
      arg1->date[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_tiff_hdr_date_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->date);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_tiff_hdr_t_artist_set_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0, _gostring_ _swig_go_1) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *arg2 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->t_artist, (const char *)arg2, 64-1);
      arg1->t_artist[64-1] = 0;
    } else {
      arg1->t_artist[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_tiff_hdr_t_artist_get_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->t_artist);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


tiff_hdr *_wrap_new_tiff_hdr_librawgo_fabcac84457d17f6() {
  tiff_hdr *result = 0 ;
  tiff_hdr *_swig_go_result;
  
  
  result = (tiff_hdr *)new tiff_hdr();
  *(tiff_hdr **)&_swig_go_result = (tiff_hdr *)result; 
  return _swig_go_result;
}


void _wrap_delete_tiff_hdr_librawgo_fabcac84457d17f6(tiff_hdr *_swig_go_0) {
  tiff_hdr *arg1 = (tiff_hdr *) 0 ;
  
  arg1 = *(tiff_hdr **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_decoder_info_t_decoder_name_set_librawgo_fabcac84457d17f6(libraw_decoder_info_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_decoder_info_t *arg1 = (libraw_decoder_info_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_decoder_info_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->decoder_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->decoder_name, (const char *)arg2);
    } else {
      arg1->decoder_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_decoder_info_t_decoder_name_get_librawgo_fabcac84457d17f6(libraw_decoder_info_t *_swig_go_0) {
  libraw_decoder_info_t *arg1 = (libraw_decoder_info_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_decoder_info_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->decoder_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_decoder_info_t_decoder_flags_set_librawgo_fabcac84457d17f6(libraw_decoder_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_decoder_info_t *arg1 = (libraw_decoder_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_decoder_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->decoder_flags = arg2;
  
}


intgo _wrap_libraw_decoder_info_t_decoder_flags_get_librawgo_fabcac84457d17f6(libraw_decoder_info_t *_swig_go_0) {
  libraw_decoder_info_t *arg1 = (libraw_decoder_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_decoder_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->decoder_flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_decoder_info_t *_wrap_new_libraw_decoder_info_t_librawgo_fabcac84457d17f6() {
  libraw_decoder_info_t *result = 0 ;
  libraw_decoder_info_t *_swig_go_result;
  
  
  result = (libraw_decoder_info_t *)new libraw_decoder_info_t();
  *(libraw_decoder_info_t **)&_swig_go_result = (libraw_decoder_info_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_decoder_info_t_librawgo_fabcac84457d17f6(libraw_decoder_info_t *_swig_go_0) {
  libraw_decoder_info_t *arg1 = (libraw_decoder_info_t *) 0 ;
  
  arg1 = *(libraw_decoder_info_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_internal_output_params_t_mix_green_set_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->mix_green = arg2;
  
}


intgo _wrap_libraw_internal_output_params_t_mix_green_get_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->mix_green);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_output_params_t_raw_color_set_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->raw_color = arg2;
  
}


intgo _wrap_libraw_internal_output_params_t_raw_color_get_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->raw_color);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_output_params_t_zero_is_bad_set_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->zero_is_bad = arg2;
  
}


intgo _wrap_libraw_internal_output_params_t_zero_is_bad_get_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->zero_is_bad);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_output_params_t_shrink_set_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0, short _swig_go_1) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->shrink = arg2;
  
}


short _wrap_libraw_internal_output_params_t_shrink_get_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->shrink);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_internal_output_params_t_fuji_width_set_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0, short _swig_go_1) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->fuji_width = arg2;
  
}


short _wrap_libraw_internal_output_params_t_fuji_width_get_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->fuji_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_internal_output_params_t *_wrap_new_libraw_internal_output_params_t_librawgo_fabcac84457d17f6() {
  libraw_internal_output_params_t *result = 0 ;
  libraw_internal_output_params_t *_swig_go_result;
  
  
  result = (libraw_internal_output_params_t *)new libraw_internal_output_params_t();
  *(libraw_internal_output_params_t **)&_swig_go_result = (libraw_internal_output_params_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_internal_output_params_t_librawgo_fabcac84457d17f6(libraw_internal_output_params_t *_swig_go_0) {
  libraw_internal_output_params_t *arg1 = (libraw_internal_output_params_t *) 0 ;
  
  arg1 = *(libraw_internal_output_params_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_default_memory_callback_librawgo_fabcac84457d17f6(void *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  default_memory_callback(arg1,(char const *)arg2,(char const *)arg3);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_default_data_callback_librawgo_fabcac84457d17f6(void *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  default_data_callback(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_libraw_callbacks_t_mem_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  memory_callback arg2 = (memory_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(memory_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->mem_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_mem_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  memory_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (memory_callback) ((arg1)->mem_cb);
  *(memory_callback *)&_swig_go_result = (memory_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_memcb_data_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void *_swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->memcb_data = arg2;
  
}


void *_wrap_libraw_callbacks_t_memcb_data_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->memcb_data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_data_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  data_callback arg2 = (data_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(data_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->data_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_data_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  data_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (data_callback) ((arg1)->data_cb);
  *(data_callback *)&_swig_go_result = (data_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_datacb_data_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void *_swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->datacb_data = arg2;
  
}


void *_wrap_libraw_callbacks_t_datacb_data_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->datacb_data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_progress_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  progress_callback arg2 = (progress_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(progress_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->progress_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_progress_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  progress_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (progress_callback) ((arg1)->progress_cb);
  *(progress_callback *)&_swig_go_result = (progress_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_progresscb_data_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void *_swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->progresscb_data = arg2;
  
}


void *_wrap_libraw_callbacks_t_progresscb_data_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->progresscb_data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_exif_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  exif_parser_callback arg2 = (exif_parser_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(exif_parser_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->exif_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_exif_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  exif_parser_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (exif_parser_callback) ((arg1)->exif_cb);
  *(exif_parser_callback *)&_swig_go_result = (exif_parser_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_exifparser_data_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void *_swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->exifparser_data = arg2;
  
}


void *_wrap_libraw_callbacks_t_exifparser_data_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->exifparser_data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_pre_identify_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  pre_identify_callback arg2 = (pre_identify_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(pre_identify_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->pre_identify_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_pre_identify_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  pre_identify_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (pre_identify_callback) ((arg1)->pre_identify_cb);
  *(pre_identify_callback *)&_swig_go_result = (pre_identify_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_post_identify_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  post_identify_callback arg2 = (post_identify_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(post_identify_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->post_identify_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_post_identify_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  post_identify_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (post_identify_callback) ((arg1)->post_identify_cb);
  *(post_identify_callback *)&_swig_go_result = (post_identify_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_pre_subtractblack_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->pre_subtractblack_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_pre_subtractblack_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->pre_subtractblack_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_pre_scalecolors_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->pre_scalecolors_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_pre_scalecolors_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->pre_scalecolors_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_pre_preinterpolate_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->pre_preinterpolate_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_pre_preinterpolate_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->pre_preinterpolate_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_pre_interpolate_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->pre_interpolate_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_pre_interpolate_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->pre_interpolate_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_interpolate_bayer_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->interpolate_bayer_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_interpolate_bayer_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->interpolate_bayer_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_interpolate_xtrans_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->interpolate_xtrans_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_interpolate_xtrans_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->interpolate_xtrans_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_post_interpolate_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->post_interpolate_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_post_interpolate_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->post_interpolate_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_pre_converttorgb_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->pre_converttorgb_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_pre_converttorgb_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->pre_converttorgb_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


void _wrap_libraw_callbacks_t_post_converttorgb_cb_set_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0, void* _swig_go_1) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback arg2 = (process_step_callback) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  arg2 = *(process_step_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->post_converttorgb_cb = arg2;
  
}


void* _wrap_libraw_callbacks_t_post_converttorgb_cb_get_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  process_step_callback result;
  void* _swig_go_result;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  result = (process_step_callback) ((arg1)->post_converttorgb_cb);
  *(process_step_callback *)&_swig_go_result = (process_step_callback)result; 
  return _swig_go_result;
}


libraw_callbacks_t *_wrap_new_libraw_callbacks_t_librawgo_fabcac84457d17f6() {
  libraw_callbacks_t *result = 0 ;
  libraw_callbacks_t *_swig_go_result;
  
  
  result = (libraw_callbacks_t *)new libraw_callbacks_t();
  *(libraw_callbacks_t **)&_swig_go_result = (libraw_callbacks_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_callbacks_t_librawgo_fabcac84457d17f6(libraw_callbacks_t *_swig_go_0) {
  libraw_callbacks_t *arg1 = (libraw_callbacks_t *) 0 ;
  
  arg1 = *(libraw_callbacks_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_processed_image_t_Xtype_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, intgo _swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  enum LibRaw_image_formats arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = (enum LibRaw_image_formats)_swig_go_1; 
  
  if (arg1) (arg1)->type = arg2;
  
}


intgo _wrap_libraw_processed_image_t_Xtype_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  enum LibRaw_image_formats result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (enum LibRaw_image_formats) ((arg1)->type);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_libraw_processed_image_t_height_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, short _swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->height = arg2;
  
}


short _wrap_libraw_processed_image_t_height_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->height);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_processed_image_t_width_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, short _swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->width = arg2;
  
}


short _wrap_libraw_processed_image_t_width_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_processed_image_t_colors_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, short _swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->colors = arg2;
  
}


short _wrap_libraw_processed_image_t_colors_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->colors);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_processed_image_t_bits_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, short _swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->bits = arg2;
  
}


short _wrap_libraw_processed_image_t_bits_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_processed_image_t_data_size_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, intgo _swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->data_size = arg2;
  
}


intgo _wrap_libraw_processed_image_t_data_size_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->data_size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_processed_image_t_data_set_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0, char *_swig_go_1) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  unsigned char *arg2 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned char *b = (unsigned char *) arg1->data;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((unsigned char *) arg2 + ii);
  }
  
}


char *_wrap_libraw_processed_image_t_data_get_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  result = (unsigned char *)(unsigned char *) ((arg1)->data);
  *(unsigned char **)&_swig_go_result = result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_new_libraw_processed_image_t_librawgo_fabcac84457d17f6() {
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  
  result = (libraw_processed_image_t *)new libraw_processed_image_t();
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_processed_image_t_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_iparams_t_guard_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->guard, (const char *)arg2, 4-1);
      arg1->guard[4-1] = 0;
    } else {
      arg1->guard[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_guard_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->guard);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_make_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->make, (const char *)arg2, 64-1);
      arg1->make[64-1] = 0;
    } else {
      arg1->make[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_make_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->make);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_model_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->model, (const char *)arg2, 64-1);
      arg1->model[64-1] = 0;
    } else {
      arg1->model[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_model_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->model);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_software_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->software, (const char *)arg2, 64-1);
      arg1->software[64-1] = 0;
    } else {
      arg1->software[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_software_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->software);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_normalized_make_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->normalized_make, (const char *)arg2, 64-1);
      arg1->normalized_make[64-1] = 0;
    } else {
      arg1->normalized_make[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_normalized_make_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->normalized_make);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_normalized_model_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->normalized_model, (const char *)arg2, 64-1);
      arg1->normalized_model[64-1] = 0;
    } else {
      arg1->normalized_model[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_normalized_model_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->normalized_model);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_maker_index_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->maker_index = arg2;
  
}


intgo _wrap_libraw_iparams_t_maker_index_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->maker_index);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_raw_count_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->raw_count = arg2;
  
}


intgo _wrap_libraw_iparams_t_raw_count_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->raw_count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_dng_version_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->dng_version = arg2;
  
}


intgo _wrap_libraw_iparams_t_dng_version_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->dng_version);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_is_foveon_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->is_foveon = arg2;
  
}


intgo _wrap_libraw_iparams_t_is_foveon_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->is_foveon);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_colors_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->colors = arg2;
  
}


intgo _wrap_libraw_iparams_t_colors_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->colors);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_filters_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->filters = arg2;
  
}


intgo _wrap_libraw_iparams_t_filters_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->filters);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_xtrans_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_* _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char (*arg2)[6] ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = *(char (**)[6])&_swig_go_1; 
  
  {
    char (*inp)[6] = (char (*)[6])(arg2);
    char (*dest)[6] = (char (*)[6])(arg1->xtrans);
    size_t ii = 0;
    for (; ii < 6; ++ii) {
      char *ip = inp[ii];
      char *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 6; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


_gostring_* _wrap_libraw_iparams_t_xtrans_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char (*result)[6] = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char (*)[6])(char (*)[6]) ((arg1)->xtrans);
  *(char (**)[6])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_xtrans_abs_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_* _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char (*arg2)[6] ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = *(char (**)[6])&_swig_go_1; 
  
  {
    char (*inp)[6] = (char (*)[6])(arg2);
    char (*dest)[6] = (char (*)[6])(arg1->xtrans_abs);
    size_t ii = 0;
    for (; ii < 6; ++ii) {
      char *ip = inp[ii];
      char *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 6; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


_gostring_* _wrap_libraw_iparams_t_xtrans_abs_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char (*result)[6] = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char (*)[6])(char (*)[6]) ((arg1)->xtrans_abs);
  *(char (**)[6])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_cdesc_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->cdesc, (const char *)arg2, 5-1);
      arg1->cdesc[5-1] = 0;
    } else {
      arg1->cdesc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_cdesc_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->cdesc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_xmplen_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, intgo _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->xmplen = arg2;
  
}


intgo _wrap_libraw_iparams_t_xmplen_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->xmplen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_iparams_t_xmpdata_set_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->xmpdata;
    if (arg2) {
      arg1->xmpdata = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->xmpdata, (const char *)arg2);
    } else {
      arg1->xmpdata = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_iparams_t_xmpdata_get_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->xmpdata);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_iparams_t *_wrap_new_libraw_iparams_t_librawgo_fabcac84457d17f6() {
  libraw_iparams_t *result = 0 ;
  libraw_iparams_t *_swig_go_result;
  
  
  result = (libraw_iparams_t *)new libraw_iparams_t();
  *(libraw_iparams_t **)&_swig_go_result = (libraw_iparams_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_iparams_t_librawgo_fabcac84457d17f6(libraw_iparams_t *_swig_go_0) {
  libraw_iparams_t *arg1 = (libraw_iparams_t *) 0 ;
  
  arg1 = *(libraw_iparams_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_raw_inset_crop_t_cleft_set_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->cleft = arg2;
  
}


short _wrap_libraw_raw_inset_crop_t_cleft_get_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->cleft);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_raw_inset_crop_t_ctop_set_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ctop = arg2;
  
}


short _wrap_libraw_raw_inset_crop_t_ctop_get_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ctop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_raw_inset_crop_t_cwidth_set_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->cwidth = arg2;
  
}


short _wrap_libraw_raw_inset_crop_t_cwidth_get_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->cwidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_raw_inset_crop_t_cheight_set_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->cheight = arg2;
  
}


short _wrap_libraw_raw_inset_crop_t_cheight_get_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->cheight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_raw_inset_crop_t_aspect_set_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->aspect = arg2;
  
}


short _wrap_libraw_raw_inset_crop_t_aspect_get_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->aspect);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_raw_inset_crop_t *_wrap_new_libraw_raw_inset_crop_t_librawgo_fabcac84457d17f6() {
  libraw_raw_inset_crop_t *result = 0 ;
  libraw_raw_inset_crop_t *_swig_go_result;
  
  
  result = (libraw_raw_inset_crop_t *)new libraw_raw_inset_crop_t();
  *(libraw_raw_inset_crop_t **)&_swig_go_result = (libraw_raw_inset_crop_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_raw_inset_crop_t_librawgo_fabcac84457d17f6(libraw_raw_inset_crop_t *_swig_go_0) {
  libraw_raw_inset_crop_t *arg1 = (libraw_raw_inset_crop_t *) 0 ;
  
  arg1 = *(libraw_raw_inset_crop_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_image_sizes_t_raw_height_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->raw_height = arg2;
  
}


short _wrap_libraw_image_sizes_t_raw_height_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->raw_height);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_raw_width_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->raw_width = arg2;
  
}


short _wrap_libraw_image_sizes_t_raw_width_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->raw_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_height_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->height = arg2;
  
}


short _wrap_libraw_image_sizes_t_height_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->height);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_width_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->width = arg2;
  
}


short _wrap_libraw_image_sizes_t_width_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_top_margin_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->top_margin = arg2;
  
}


short _wrap_libraw_image_sizes_t_top_margin_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->top_margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_left_margin_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->left_margin = arg2;
  
}


short _wrap_libraw_image_sizes_t_left_margin_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->left_margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_iheight_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->iheight = arg2;
  
}


short _wrap_libraw_image_sizes_t_iheight_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->iheight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_iwidth_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, short _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->iwidth = arg2;
  
}


short _wrap_libraw_image_sizes_t_iwidth_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->iwidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_raw_pitch_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->raw_pitch = arg2;
  
}


intgo _wrap_libraw_image_sizes_t_raw_pitch_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->raw_pitch);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_pixel_aspect_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, double _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  double arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->pixel_aspect = arg2;
  
}


double _wrap_libraw_image_sizes_t_pixel_aspect_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->pixel_aspect);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_flip_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->flip = arg2;
  
}


intgo _wrap_libraw_image_sizes_t_flip_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->flip);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_mask_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, intgo **_swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  int (*arg2)[4] ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = *(int (**)[4])&_swig_go_1; 
  
  {
    int (*inp)[4] = (int (*)[4])(arg2);
    int (*dest)[4] = (int (*)[4])(arg1->mask);
    size_t ii = 0;
    for (; ii < 8; ++ii) {
      int *ip = inp[ii];
      int *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


intgo **_wrap_libraw_image_sizes_t_mask_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  int (*result)[4] = 0 ;
  intgo **_swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (int (*)[4])(int (*)[4]) ((arg1)->mask);
  *(int (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_image_sizes_t_raw_inset_crop_set_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0, libraw_raw_inset_crop_t *_swig_go_1) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  libraw_raw_inset_crop_t *arg2 = (libraw_raw_inset_crop_t *) 0 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  arg2 = *(libraw_raw_inset_crop_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->raw_inset_crop = *arg2;
  
}


libraw_raw_inset_crop_t *_wrap_libraw_image_sizes_t_raw_inset_crop_get_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  libraw_raw_inset_crop_t *result = 0 ;
  libraw_raw_inset_crop_t *_swig_go_result;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  result = (libraw_raw_inset_crop_t *)& ((arg1)->raw_inset_crop);
  *(libraw_raw_inset_crop_t **)&_swig_go_result = (libraw_raw_inset_crop_t *)result; 
  return _swig_go_result;
}


libraw_image_sizes_t *_wrap_new_libraw_image_sizes_t_librawgo_fabcac84457d17f6() {
  libraw_image_sizes_t *result = 0 ;
  libraw_image_sizes_t *_swig_go_result;
  
  
  result = (libraw_image_sizes_t *)new libraw_image_sizes_t();
  *(libraw_image_sizes_t **)&_swig_go_result = (libraw_image_sizes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_image_sizes_t_librawgo_fabcac84457d17f6(libraw_image_sizes_t *_swig_go_0) {
  libraw_image_sizes_t *arg1 = (libraw_image_sizes_t *) 0 ;
  
  arg1 = *(libraw_image_sizes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ph1_t_format_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->format = arg2;
  
}


intgo _wrap_ph1_t_format_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->format);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_key_off_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->key_off = arg2;
  
}


intgo _wrap_ph1_t_key_off_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->key_off);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_tag_21a_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->tag_21a = arg2;
  
}


intgo _wrap_ph1_t_tag_21a_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->tag_21a);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_t_black_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->t_black = arg2;
  
}


intgo _wrap_ph1_t_t_black_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->t_black);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_split_col_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->split_col = arg2;
  
}


intgo _wrap_ph1_t_split_col_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->split_col);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_black_col_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->black_col = arg2;
  
}


intgo _wrap_ph1_t_black_col_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->black_col);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_split_row_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->split_row = arg2;
  
}


intgo _wrap_ph1_t_split_row_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->split_row);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_black_row_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, intgo _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->black_row = arg2;
  
}


intgo _wrap_ph1_t_black_row_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->black_row);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ph1_t_tag_210_set_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0, float _swig_go_1) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  float arg2 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->tag_210 = arg2;
  
}


float _wrap_ph1_t_tag_210_get_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->tag_210);
  _swig_go_result = result; 
  return _swig_go_result;
}


ph1_t *_wrap_new_ph1_t_librawgo_fabcac84457d17f6() {
  ph1_t *result = 0 ;
  ph1_t *_swig_go_result;
  
  
  result = (ph1_t *)new ph1_t();
  *(ph1_t **)&_swig_go_result = (ph1_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_ph1_t_librawgo_fabcac84457d17f6(ph1_t *_swig_go_0) {
  ph1_t *arg1 = (ph1_t *) 0 ;
  
  arg1 = *(ph1_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_dng_color_t_parsedfields_set_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0, intgo _swig_go_1) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->parsedfields = arg2;
  
}


intgo _wrap_libraw_dng_color_t_parsedfields_get_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->parsedfields);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_color_t_illuminant_set_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0, short _swig_go_1) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->illuminant = arg2;
  
}


short _wrap_libraw_dng_color_t_illuminant_get_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->illuminant);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_color_t_calibration_set_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0, float **_swig_go_1) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  float (*arg2)[4] ;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  arg2 = *(float (**)[4])&_swig_go_1; 
  
  {
    float (*inp)[4] = (float (*)[4])(arg2);
    float (*dest)[4] = (float (*)[4])(arg1->calibration);
    size_t ii = 0;
    for (; ii < 4; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_dng_color_t_calibration_get_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  float (*result)[4] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  
  result = (float (*)[4])(float (*)[4]) ((arg1)->calibration);
  *(float (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_color_t_colormatrix_set_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0, float **_swig_go_1) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->colormatrix);
    size_t ii = 0;
    for (; ii < 4; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_dng_color_t_colormatrix_get_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->colormatrix);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_color_t_forwardmatrix_set_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0, float **_swig_go_1) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  float (*arg2)[4] ;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  arg2 = *(float (**)[4])&_swig_go_1; 
  
  {
    float (*inp)[4] = (float (*)[4])(arg2);
    float (*dest)[4] = (float (*)[4])(arg1->forwardmatrix);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_dng_color_t_forwardmatrix_get_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  float (*result)[4] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  
  result = (float (*)[4])(float (*)[4]) ((arg1)->forwardmatrix);
  *(float (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


libraw_dng_color_t *_wrap_new_libraw_dng_color_t_librawgo_fabcac84457d17f6() {
  libraw_dng_color_t *result = 0 ;
  libraw_dng_color_t *_swig_go_result;
  
  
  result = (libraw_dng_color_t *)new libraw_dng_color_t();
  *(libraw_dng_color_t **)&_swig_go_result = (libraw_dng_color_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_dng_color_t_librawgo_fabcac84457d17f6(libraw_dng_color_t *_swig_go_0) {
  libraw_dng_color_t *arg1 = (libraw_dng_color_t *) 0 ;
  
  arg1 = *(libraw_dng_color_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_dng_levels_t_parsedfields_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, intgo _swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->parsedfields = arg2;
  
}


intgo _wrap_libraw_dng_levels_t_parsedfields_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->parsedfields);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_dng_cblack_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->dng_cblack;
    for (ii = 0; ii < (size_t)LIBRAW_CBLACK_SIZE; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_dng_levels_t_dng_cblack_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->dng_cblack);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_dng_black_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, intgo _swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->dng_black = arg2;
  
}


intgo _wrap_libraw_dng_levels_t_dng_black_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->dng_black);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_dng_fcblack_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, float *_swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->dng_fcblack;
    for (ii = 0; ii < (size_t)LIBRAW_CBLACK_SIZE; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_dng_levels_t_dng_fcblack_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->dng_fcblack);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_dng_fblack_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, float _swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->dng_fblack = arg2;
  
}


float _wrap_libraw_dng_levels_t_dng_fblack_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->dng_fblack);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_dng_whitelevel_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->dng_whitelevel;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_dng_levels_t_dng_whitelevel_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->dng_whitelevel);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_default_crop_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->default_crop;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_dng_levels_t_default_crop_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->default_crop);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_preview_colorspace_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, intgo _swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->preview_colorspace = arg2;
  
}


intgo _wrap_libraw_dng_levels_t_preview_colorspace_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->preview_colorspace);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_analogbalance_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, float *_swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->analogbalance;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_dng_levels_t_analogbalance_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->analogbalance);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_asshotneutral_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, float *_swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->asshotneutral;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_dng_levels_t_asshotneutral_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->asshotneutral);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_baseline_exposure_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, float _swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->baseline_exposure = arg2;
  
}


float _wrap_libraw_dng_levels_t_baseline_exposure_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->baseline_exposure);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dng_levels_t_LinearResponseLimit_set_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0, float _swig_go_1) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->LinearResponseLimit = arg2;
  
}


float _wrap_libraw_dng_levels_t_LinearResponseLimit_get_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->LinearResponseLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_dng_levels_t *_wrap_new_libraw_dng_levels_t_librawgo_fabcac84457d17f6() {
  libraw_dng_levels_t *result = 0 ;
  libraw_dng_levels_t *_swig_go_result;
  
  
  result = (libraw_dng_levels_t *)new libraw_dng_levels_t();
  *(libraw_dng_levels_t **)&_swig_go_result = (libraw_dng_levels_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_dng_levels_t_librawgo_fabcac84457d17f6(libraw_dng_levels_t *_swig_go_0) {
  libraw_dng_levels_t *arg1 = (libraw_dng_levels_t *) 0 ;
  
  arg1 = *(libraw_dng_levels_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_P1_color_t_romm_cam_set_librawgo_fabcac84457d17f6(libraw_P1_color_t *_swig_go_0, float *_swig_go_1) {
  libraw_P1_color_t *arg1 = (libraw_P1_color_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_P1_color_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->romm_cam;
    for (ii = 0; ii < (size_t)9; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_P1_color_t_romm_cam_get_librawgo_fabcac84457d17f6(libraw_P1_color_t *_swig_go_0) {
  libraw_P1_color_t *arg1 = (libraw_P1_color_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_P1_color_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->romm_cam);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


libraw_P1_color_t *_wrap_new_libraw_P1_color_t_librawgo_fabcac84457d17f6() {
  libraw_P1_color_t *result = 0 ;
  libraw_P1_color_t *_swig_go_result;
  
  
  result = (libraw_P1_color_t *)new libraw_P1_color_t();
  *(libraw_P1_color_t **)&_swig_go_result = (libraw_P1_color_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_P1_color_t_librawgo_fabcac84457d17f6(libraw_P1_color_t *_swig_go_0) {
  libraw_P1_color_t *arg1 = (libraw_P1_color_t *) 0 ;
  
  arg1 = *(libraw_P1_color_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_canon_makernotes_t_ColorDataVer_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ColorDataVer = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_ColorDataVer_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->ColorDataVer);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ColorDataSubVer_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ColorDataSubVer = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_ColorDataSubVer_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->ColorDataSubVer);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SpecularWhiteLevel_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->SpecularWhiteLevel = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_SpecularWhiteLevel_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->SpecularWhiteLevel);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_NormalWhiteLevel_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->NormalWhiteLevel = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_NormalWhiteLevel_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->NormalWhiteLevel);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ChannelBlackLevel_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->ChannelBlackLevel;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_canon_makernotes_t_ChannelBlackLevel_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->ChannelBlackLevel);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AverageBlackLevel_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->AverageBlackLevel = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_AverageBlackLevel_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->AverageBlackLevel);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_multishot_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->multishot;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_canon_makernotes_t_multishot_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->multishot);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_MeteringMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->MeteringMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_MeteringMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->MeteringMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SpotMeteringMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SpotMeteringMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SpotMeteringMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SpotMeteringMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashMeteringMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashMeteringMode = arg2;
  
}


char _wrap_libraw_canon_makernotes_t_FlashMeteringMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashMeteringMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashExposureLock_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FlashExposureLock = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FlashExposureLock_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FlashExposureLock);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ExposureMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_ExposureMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ExposureMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AESetting_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->AESetting = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AESetting_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->AESetting);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_HighlightTonePriority_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->HighlightTonePriority = arg2;
  
}


char _wrap_libraw_canon_makernotes_t_HighlightTonePriority_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->HighlightTonePriority);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ImageStabilization_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ImageStabilization = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_ImageStabilization_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ImageStabilization);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FocusMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FocusMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FocusMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FocusMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFPoint_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->AFPoint = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AFPoint_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->AFPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FocusContinuous_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FocusContinuous = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FocusContinuous_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FocusContinuous);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFPointsInFocus30D_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->AFPointsInFocus30D = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AFPointsInFocus30D_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->AFPointsInFocus30D);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFPointsInFocus1D_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->AFPointsInFocus1D;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_canon_makernotes_t_AFPointsInFocus1D_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->AFPointsInFocus1D);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFPointsInFocus5D_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFPointsInFocus5D = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AFPointsInFocus5D_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFPointsInFocus5D);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFAreaMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFAreaMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AFAreaMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFAreaMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_NumAFPoints_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->NumAFPoints = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_NumAFPoints_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->NumAFPoints);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ValidAFPoints_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ValidAFPoints = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_ValidAFPoints_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ValidAFPoints);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFImageWidth_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFImageWidth = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AFImageWidth_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFImageWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFImageHeight_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFImageHeight = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_AFImageHeight_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFImageHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFAreaWidths_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFAreaWidths;
    for (ii = 0; ii < (size_t)61; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_canon_makernotes_t_AFAreaWidths_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFAreaWidths);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFAreaHeights_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFAreaHeights;
    for (ii = 0; ii < (size_t)61; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_canon_makernotes_t_AFAreaHeights_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFAreaHeights);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFAreaXPositions_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFAreaXPositions;
    for (ii = 0; ii < (size_t)61; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_canon_makernotes_t_AFAreaXPositions_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFAreaXPositions);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFAreaYPositions_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFAreaYPositions;
    for (ii = 0; ii < (size_t)61; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_canon_makernotes_t_AFAreaYPositions_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFAreaYPositions);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFPointsInFocus_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFPointsInFocus;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_canon_makernotes_t_AFPointsInFocus_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFPointsInFocus);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFPointsSelected_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFPointsSelected;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_canon_makernotes_t_AFPointsSelected_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFPointsSelected);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_PrimaryAFPoint_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->PrimaryAFPoint = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_PrimaryAFPoint_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->PrimaryAFPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FlashMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FlashMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FlashMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashActivity_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FlashActivity = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FlashActivity_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FlashActivity);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashBits_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FlashBits = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FlashBits_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FlashBits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ManualFlashOutput_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ManualFlashOutput = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_ManualFlashOutput_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ManualFlashOutput);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashOutput_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FlashOutput = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FlashOutput_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FlashOutput);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_FlashGuideNumber_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FlashGuideNumber = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_FlashGuideNumber_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FlashGuideNumber);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_ContinuousDrive_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ContinuousDrive = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_ContinuousDrive_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ContinuousDrive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SensorWidth_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SensorWidth = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SensorWidth_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SensorWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SensorHeight_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SensorHeight = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SensorHeight_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SensorHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SensorLeftBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SensorLeftBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SensorLeftBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SensorLeftBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SensorTopBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SensorTopBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SensorTopBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SensorTopBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SensorRightBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SensorRightBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SensorRightBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SensorRightBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SensorBottomBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SensorBottomBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SensorBottomBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SensorBottomBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_BlackMaskLeftBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->BlackMaskLeftBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_BlackMaskLeftBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->BlackMaskLeftBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_BlackMaskTopBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->BlackMaskTopBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_BlackMaskTopBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->BlackMaskTopBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_BlackMaskRightBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->BlackMaskRightBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_BlackMaskRightBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->BlackMaskRightBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_BlackMaskBottomBorder_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->BlackMaskBottomBorder = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_BlackMaskBottomBorder_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->BlackMaskBottomBorder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFMicroAdjMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->AFMicroAdjMode = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_AFMicroAdjMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->AFMicroAdjMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_AFMicroAdjValue_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, float _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->AFMicroAdjValue = arg2;
  
}


float _wrap_libraw_canon_makernotes_t_AFMicroAdjValue_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->AFMicroAdjValue);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_MakernotesFlip_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->MakernotesFlip = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_MakernotesFlip_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->MakernotesFlip);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_RecordMode_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->RecordMode = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_RecordMode_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->RecordMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_SRAWQuality_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->SRAWQuality = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_SRAWQuality_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->SRAWQuality);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_wbi_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->wbi = arg2;
  
}


intgo _wrap_libraw_canon_makernotes_t_wbi_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->wbi);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_firmware_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, float _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->firmware = arg2;
  
}


float _wrap_libraw_canon_makernotes_t_firmware_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->firmware);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_canon_makernotes_t_RF_lensID_set_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->RF_lensID = arg2;
  
}


short _wrap_libraw_canon_makernotes_t_RF_lensID_get_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->RF_lensID);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_canon_makernotes_t *_wrap_new_libraw_canon_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_canon_makernotes_t *result = 0 ;
  libraw_canon_makernotes_t *_swig_go_result;
  
  
  result = (libraw_canon_makernotes_t *)new libraw_canon_makernotes_t();
  *(libraw_canon_makernotes_t **)&_swig_go_result = (libraw_canon_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_canon_makernotes_t_librawgo_fabcac84457d17f6(libraw_canon_makernotes_t *_swig_go_0) {
  libraw_canon_makernotes_t *arg1 = (libraw_canon_makernotes_t *) 0 ;
  
  arg1 = *(libraw_canon_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_hasselblad_makernotes_t_BaseISO_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->BaseISO = arg2;
  
}


intgo _wrap_libraw_hasselblad_makernotes_t_BaseISO_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->BaseISO);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_Gain_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, double _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  double arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->Gain = arg2;
  
}


double _wrap_libraw_hasselblad_makernotes_t_Gain_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->Gain);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_Sensor_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Sensor, (const char *)arg2, 8-1);
      arg1->Sensor[8-1] = 0;
    } else {
      arg1->Sensor[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_hasselblad_makernotes_t_Sensor_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Sensor);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_SensorUnit_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SensorUnit, (const char *)arg2, 64-1);
      arg1->SensorUnit[64-1] = 0;
    } else {
      arg1->SensorUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_hasselblad_makernotes_t_SensorUnit_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->SensorUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_HostBody_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->HostBody, (const char *)arg2, 64-1);
      arg1->HostBody[64-1] = 0;
    } else {
      arg1->HostBody[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_hasselblad_makernotes_t_HostBody_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->HostBody);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_SensorCode_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->SensorCode = arg2;
  
}


intgo _wrap_libraw_hasselblad_makernotes_t_SensorCode_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->SensorCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_SensorSubCode_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->SensorSubCode = arg2;
  
}


intgo _wrap_libraw_hasselblad_makernotes_t_SensorSubCode_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->SensorSubCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_CoatingCode_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->CoatingCode = arg2;
  
}


intgo _wrap_libraw_hasselblad_makernotes_t_CoatingCode_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->CoatingCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_uncropped_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->uncropped = arg2;
  
}


intgo _wrap_libraw_hasselblad_makernotes_t_uncropped_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->uncropped);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_CaptureSequenceInitiator_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CaptureSequenceInitiator, (const char *)arg2, 32-1);
      arg1->CaptureSequenceInitiator[32-1] = 0;
    } else {
      arg1->CaptureSequenceInitiator[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_hasselblad_makernotes_t_CaptureSequenceInitiator_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->CaptureSequenceInitiator);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_SensorUnitConnector_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SensorUnitConnector, (const char *)arg2, 64-1);
      arg1->SensorUnitConnector[64-1] = 0;
    } else {
      arg1->SensorUnitConnector[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_hasselblad_makernotes_t_SensorUnitConnector_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->SensorUnitConnector);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_format_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->format = arg2;
  
}


intgo _wrap_libraw_hasselblad_makernotes_t_format_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->format);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_nIFD_CM_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->nIFD_CM;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_hasselblad_makernotes_t_nIFD_CM_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->nIFD_CM);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_RecommendedCrop_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->RecommendedCrop;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_hasselblad_makernotes_t_RecommendedCrop_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->RecommendedCrop);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_hasselblad_makernotes_t_mnColorMatrix_set_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0, double **_swig_go_1) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  double (*arg2)[3] ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  arg2 = *(double (**)[3])&_swig_go_1; 
  
  {
    double (*inp)[3] = (double (*)[3])(arg2);
    double (*dest)[3] = (double (*)[3])(arg1->mnColorMatrix);
    size_t ii = 0;
    for (; ii < 4; ++ii) {
      double *ip = inp[ii];
      double *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


double **_wrap_libraw_hasselblad_makernotes_t_mnColorMatrix_get_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  double (*result)[3] = 0 ;
  double **_swig_go_result;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  result = (double (*)[3])(double (*)[3]) ((arg1)->mnColorMatrix);
  *(double (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


libraw_hasselblad_makernotes_t *_wrap_new_libraw_hasselblad_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_hasselblad_makernotes_t *result = 0 ;
  libraw_hasselblad_makernotes_t *_swig_go_result;
  
  
  result = (libraw_hasselblad_makernotes_t *)new libraw_hasselblad_makernotes_t();
  *(libraw_hasselblad_makernotes_t **)&_swig_go_result = (libraw_hasselblad_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_hasselblad_makernotes_t_librawgo_fabcac84457d17f6(libraw_hasselblad_makernotes_t *_swig_go_0) {
  libraw_hasselblad_makernotes_t *arg1 = (libraw_hasselblad_makernotes_t *) 0 ;
  
  arg1 = *(libraw_hasselblad_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_fuji_info_t_ExpoMidPointShift_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, float _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ExpoMidPointShift = arg2;
  
}


float _wrap_libraw_fuji_info_t_ExpoMidPointShift_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->ExpoMidPointShift);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DynamicRange_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->DynamicRange = arg2;
  
}


short _wrap_libraw_fuji_info_t_DynamicRange_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->DynamicRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FilmMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FilmMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_FilmMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FilmMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DynamicRangeSetting_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->DynamicRangeSetting = arg2;
  
}


short _wrap_libraw_fuji_info_t_DynamicRangeSetting_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->DynamicRangeSetting);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DevelopmentDynamicRange_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->DevelopmentDynamicRange = arg2;
  
}


short _wrap_libraw_fuji_info_t_DevelopmentDynamicRange_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->DevelopmentDynamicRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_AutoDynamicRange_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AutoDynamicRange = arg2;
  
}


short _wrap_libraw_fuji_info_t_AutoDynamicRange_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AutoDynamicRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DRangePriority_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->DRangePriority = arg2;
  
}


short _wrap_libraw_fuji_info_t_DRangePriority_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->DRangePriority);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DRangePriorityAuto_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->DRangePriorityAuto = arg2;
  
}


short _wrap_libraw_fuji_info_t_DRangePriorityAuto_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->DRangePriorityAuto);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DRangePriorityFixed_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->DRangePriorityFixed = arg2;
  
}


short _wrap_libraw_fuji_info_t_DRangePriorityFixed_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->DRangePriorityFixed);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_BrightnessCompensation_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, float _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->BrightnessCompensation = arg2;
  
}


float _wrap_libraw_fuji_info_t_BrightnessCompensation_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->BrightnessCompensation);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FocusMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FocusMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_FocusMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FocusMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_AFMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_AFMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FocusPixel_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short *_swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->FocusPixel;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_fuji_info_t_FocusPixel_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->FocusPixel);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_ImageStabilization_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short *_swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->ImageStabilization;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_fuji_info_t_ImageStabilization_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->ImageStabilization);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FlashMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FlashMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_FlashMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FlashMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_WB_Preset_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->WB_Preset = arg2;
  
}


short _wrap_libraw_fuji_info_t_WB_Preset_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->WB_Preset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_ShutterType_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ShutterType = arg2;
  
}


short _wrap_libraw_fuji_info_t_ShutterType_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ShutterType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_ExrMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ExrMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_ExrMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ExrMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_Macro_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->Macro = arg2;
  
}


short _wrap_libraw_fuji_info_t_Macro_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->Macro);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_Rating_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Rating = arg2;
  
}


intgo _wrap_libraw_fuji_info_t_Rating_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Rating);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_CropMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->CropMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_CropMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->CropMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FrameRate_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FrameRate = arg2;
  
}


short _wrap_libraw_fuji_info_t_FrameRate_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FrameRate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FrameWidth_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FrameWidth = arg2;
  
}


short _wrap_libraw_fuji_info_t_FrameWidth_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FrameWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_FrameHeight_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FrameHeight = arg2;
  
}


short _wrap_libraw_fuji_info_t_FrameHeight_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FrameHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_SerialSignature_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SerialSignature, (const char *)arg2, 0x0c+1-1);
      arg1->SerialSignature[0x0c+1-1] = 0;
    } else {
      arg1->SerialSignature[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_fuji_info_t_SerialSignature_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->SerialSignature);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_RAFVersion_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RAFVersion, (const char *)arg2, 4+1-1);
      arg1->RAFVersion[4+1-1] = 0;
    } else {
      arg1->RAFVersion[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_fuji_info_t_RAFVersion_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->RAFVersion);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_RAFDataVersion_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->RAFDataVersion = arg2;
  
}


short _wrap_libraw_fuji_info_t_RAFDataVersion_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->RAFDataVersion);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_isTSNERDTS_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->isTSNERDTS = arg2;
  
}


intgo _wrap_libraw_fuji_info_t_isTSNERDTS_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->isTSNERDTS);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_fuji_info_t_DriveMode_set_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0, short _swig_go_1) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->DriveMode = arg2;
  
}


short _wrap_libraw_fuji_info_t_DriveMode_get_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->DriveMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_fuji_info_t *_wrap_new_libraw_fuji_info_t_librawgo_fabcac84457d17f6() {
  libraw_fuji_info_t *result = 0 ;
  libraw_fuji_info_t *_swig_go_result;
  
  
  result = (libraw_fuji_info_t *)new libraw_fuji_info_t();
  *(libraw_fuji_info_t **)&_swig_go_result = (libraw_fuji_info_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_fuji_info_t_librawgo_fabcac84457d17f6(libraw_fuji_info_t *_swig_go_0) {
  libraw_fuji_info_t *arg1 = (libraw_fuji_info_t *) 0 ;
  
  arg1 = *(libraw_fuji_info_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_sensor_highspeed_crop_t_cleft_set_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->cleft = arg2;
  
}


short _wrap_libraw_sensor_highspeed_crop_t_cleft_get_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->cleft);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sensor_highspeed_crop_t_ctop_set_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ctop = arg2;
  
}


short _wrap_libraw_sensor_highspeed_crop_t_ctop_get_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ctop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sensor_highspeed_crop_t_cwidth_set_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->cwidth = arg2;
  
}


short _wrap_libraw_sensor_highspeed_crop_t_cwidth_get_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->cwidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sensor_highspeed_crop_t_cheight_set_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0, short _swig_go_1) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->cheight = arg2;
  
}


short _wrap_libraw_sensor_highspeed_crop_t_cheight_get_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->cheight);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_sensor_highspeed_crop_t *_wrap_new_libraw_sensor_highspeed_crop_t_librawgo_fabcac84457d17f6() {
  libraw_sensor_highspeed_crop_t *result = 0 ;
  libraw_sensor_highspeed_crop_t *_swig_go_result;
  
  
  result = (libraw_sensor_highspeed_crop_t *)new libraw_sensor_highspeed_crop_t();
  *(libraw_sensor_highspeed_crop_t **)&_swig_go_result = (libraw_sensor_highspeed_crop_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_sensor_highspeed_crop_t_librawgo_fabcac84457d17f6(libraw_sensor_highspeed_crop_t *_swig_go_0) {
  libraw_sensor_highspeed_crop_t *arg1 = (libraw_sensor_highspeed_crop_t *) 0 ;
  
  arg1 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_nikon_makernotes_t_ExposureBracketValue_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, double _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  double arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureBracketValue = arg2;
  
}


double _wrap_libraw_nikon_makernotes_t_ExposureBracketValue_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->ExposureBracketValue);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ActiveDLighting_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ActiveDLighting = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_ActiveDLighting_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ActiveDLighting);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ShootingMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ShootingMode = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_ShootingMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ShootingMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ImageStabilization_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->ImageStabilization;
    for (ii = 0; ii < (size_t)7; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_ImageStabilization_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->ImageStabilization);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_VibrationReduction_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->VibrationReduction = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_VibrationReduction_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->VibrationReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_VRMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->VRMode = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_VRMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->VRMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FocusMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FocusMode, (const char *)arg2, 7-1);
      arg1->FocusMode[7-1] = 0;
    } else {
      arg1->FocusMode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_nikon_makernotes_t_FocusMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->FocusMode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFPoint_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->AFPoint = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_AFPoint_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->AFPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFPointsInFocus_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFPointsInFocus = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFPointsInFocus_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFPointsInFocus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ContrastDetectAF_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->ContrastDetectAF = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_ContrastDetectAF_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->ContrastDetectAF);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFAreaMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->AFAreaMode = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_AFAreaMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->AFAreaMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_PhaseDetectAF_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->PhaseDetectAF = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_PhaseDetectAF_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->PhaseDetectAF);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_PrimaryAFPoint_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->PrimaryAFPoint = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_PrimaryAFPoint_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->PrimaryAFPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFPointsUsed_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->AFPointsUsed;
    for (ii = 0; ii < (size_t)29; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_AFPointsUsed_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->AFPointsUsed);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFImageWidth_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFImageWidth = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFImageWidth_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFImageWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFImageHeight_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFImageHeight = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFImageHeight_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFImageHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFAreaXPposition_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFAreaXPposition = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFAreaXPposition_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFAreaXPposition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFAreaYPosition_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFAreaYPosition = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFAreaYPosition_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFAreaYPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFAreaWidth_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFAreaWidth = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFAreaWidth_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFAreaWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFAreaHeight_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFAreaHeight = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_AFAreaHeight_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFAreaHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ContrastDetectAFInFocus_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->ContrastDetectAFInFocus = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_ContrastDetectAFInFocus_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->ContrastDetectAFInFocus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashSetting_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FlashSetting, (const char *)arg2, 13-1);
      arg1->FlashSetting[13-1] = 0;
    } else {
      arg1->FlashSetting[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_nikon_makernotes_t_FlashSetting_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->FlashSetting);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashType_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FlashType, (const char *)arg2, 20-1);
      arg1->FlashType[20-1] = 0;
    } else {
      arg1->FlashType[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_nikon_makernotes_t_FlashType_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->FlashType);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->FlashExposureCompensation;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_FlashExposureCompensation_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->FlashExposureCompensation);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ExternalFlashExposureComp_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->ExternalFlashExposureComp;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_ExternalFlashExposureComp_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->ExternalFlashExposureComp);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashExposureBracketValue_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->FlashExposureBracketValue;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_FlashExposureBracketValue_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->FlashExposureBracketValue);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashMode = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation2_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  signed char arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (signed char)_swig_go_1; 
  
  if (arg1) (arg1)->FlashExposureCompensation2 = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation2_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  signed char result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (signed char) ((arg1)->FlashExposureCompensation2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation3_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  signed char arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (signed char)_swig_go_1; 
  
  if (arg1) (arg1)->FlashExposureCompensation3 = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation3_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  signed char result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (signed char) ((arg1)->FlashExposureCompensation3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation4_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  signed char arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (signed char)_swig_go_1; 
  
  if (arg1) (arg1)->FlashExposureCompensation4 = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashExposureCompensation4_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  signed char result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (signed char) ((arg1)->FlashExposureCompensation4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashSource_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashSource = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashSource_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashFirmware_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->FlashFirmware;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_FlashFirmware_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->FlashFirmware);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ExternalFlashFlags_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->ExternalFlashFlags = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_ExternalFlashFlags_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->ExternalFlashFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashControlCommanderMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashControlCommanderMode = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashControlCommanderMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashControlCommanderMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashOutputAndCompensation_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashOutputAndCompensation = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashOutputAndCompensation_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashOutputAndCompensation);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashFocalLength_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashFocalLength = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashFocalLength_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashFocalLength);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashGNDistance_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashGNDistance = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashGNDistance_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashGNDistance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashGroupControlMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->FlashGroupControlMode;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_FlashGroupControlMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->FlashGroupControlMode);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashGroupOutputAndCompensation_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->FlashGroupOutputAndCompensation;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_nikon_makernotes_t_FlashGroupOutputAndCompensation_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->FlashGroupOutputAndCompensation);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashColorFilter_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->FlashColorFilter = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_FlashColorFilter_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->FlashColorFilter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_NEFCompression_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->NEFCompression = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_NEFCompression_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->NEFCompression);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ExposureMode_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureMode = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_ExposureMode_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->ExposureMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ExposureProgram_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureProgram = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_ExposureProgram_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->ExposureProgram);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_nMEshots_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->nMEshots = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_nMEshots_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->nMEshots);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_MEgainOn_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->MEgainOn = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_MEgainOn_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->MEgainOn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ME_WB_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, double *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  double *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->ME_WB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_libraw_nikon_makernotes_t_ME_WB_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->ME_WB);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFFineTune_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->AFFineTune = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_AFFineTune_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->AFFineTune);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFFineTuneIndex_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->AFFineTuneIndex = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_AFFineTuneIndex_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->AFFineTuneIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_AFFineTuneAdj_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, int8_t *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->AFFineTuneAdj = arg2;
  
}


int8_t *_wrap_libraw_nikon_makernotes_t_AFFineTuneAdj_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFFineTuneAdj);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_LensDataVersion_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->LensDataVersion = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_LensDataVersion_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->LensDataVersion);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_FlashInfoVersion_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->FlashInfoVersion = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_FlashInfoVersion_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->FlashInfoVersion);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_ColorBalanceVersion_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->ColorBalanceVersion = arg2;
  
}


intgo _wrap_libraw_nikon_makernotes_t_ColorBalanceVersion_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->ColorBalanceVersion);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_key_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->key = arg2;
  
}


char _wrap_libraw_nikon_makernotes_t_key_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->key);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_NEFBitDepth_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->NEFBitDepth;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_nikon_makernotes_t_NEFBitDepth_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->NEFBitDepth);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_HighSpeedCropFormat_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->HighSpeedCropFormat = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_HighSpeedCropFormat_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->HighSpeedCropFormat);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_SensorHighSpeedCrop_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, libraw_sensor_highspeed_crop_t *_swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  libraw_sensor_highspeed_crop_t *arg2 = (libraw_sensor_highspeed_crop_t *) 0 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_sensor_highspeed_crop_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->SensorHighSpeedCrop = *arg2;
  
}


libraw_sensor_highspeed_crop_t *_wrap_libraw_nikon_makernotes_t_SensorHighSpeedCrop_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  libraw_sensor_highspeed_crop_t *result = 0 ;
  libraw_sensor_highspeed_crop_t *_swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_sensor_highspeed_crop_t *)& ((arg1)->SensorHighSpeedCrop);
  *(libraw_sensor_highspeed_crop_t **)&_swig_go_result = (libraw_sensor_highspeed_crop_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_SensorWidth_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->SensorWidth = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_SensorWidth_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->SensorWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikon_makernotes_t_SensorHeight_set_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->SensorHeight = arg2;
  
}


short _wrap_libraw_nikon_makernotes_t_SensorHeight_get_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->SensorHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_nikon_makernotes_t *_wrap_new_libraw_nikon_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_nikon_makernotes_t *result = 0 ;
  libraw_nikon_makernotes_t *_swig_go_result;
  
  
  result = (libraw_nikon_makernotes_t *)new libraw_nikon_makernotes_t();
  *(libraw_nikon_makernotes_t **)&_swig_go_result = (libraw_nikon_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_nikon_makernotes_t_librawgo_fabcac84457d17f6(libraw_nikon_makernotes_t *_swig_go_0) {
  libraw_nikon_makernotes_t *arg1 = (libraw_nikon_makernotes_t *) 0 ;
  
  arg1 = *(libraw_nikon_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_olympus_makernotes_t_SensorCalibration_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->SensorCalibration;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_olympus_makernotes_t_SensorCalibration_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->SensorCalibration);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_FocusMode_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->FocusMode;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_olympus_makernotes_t_FocusMode_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->FocusMode);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AutoFocus_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AutoFocus = arg2;
  
}


short _wrap_libraw_olympus_makernotes_t_AutoFocus_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AutoFocus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AFPoint_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFPoint = arg2;
  
}


short _wrap_libraw_olympus_makernotes_t_AFPoint_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AFAreas_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->AFAreas;
    for (ii = 0; ii < (size_t)64; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_olympus_makernotes_t_AFAreas_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->AFAreas);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AFPointSelected_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, double *_swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  double *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->AFPointSelected;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_libraw_olympus_makernotes_t_AFPointSelected_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->AFPointSelected);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AFResult_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFResult = arg2;
  
}


short _wrap_libraw_olympus_makernotes_t_AFResult_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFResult);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_DriveMode_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->DriveMode;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_olympus_makernotes_t_DriveMode_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->DriveMode);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_ColorSpace_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ColorSpace = arg2;
  
}


short _wrap_libraw_olympus_makernotes_t_ColorSpace_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ColorSpace);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AFFineTune_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->AFFineTune = arg2;
  
}


char _wrap_libraw_olympus_makernotes_t_AFFineTune_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->AFFineTune);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_AFFineTuneAdj_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, short *_swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  short *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->AFFineTuneAdj;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_libraw_olympus_makernotes_t_AFFineTuneAdj_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->AFFineTuneAdj);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_olympus_makernotes_t_CameraType2_set_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CameraType2, (const char *)arg2, 6-1);
      arg1->CameraType2[6-1] = 0;
    } else {
      arg1->CameraType2[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_olympus_makernotes_t_CameraType2_get_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->CameraType2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_olympus_makernotes_t *_wrap_new_libraw_olympus_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_olympus_makernotes_t *result = 0 ;
  libraw_olympus_makernotes_t *_swig_go_result;
  
  
  result = (libraw_olympus_makernotes_t *)new libraw_olympus_makernotes_t();
  *(libraw_olympus_makernotes_t **)&_swig_go_result = (libraw_olympus_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_olympus_makernotes_t_librawgo_fabcac84457d17f6(libraw_olympus_makernotes_t *_swig_go_0) {
  libraw_olympus_makernotes_t *arg1 = (libraw_olympus_makernotes_t *) 0 ;
  
  arg1 = *(libraw_olympus_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_panasonic_makernotes_t_Compression_set_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->Compression = arg2;
  
}


short _wrap_libraw_panasonic_makernotes_t_Compression_get_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->Compression);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_panasonic_makernotes_t_BlackLevelDim_set_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->BlackLevelDim = arg2;
  
}


short _wrap_libraw_panasonic_makernotes_t_BlackLevelDim_get_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->BlackLevelDim);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_panasonic_makernotes_t_BlackLevel_set_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0, float *_swig_go_1) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->BlackLevel;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_panasonic_makernotes_t_BlackLevel_get_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->BlackLevel);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_panasonic_makernotes_t_Multishot_set_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Multishot = arg2;
  
}


intgo _wrap_libraw_panasonic_makernotes_t_Multishot_get_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Multishot);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_panasonic_makernotes_t_gamma_set_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0, float _swig_go_1) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->gamma = arg2;
  
}


float _wrap_libraw_panasonic_makernotes_t_gamma_get_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->gamma);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_panasonic_makernotes_t_HighISOMultiplier_set_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->HighISOMultiplier;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_panasonic_makernotes_t_HighISOMultiplier_get_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->HighISOMultiplier);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


libraw_panasonic_makernotes_t *_wrap_new_libraw_panasonic_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_panasonic_makernotes_t *result = 0 ;
  libraw_panasonic_makernotes_t *_swig_go_result;
  
  
  result = (libraw_panasonic_makernotes_t *)new libraw_panasonic_makernotes_t();
  *(libraw_panasonic_makernotes_t **)&_swig_go_result = (libraw_panasonic_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_panasonic_makernotes_t_librawgo_fabcac84457d17f6(libraw_panasonic_makernotes_t *_swig_go_0) {
  libraw_panasonic_makernotes_t *arg1 = (libraw_panasonic_makernotes_t *) 0 ;
  
  arg1 = *(libraw_panasonic_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_pentax_makernotes_t_FocusMode_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FocusMode = arg2;
  
}


short _wrap_libraw_pentax_makernotes_t_FocusMode_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FocusMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_AFPointSelected_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->AFPointSelected = arg2;
  
}


short _wrap_libraw_pentax_makernotes_t_AFPointSelected_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->AFPointSelected);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_AFPointsInFocus_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->AFPointsInFocus = arg2;
  
}


intgo _wrap_libraw_pentax_makernotes_t_AFPointsInFocus_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->AFPointsInFocus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_FocusPosition_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FocusPosition = arg2;
  
}


short _wrap_libraw_pentax_makernotes_t_FocusPosition_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FocusPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_DriveMode_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, char *_swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  uchar *arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  {
    size_t ii;
    uchar *b = (uchar *) arg1->DriveMode;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((uchar *) arg2 + ii);
  }
  
}


char *_wrap_libraw_pentax_makernotes_t_DriveMode_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (uchar *)(uchar *) ((arg1)->DriveMode);
  *(uchar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_AFAdjustment_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->AFAdjustment = arg2;
  
}


short _wrap_libraw_pentax_makernotes_t_AFAdjustment_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->AFAdjustment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_MultiExposure_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, char _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->MultiExposure = arg2;
  
}


char _wrap_libraw_pentax_makernotes_t_MultiExposure_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->MultiExposure);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_pentax_makernotes_t_Quality_set_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->Quality = arg2;
  
}


short _wrap_libraw_pentax_makernotes_t_Quality_get_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->Quality);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_pentax_makernotes_t *_wrap_new_libraw_pentax_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_pentax_makernotes_t *result = 0 ;
  libraw_pentax_makernotes_t *_swig_go_result;
  
  
  result = (libraw_pentax_makernotes_t *)new libraw_pentax_makernotes_t();
  *(libraw_pentax_makernotes_t **)&_swig_go_result = (libraw_pentax_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_pentax_makernotes_t_librawgo_fabcac84457d17f6(libraw_pentax_makernotes_t *_swig_go_0) {
  libraw_pentax_makernotes_t *arg1 = (libraw_pentax_makernotes_t *) 0 ;
  
  arg1 = *(libraw_pentax_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_samsung_makernotes_t_ImageSizeFull_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->ImageSizeFull;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_samsung_makernotes_t_ImageSizeFull_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->ImageSizeFull);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_samsung_makernotes_t_ImageSizeCrop_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->ImageSizeCrop;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_samsung_makernotes_t_ImageSizeCrop_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->ImageSizeCrop);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_samsung_makernotes_t_ColorSpace_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->ColorSpace;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_samsung_makernotes_t_ColorSpace_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->ColorSpace);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_samsung_makernotes_t_key_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->key;
    for (ii = 0; ii < (size_t)11; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_samsung_makernotes_t_key_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->key);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_samsung_makernotes_t_DigitalGain_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, double _swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  double arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->DigitalGain = arg2;
  
}


double _wrap_libraw_samsung_makernotes_t_DigitalGain_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (double) ((arg1)->DigitalGain);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_samsung_makernotes_t_DeviceType_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, intgo _swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->DeviceType = arg2;
  
}


intgo _wrap_libraw_samsung_makernotes_t_DeviceType_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->DeviceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_samsung_makernotes_t_LensFirmware_set_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LensFirmware, (const char *)arg2, 32-1);
      arg1->LensFirmware[32-1] = 0;
    } else {
      arg1->LensFirmware[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_samsung_makernotes_t_LensFirmware_get_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->LensFirmware);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_samsung_makernotes_t *_wrap_new_libraw_samsung_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_samsung_makernotes_t *result = 0 ;
  libraw_samsung_makernotes_t *_swig_go_result;
  
  
  result = (libraw_samsung_makernotes_t *)new libraw_samsung_makernotes_t();
  *(libraw_samsung_makernotes_t **)&_swig_go_result = (libraw_samsung_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_samsung_makernotes_t_librawgo_fabcac84457d17f6(libraw_samsung_makernotes_t *_swig_go_0) {
  libraw_samsung_makernotes_t *arg1 = (libraw_samsung_makernotes_t *) 0 ;
  
  arg1 = *(libraw_samsung_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_kodak_makernotes_t_BlackLevelTop_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->BlackLevelTop = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_BlackLevelTop_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->BlackLevelTop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_BlackLevelBottom_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->BlackLevelBottom = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_BlackLevelBottom_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->BlackLevelBottom);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_offset_left_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->offset_left = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_offset_left_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->offset_left);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_offset_top_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->offset_top = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_offset_top_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->offset_top);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_clipBlack_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->clipBlack = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_clipBlack_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->clipBlack);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_clipWhite_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->clipWhite = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_clipWhite_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->clipWhite);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_romm_camDaylight_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float **_swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->romm_camDaylight);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_kodak_makernotes_t_romm_camDaylight_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->romm_camDaylight);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_romm_camTungsten_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float **_swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->romm_camTungsten);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_kodak_makernotes_t_romm_camTungsten_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->romm_camTungsten);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_romm_camFluorescent_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float **_swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->romm_camFluorescent);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_kodak_makernotes_t_romm_camFluorescent_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->romm_camFluorescent);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_romm_camFlash_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float **_swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->romm_camFlash);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_kodak_makernotes_t_romm_camFlash_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->romm_camFlash);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_romm_camCustom_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float **_swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->romm_camCustom);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_kodak_makernotes_t_romm_camCustom_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->romm_camCustom);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_romm_camAuto_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float **_swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->romm_camAuto);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_kodak_makernotes_t_romm_camAuto_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->romm_camAuto);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_val018percent_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->val018percent = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_val018percent_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->val018percent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_val100percent_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->val100percent = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_val100percent_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->val100percent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_val170percent_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->val170percent = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_val170percent_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->val170percent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_MakerNoteKodak8a_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, short _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->MakerNoteKodak8a = arg2;
  
}


short _wrap_libraw_kodak_makernotes_t_MakerNoteKodak8a_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->MakerNoteKodak8a);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_ISOCalibrationGain_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ISOCalibrationGain = arg2;
  
}


float _wrap_libraw_kodak_makernotes_t_ISOCalibrationGain_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->ISOCalibrationGain);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_kodak_makernotes_t_AnalogISO_set_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0, float _swig_go_1) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->AnalogISO = arg2;
  
}


float _wrap_libraw_kodak_makernotes_t_AnalogISO_get_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->AnalogISO);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_kodak_makernotes_t *_wrap_new_libraw_kodak_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_kodak_makernotes_t *result = 0 ;
  libraw_kodak_makernotes_t *_swig_go_result;
  
  
  result = (libraw_kodak_makernotes_t *)new libraw_kodak_makernotes_t();
  *(libraw_kodak_makernotes_t **)&_swig_go_result = (libraw_kodak_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_kodak_makernotes_t_librawgo_fabcac84457d17f6(libraw_kodak_makernotes_t *_swig_go_0) {
  libraw_kodak_makernotes_t *arg1 = (libraw_kodak_makernotes_t *) 0 ;
  
  arg1 = *(libraw_kodak_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_p1_makernotes_t_Software_set_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Software, (const char *)arg2, 64-1);
      arg1->Software[64-1] = 0;
    } else {
      arg1->Software[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_p1_makernotes_t_Software_get_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Software);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_p1_makernotes_t_SystemType_set_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SystemType, (const char *)arg2, 64-1);
      arg1->SystemType[64-1] = 0;
    } else {
      arg1->SystemType[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_p1_makernotes_t_SystemType_get_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->SystemType);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_p1_makernotes_t_FirmwareString_set_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FirmwareString, (const char *)arg2, 256-1);
      arg1->FirmwareString[256-1] = 0;
    } else {
      arg1->FirmwareString[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_p1_makernotes_t_FirmwareString_get_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->FirmwareString);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_p1_makernotes_t_SystemModel_set_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SystemModel, (const char *)arg2, 64-1);
      arg1->SystemModel[64-1] = 0;
    } else {
      arg1->SystemModel[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_p1_makernotes_t_SystemModel_get_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->SystemModel);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_p1_makernotes_t *_wrap_new_libraw_p1_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_p1_makernotes_t *result = 0 ;
  libraw_p1_makernotes_t *_swig_go_result;
  
  
  result = (libraw_p1_makernotes_t *)new libraw_p1_makernotes_t();
  *(libraw_p1_makernotes_t **)&_swig_go_result = (libraw_p1_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_p1_makernotes_t_librawgo_fabcac84457d17f6(libraw_p1_makernotes_t *_swig_go_0) {
  libraw_p1_makernotes_t *arg1 = (libraw_p1_makernotes_t *) 0 ;
  
  arg1 = *(libraw_p1_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_sony_info_t_CameraType_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->CameraType = arg2;
  
}


short _wrap_libraw_sony_info_t_CameraType_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->CameraType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Sony0x9400_version_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->Sony0x9400_version = arg2;
  
}


char _wrap_libraw_sony_info_t_Sony0x9400_version_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->Sony0x9400_version);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Sony0x9400_ReleaseMode2_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->Sony0x9400_ReleaseMode2 = arg2;
  
}


char _wrap_libraw_sony_info_t_Sony0x9400_ReleaseMode2_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->Sony0x9400_ReleaseMode2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Sony0x9400_SequenceImageNumber_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Sony0x9400_SequenceImageNumber = arg2;
  
}


intgo _wrap_libraw_sony_info_t_Sony0x9400_SequenceImageNumber_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Sony0x9400_SequenceImageNumber);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Sony0x9400_SequenceLength1_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->Sony0x9400_SequenceLength1 = arg2;
  
}


char _wrap_libraw_sony_info_t_Sony0x9400_SequenceLength1_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->Sony0x9400_SequenceLength1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Sony0x9400_SequenceFileNumber_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Sony0x9400_SequenceFileNumber = arg2;
  
}


intgo _wrap_libraw_sony_info_t_Sony0x9400_SequenceFileNumber_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Sony0x9400_SequenceFileNumber);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Sony0x9400_SequenceLength2_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->Sony0x9400_SequenceLength2 = arg2;
  
}


char _wrap_libraw_sony_info_t_Sony0x9400_SequenceLength2_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->Sony0x9400_SequenceLength2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFAreaModeSetting_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, uint8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->AFAreaModeSetting = arg2;
  
}


uint8_t *_wrap_libraw_sony_info_t_AFAreaModeSetting_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFAreaModeSetting);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_FlexibleSpotPosition_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->FlexibleSpotPosition;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_sony_info_t_FlexibleSpotPosition_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->FlexibleSpotPosition);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFPointSelected_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, uint8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->AFPointSelected = arg2;
  
}


uint8_t *_wrap_libraw_sony_info_t_AFPointSelected_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFPointSelected);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFPointsUsed_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, uint8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t *arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  {
    size_t ii;
    uint8_t *b = (uint8_t *) arg1->AFPointsUsed;
    for (ii = 0; ii < (size_t)10; ii++) b[ii] = *((uint8_t *) arg2 + ii);
  }
  
}


uint8_t (*_wrap_libraw_sony_info_t_AFPointsUsed_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0))[10] {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t *result = 0 ;
  uint8_t (*_swig_go_result)[10];
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (uint8_t *)(uint8_t *) ((arg1)->AFPointsUsed);
  *(uint8_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFTracking_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, uint8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->AFTracking = arg2;
  
}


uint8_t *_wrap_libraw_sony_info_t_AFTracking_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFTracking);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFType_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, uint8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->AFType = arg2;
  
}


uint8_t *_wrap_libraw_sony_info_t_AFType_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFType);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_FocusLocation_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->FocusLocation;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_sony_info_t_FocusLocation_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->FocusLocation);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFMicroAdjValue_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, int8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->AFMicroAdjValue = arg2;
  
}


int8_t *_wrap_libraw_sony_info_t_AFMicroAdjValue_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFMicroAdjValue);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFMicroAdjOn_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, int8_t *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->AFMicroAdjOn = arg2;
  
}


int8_t *_wrap_libraw_sony_info_t_AFMicroAdjOn_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result =  ((arg1)->AFMicroAdjOn);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_AFMicroAdjRegisteredLenses_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->AFMicroAdjRegisteredLenses = arg2;
  
}


char _wrap_libraw_sony_info_t_AFMicroAdjRegisteredLenses_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->AFMicroAdjRegisteredLenses);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_VariableLowPassFilter_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->VariableLowPassFilter = arg2;
  
}


short _wrap_libraw_sony_info_t_VariableLowPassFilter_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->VariableLowPassFilter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_LongExposureNoiseReduction_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->LongExposureNoiseReduction = arg2;
  
}


intgo _wrap_libraw_sony_info_t_LongExposureNoiseReduction_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->LongExposureNoiseReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_HighISONoiseReduction_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->HighISONoiseReduction = arg2;
  
}


short _wrap_libraw_sony_info_t_HighISONoiseReduction_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->HighISONoiseReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_HDR_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short *_swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->HDR;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_sony_info_t_HDR_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->HDR);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_group2010_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->group2010 = arg2;
  
}


short _wrap_libraw_sony_info_t_group2010_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->group2010);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_real_iso_offset_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->real_iso_offset = arg2;
  
}


short _wrap_libraw_sony_info_t_real_iso_offset_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->real_iso_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_MeteringMode_offset_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->MeteringMode_offset = arg2;
  
}


short _wrap_libraw_sony_info_t_MeteringMode_offset_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->MeteringMode_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_ExposureProgram_offset_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureProgram_offset = arg2;
  
}


short _wrap_libraw_sony_info_t_ExposureProgram_offset_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ExposureProgram_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_ReleaseMode2_offset_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ReleaseMode2_offset = arg2;
  
}


short _wrap_libraw_sony_info_t_ReleaseMode2_offset_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ReleaseMode2_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_MinoltaCamID_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->MinoltaCamID = arg2;
  
}


intgo _wrap_libraw_sony_info_t_MinoltaCamID_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->MinoltaCamID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_firmware_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, float _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->firmware = arg2;
  
}


float _wrap_libraw_sony_info_t_firmware_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->firmware);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_ImageCount3_offset_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ImageCount3_offset = arg2;
  
}


short _wrap_libraw_sony_info_t_ImageCount3_offset_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ImageCount3_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_ImageCount3_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->ImageCount3 = arg2;
  
}


intgo _wrap_libraw_sony_info_t_ImageCount3_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->ImageCount3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_ElectronicFrontCurtainShutter_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->ElectronicFrontCurtainShutter = arg2;
  
}


intgo _wrap_libraw_sony_info_t_ElectronicFrontCurtainShutter_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->ElectronicFrontCurtainShutter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_MeteringMode2_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->MeteringMode2 = arg2;
  
}


short _wrap_libraw_sony_info_t_MeteringMode2_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->MeteringMode2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_SonyDateTime_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SonyDateTime, (const char *)arg2, 20-1);
      arg1->SonyDateTime[20-1] = 0;
    } else {
      arg1->SonyDateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_sony_info_t_SonyDateTime_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->SonyDateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_ShotNumberSincePowerUp_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->ShotNumberSincePowerUp = arg2;
  
}


intgo _wrap_libraw_sony_info_t_ShotNumberSincePowerUp_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->ShotNumberSincePowerUp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_PixelShiftGroupPrefix_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->PixelShiftGroupPrefix = arg2;
  
}


short _wrap_libraw_sony_info_t_PixelShiftGroupPrefix_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->PixelShiftGroupPrefix);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_PixelShiftGroupID_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->PixelShiftGroupID = arg2;
  
}


intgo _wrap_libraw_sony_info_t_PixelShiftGroupID_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->PixelShiftGroupID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_nShotsInPixelShiftGroup_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->nShotsInPixelShiftGroup = arg2;
  
}


char _wrap_libraw_sony_info_t_nShotsInPixelShiftGroup_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->nShotsInPixelShiftGroup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_numInPixelShiftGroup_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, char _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->numInPixelShiftGroup = arg2;
  
}


char _wrap_libraw_sony_info_t_numInPixelShiftGroup_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->numInPixelShiftGroup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_prd_ImageHeight_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->prd_ImageHeight = arg2;
  
}


short _wrap_libraw_sony_info_t_prd_ImageHeight_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->prd_ImageHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_prd_ImageWidth_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->prd_ImageWidth = arg2;
  
}


short _wrap_libraw_sony_info_t_prd_ImageWidth_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->prd_ImageWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_prd_RawBitDepth_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->prd_RawBitDepth = arg2;
  
}


short _wrap_libraw_sony_info_t_prd_RawBitDepth_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->prd_RawBitDepth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_prd_StorageMethod_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->prd_StorageMethod = arg2;
  
}


short _wrap_libraw_sony_info_t_prd_StorageMethod_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->prd_StorageMethod);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_prd_BayerPattern_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->prd_BayerPattern = arg2;
  
}


short _wrap_libraw_sony_info_t_prd_BayerPattern_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->prd_BayerPattern);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_SonyRawFileType_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->SonyRawFileType = arg2;
  
}


short _wrap_libraw_sony_info_t_SonyRawFileType_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->SonyRawFileType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_RAWFileType_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->RAWFileType = arg2;
  
}


short _wrap_libraw_sony_info_t_RAWFileType_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->RAWFileType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_Quality_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, intgo _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Quality = arg2;
  
}


intgo _wrap_libraw_sony_info_t_Quality_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Quality);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_sony_info_t_FileFormat_set_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0, short _swig_go_1) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FileFormat = arg2;
  
}


short _wrap_libraw_sony_info_t_FileFormat_get_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FileFormat);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_sony_info_t *_wrap_new_libraw_sony_info_t_librawgo_fabcac84457d17f6() {
  libraw_sony_info_t *result = 0 ;
  libraw_sony_info_t *_swig_go_result;
  
  
  result = (libraw_sony_info_t *)new libraw_sony_info_t();
  *(libraw_sony_info_t **)&_swig_go_result = (libraw_sony_info_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_sony_info_t_librawgo_fabcac84457d17f6(libraw_sony_info_t *_swig_go_0) {
  libraw_sony_info_t *arg1 = (libraw_sony_info_t *) 0 ;
  
  arg1 = *(libraw_sony_info_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_colordata_t_curve_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, short *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  ushort *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  {
    size_t ii;
    ushort *b = (ushort *) arg1->curve;
    for (ii = 0; ii < (size_t)0x10000; ii++) b[ii] = *((ushort *) arg2 + ii);
  }
  
}


short *_wrap_libraw_colordata_t_curve_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (ushort *)(ushort *) ((arg1)->curve);
  *(ushort **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_cblack_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->cblack;
    for (ii = 0; ii < (size_t)LIBRAW_CBLACK_SIZE; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_colordata_t_cblack_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->cblack);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_black_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->black = arg2;
  
}


intgo _wrap_libraw_colordata_t_black_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->black);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_data_maximum_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->data_maximum = arg2;
  
}


intgo _wrap_libraw_colordata_t_data_maximum_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->data_maximum);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_maximum_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->maximum = arg2;
  
}


intgo _wrap_libraw_colordata_t_maximum_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->maximum);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_linear_max_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, long long *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  long *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  {
    size_t ii;
    long *b = (long *) arg1->linear_max;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


long long *_wrap_libraw_colordata_t_linear_max_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  long *result = 0 ;
  long long *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (long *)(long *) ((arg1)->linear_max);
  *(long **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_fmaximum_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->fmaximum = arg2;
  
}


float _wrap_libraw_colordata_t_fmaximum_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->fmaximum);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_fnorm_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->fnorm = arg2;
  
}


float _wrap_libraw_colordata_t_fnorm_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->fnorm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_white_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, short **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  ushort (*arg2)[8] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(ushort (**)[8])&_swig_go_1; 
  
  {
    ushort (*inp)[8] = (ushort (*)[8])(arg2);
    ushort (*dest)[8] = (ushort (*)[8])(arg1->white);
    size_t ii = 0;
    for (; ii < 8; ++ii) {
      ushort *ip = inp[ii];
      ushort *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 8; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


short **_wrap_libraw_colordata_t_white_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  ushort (*result)[8] = 0 ;
  short **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (ushort (*)[8])(ushort (*)[8]) ((arg1)->white);
  *(ushort (**)[8])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_cam_mul_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->cam_mul;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_colordata_t_cam_mul_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->cam_mul);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_pre_mul_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->pre_mul;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_colordata_t_pre_mul_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->pre_mul);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_cmatrix_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*arg2)[4] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float (**)[4])&_swig_go_1; 
  
  {
    float (*inp)[4] = (float (*)[4])(arg2);
    float (*dest)[4] = (float (*)[4])(arg1->cmatrix);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_colordata_t_cmatrix_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*result)[4] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float (*)[4])(float (*)[4]) ((arg1)->cmatrix);
  *(float (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_ccm_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*arg2)[4] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float (**)[4])&_swig_go_1; 
  
  {
    float (*inp)[4] = (float (*)[4])(arg2);
    float (*dest)[4] = (float (*)[4])(arg1->ccm);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_colordata_t_ccm_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*result)[4] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float (*)[4])(float (*)[4]) ((arg1)->ccm);
  *(float (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_rgb_cam_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*arg2)[4] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float (**)[4])&_swig_go_1; 
  
  {
    float (*inp)[4] = (float (*)[4])(arg2);
    float (*dest)[4] = (float (*)[4])(arg1->rgb_cam);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_colordata_t_rgb_cam_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*result)[4] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float (*)[4])(float (*)[4]) ((arg1)->rgb_cam);
  *(float (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_cam_xyz_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*arg2)[3] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  {
    float (*inp)[3] = (float (*)[3])(arg2);
    float (*dest)[3] = (float (*)[3])(arg1->cam_xyz);
    size_t ii = 0;
    for (; ii < 4; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 3; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_colordata_t_cam_xyz_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float (*)[3])(float (*)[3]) ((arg1)->cam_xyz);
  *(float (**)[3])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_phase_one_data_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, ph1_t *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  ph1_t *arg2 = (ph1_t *) 0 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(ph1_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->phase_one_data = *arg2;
  
}


ph1_t *_wrap_libraw_colordata_t_phase_one_data_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  ph1_t *result = 0 ;
  ph1_t *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (ph1_t *)& ((arg1)->phase_one_data);
  *(ph1_t **)&_swig_go_result = (ph1_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_flash_used_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->flash_used = arg2;
  
}


float _wrap_libraw_colordata_t_flash_used_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->flash_used);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_canon_ev_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->canon_ev = arg2;
  
}


float _wrap_libraw_colordata_t_canon_ev_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->canon_ev);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_model2_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->model2, (const char *)arg2, 64-1);
      arg1->model2[64-1] = 0;
    } else {
      arg1->model2[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_colordata_t_model2_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->model2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_UniqueCameraModel_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UniqueCameraModel, (const char *)arg2, 64-1);
      arg1->UniqueCameraModel[64-1] = 0;
    } else {
      arg1->UniqueCameraModel[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_colordata_t_UniqueCameraModel_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->UniqueCameraModel);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_LocalizedCameraModel_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LocalizedCameraModel, (const char *)arg2, 64-1);
      arg1->LocalizedCameraModel[64-1] = 0;
    } else {
      arg1->LocalizedCameraModel[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_colordata_t_LocalizedCameraModel_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->LocalizedCameraModel);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_ImageUniqueID_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ImageUniqueID, (const char *)arg2, 64-1);
      arg1->ImageUniqueID[64-1] = 0;
    } else {
      arg1->ImageUniqueID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_colordata_t_ImageUniqueID_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->ImageUniqueID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_RawDataUniqueID_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RawDataUniqueID, (const char *)arg2, 17-1);
      arg1->RawDataUniqueID[17-1] = 0;
    } else {
      arg1->RawDataUniqueID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_colordata_t_RawDataUniqueID_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->RawDataUniqueID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_OriginalRawFileName_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OriginalRawFileName, (const char *)arg2, 64-1);
      arg1->OriginalRawFileName[64-1] = 0;
    } else {
      arg1->OriginalRawFileName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_colordata_t_OriginalRawFileName_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->OriginalRawFileName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_profile_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, void *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->profile = arg2;
  
}


void *_wrap_libraw_colordata_t_profile_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->profile);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_profile_length_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->profile_length = arg2;
  
}


intgo _wrap_libraw_colordata_t_profile_length_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->profile_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_black_stat_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->black_stat;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_colordata_t_black_stat_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->black_stat);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_dng_color_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, libraw_dng_color_t *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  libraw_dng_color_t *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(libraw_dng_color_t **)&_swig_go_1; 
  
  {
    size_t ii;
    libraw_dng_color_t *b = (libraw_dng_color_t *) arg1->dng_color;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((libraw_dng_color_t *) arg2 + ii);
  }
  
}


libraw_dng_color_t (*_wrap_libraw_colordata_t_dng_color_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0))[2] {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  libraw_dng_color_t *result = 0 ;
  libraw_dng_color_t (*_swig_go_result)[2];
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (libraw_dng_color_t *)(libraw_dng_color_t *) ((arg1)->dng_color);
  *(libraw_dng_color_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_dng_levels_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, libraw_dng_levels_t *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  libraw_dng_levels_t *arg2 = (libraw_dng_levels_t *) 0 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(libraw_dng_levels_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->dng_levels = *arg2;
  
}


libraw_dng_levels_t *_wrap_libraw_colordata_t_dng_levels_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  libraw_dng_levels_t *result = 0 ;
  libraw_dng_levels_t *_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (libraw_dng_levels_t *)& ((arg1)->dng_levels);
  *(libraw_dng_levels_t **)&_swig_go_result = (libraw_dng_levels_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_WB_Coeffs_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  int (*arg2)[4] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(int (**)[4])&_swig_go_1; 
  
  {
    int (*inp)[4] = (int (*)[4])(arg2);
    int (*dest)[4] = (int (*)[4])(arg1->WB_Coeffs);
    size_t ii = 0;
    for (; ii < 256; ++ii) {
      int *ip = inp[ii];
      int *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 4; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


intgo **_wrap_libraw_colordata_t_WB_Coeffs_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  int (*result)[4] = 0 ;
  intgo **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (int (*)[4])(int (*)[4]) ((arg1)->WB_Coeffs);
  *(int (**)[4])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_WBCT_Coeffs_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, float **_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*arg2)[5] ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(float (**)[5])&_swig_go_1; 
  
  {
    float (*inp)[5] = (float (*)[5])(arg2);
    float (*dest)[5] = (float (*)[5])(arg1->WBCT_Coeffs);
    size_t ii = 0;
    for (; ii < 64; ++ii) {
      float *ip = inp[ii];
      float *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 5; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


float **_wrap_libraw_colordata_t_WBCT_Coeffs_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  float (*result)[5] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (float (*)[5])(float (*)[5]) ((arg1)->WBCT_Coeffs);
  *(float (**)[5])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_as_shot_wb_applied_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->as_shot_wb_applied = arg2;
  
}


intgo _wrap_libraw_colordata_t_as_shot_wb_applied_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->as_shot_wb_applied);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_P1_color_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, libraw_P1_color_t *_swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  libraw_P1_color_t *arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = *(libraw_P1_color_t **)&_swig_go_1; 
  
  {
    size_t ii;
    libraw_P1_color_t *b = (libraw_P1_color_t *) arg1->P1_color;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((libraw_P1_color_t *) arg2 + ii);
  }
  
}


libraw_P1_color_t (*_wrap_libraw_colordata_t_P1_color_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0))[2] {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  libraw_P1_color_t *result = 0 ;
  libraw_P1_color_t (*_swig_go_result)[2];
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (libraw_P1_color_t *)(libraw_P1_color_t *) ((arg1)->P1_color);
  *(libraw_P1_color_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_raw_bps_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->raw_bps = arg2;
  
}


intgo _wrap_libraw_colordata_t_raw_bps_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->raw_bps);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_colordata_t_ExifColorSpace_set_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0, intgo _swig_go_1) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ExifColorSpace = arg2;
  
}


intgo _wrap_libraw_colordata_t_ExifColorSpace_get_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->ExifColorSpace);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_colordata_t *_wrap_new_libraw_colordata_t_librawgo_fabcac84457d17f6() {
  libraw_colordata_t *result = 0 ;
  libraw_colordata_t *_swig_go_result;
  
  
  result = (libraw_colordata_t *)new libraw_colordata_t();
  *(libraw_colordata_t **)&_swig_go_result = (libraw_colordata_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_colordata_t_librawgo_fabcac84457d17f6(libraw_colordata_t *_swig_go_0) {
  libraw_colordata_t *arg1 = (libraw_colordata_t *) 0 ;
  
  arg1 = *(libraw_colordata_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_thumbnail_t_tformat_set_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0, intgo _swig_go_1) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  enum LibRaw_thumbnail_formats arg2 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  arg2 = (enum LibRaw_thumbnail_formats)_swig_go_1; 
  
  if (arg1) (arg1)->tformat = arg2;
  
}


intgo _wrap_libraw_thumbnail_t_tformat_get_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  enum LibRaw_thumbnail_formats result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  result = (enum LibRaw_thumbnail_formats) ((arg1)->tformat);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_libraw_thumbnail_t_twidth_set_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0, short _swig_go_1) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->twidth = arg2;
  
}


short _wrap_libraw_thumbnail_t_twidth_get_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->twidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_thumbnail_t_theight_set_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0, short _swig_go_1) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->theight = arg2;
  
}


short _wrap_libraw_thumbnail_t_theight_get_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->theight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_thumbnail_t_tlength_set_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0, intgo _swig_go_1) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->tlength = arg2;
  
}


intgo _wrap_libraw_thumbnail_t_tlength_get_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->tlength);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_thumbnail_t_tcolors_set_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0, intgo _swig_go_1) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->tcolors = arg2;
  
}


intgo _wrap_libraw_thumbnail_t_tcolors_get_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->tcolors);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_thumbnail_t_thumb_set_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->thumb;
    if (arg2) {
      arg1->thumb = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->thumb, (const char *)arg2);
    } else {
      arg1->thumb = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_thumbnail_t_thumb_get_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->thumb);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_thumbnail_t *_wrap_new_libraw_thumbnail_t_librawgo_fabcac84457d17f6() {
  libraw_thumbnail_t *result = 0 ;
  libraw_thumbnail_t *_swig_go_result;
  
  
  result = (libraw_thumbnail_t *)new libraw_thumbnail_t();
  *(libraw_thumbnail_t **)&_swig_go_result = (libraw_thumbnail_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_thumbnail_t_librawgo_fabcac84457d17f6(libraw_thumbnail_t *_swig_go_0) {
  libraw_thumbnail_t *arg1 = (libraw_thumbnail_t *) 0 ;
  
  arg1 = *(libraw_thumbnail_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_gps_info_t_latitude_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, float *_swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->latitude;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_gps_info_t_latitude_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->latitude);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_longitude_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, float *_swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->longitude;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_gps_info_t_longitude_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->longitude);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_gpstimestamp_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, float *_swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->gpstimestamp;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_gps_info_t_gpstimestamp_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->gpstimestamp);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_altitude_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, float _swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->altitude = arg2;
  
}


float _wrap_libraw_gps_info_t_altitude_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->altitude);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_altref_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, char _swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->altref = arg2;
  
}


char _wrap_libraw_gps_info_t_altref_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->altref);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_latref_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, char _swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->latref = arg2;
  
}


char _wrap_libraw_gps_info_t_latref_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->latref);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_longref_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, char _swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->longref = arg2;
  
}


char _wrap_libraw_gps_info_t_longref_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->longref);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_gpsstatus_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, char _swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->gpsstatus = arg2;
  
}


char _wrap_libraw_gps_info_t_gpsstatus_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->gpsstatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_gps_info_t_gpsparsed_set_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0, char _swig_go_1) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char arg2 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->gpsparsed = arg2;
  
}


char _wrap_libraw_gps_info_t_gpsparsed_get_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  result = (char) ((arg1)->gpsparsed);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_gps_info_t *_wrap_new_libraw_gps_info_t_librawgo_fabcac84457d17f6() {
  libraw_gps_info_t *result = 0 ;
  libraw_gps_info_t *_swig_go_result;
  
  
  result = (libraw_gps_info_t *)new libraw_gps_info_t();
  *(libraw_gps_info_t **)&_swig_go_result = (libraw_gps_info_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_gps_info_t_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_imgother_t_iso_speed_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, float _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->iso_speed = arg2;
  
}


float _wrap_libraw_imgother_t_iso_speed_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->iso_speed);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_shutter_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, float _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->shutter = arg2;
  
}


float _wrap_libraw_imgother_t_shutter_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->shutter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_aperture_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, float _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->aperture = arg2;
  
}


float _wrap_libraw_imgother_t_aperture_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->aperture);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_focal_len_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, float _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->focal_len = arg2;
  
}


float _wrap_libraw_imgother_t_focal_len_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->focal_len);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_timestamp_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, time_t *_swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  time_t arg2 ;
  time_t *argp2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  argp2 = (time_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null time_t");
  }
  arg2 = (time_t)*argp2;
  
  
  if (arg1) (arg1)->timestamp = arg2;
  
}


time_t *_wrap_libraw_imgother_t_timestamp_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  time_t result;
  time_t *_swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result =  ((arg1)->timestamp);
  *(time_t **)&_swig_go_result = new time_t(result); 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_shot_order_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, intgo _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->shot_order = arg2;
  
}


intgo _wrap_libraw_imgother_t_shot_order_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->shot_order);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_gpsdata_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->gpsdata;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_imgother_t_gpsdata_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->gpsdata);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_parsed_gps_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, libraw_gps_info_t *_swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  libraw_gps_info_t *arg2 = (libraw_gps_info_t *) 0 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = *(libraw_gps_info_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->parsed_gps = *arg2;
  
}


libraw_gps_info_t *_wrap_libraw_imgother_t_parsed_gps_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  libraw_gps_info_t *result = 0 ;
  libraw_gps_info_t *_swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (libraw_gps_info_t *)& ((arg1)->parsed_gps);
  *(libraw_gps_info_t **)&_swig_go_result = (libraw_gps_info_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_desc_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->desc, (const char *)arg2, 512-1);
      arg1->desc[512-1] = 0;
    } else {
      arg1->desc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_imgother_t_desc_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->desc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_artist_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->artist, (const char *)arg2, 64-1);
      arg1->artist[64-1] = 0;
    } else {
      arg1->artist[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_imgother_t_artist_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->artist);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_imgother_t_analogbalance_set_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0, float *_swig_go_1) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->analogbalance;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_imgother_t_analogbalance_get_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->analogbalance);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


libraw_imgother_t *_wrap_new_libraw_imgother_t_librawgo_fabcac84457d17f6() {
  libraw_imgother_t *result = 0 ;
  libraw_imgother_t *_swig_go_result;
  
  
  result = (libraw_imgother_t *)new libraw_imgother_t();
  *(libraw_imgother_t **)&_swig_go_result = (libraw_imgother_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_imgother_t_librawgo_fabcac84457d17f6(libraw_imgother_t *_swig_go_0) {
  libraw_imgother_t *arg1 = (libraw_imgother_t *) 0 ;
  
  arg1 = *(libraw_imgother_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_metadata_common_t_FlashEC_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FlashEC = arg2;
  
}


float _wrap_libraw_metadata_common_t_FlashEC_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->FlashEC);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_FlashGN_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FlashGN = arg2;
  
}


float _wrap_libraw_metadata_common_t_FlashGN_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->FlashGN);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_CameraTemperature_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->CameraTemperature = arg2;
  
}


float _wrap_libraw_metadata_common_t_CameraTemperature_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->CameraTemperature);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_SensorTemperature_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->SensorTemperature = arg2;
  
}


float _wrap_libraw_metadata_common_t_SensorTemperature_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->SensorTemperature);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_SensorTemperature2_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->SensorTemperature2 = arg2;
  
}


float _wrap_libraw_metadata_common_t_SensorTemperature2_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->SensorTemperature2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_LensTemperature_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->LensTemperature = arg2;
  
}


float _wrap_libraw_metadata_common_t_LensTemperature_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->LensTemperature);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_AmbientTemperature_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->AmbientTemperature = arg2;
  
}


float _wrap_libraw_metadata_common_t_AmbientTemperature_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->AmbientTemperature);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_BatteryTemperature_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->BatteryTemperature = arg2;
  
}


float _wrap_libraw_metadata_common_t_BatteryTemperature_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->BatteryTemperature);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifAmbientTemperature_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifAmbientTemperature = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifAmbientTemperature_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifAmbientTemperature);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifHumidity_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifHumidity = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifHumidity_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifHumidity);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifPressure_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifPressure = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifPressure_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifPressure);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifWaterDepth_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifWaterDepth = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifWaterDepth_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifWaterDepth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifAcceleration_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifAcceleration = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifAcceleration_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifAcceleration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifCameraElevationAngle_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifCameraElevationAngle = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifCameraElevationAngle_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifCameraElevationAngle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_real_ISO_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->real_ISO = arg2;
  
}


float _wrap_libraw_metadata_common_t_real_ISO_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->real_ISO);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_exifExposureIndex_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, float _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exifExposureIndex = arg2;
  
}


float _wrap_libraw_metadata_common_t_exifExposureIndex_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exifExposureIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_ColorSpace_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, short _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->ColorSpace = arg2;
  
}


short _wrap_libraw_metadata_common_t_ColorSpace_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->ColorSpace);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_metadata_common_t_firmware_set_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->firmware, (const char *)arg2, 128-1);
      arg1->firmware[128-1] = 0;
    } else {
      arg1->firmware[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_metadata_common_t_firmware_get_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->firmware);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_metadata_common_t *_wrap_new_libraw_metadata_common_t_librawgo_fabcac84457d17f6() {
  libraw_metadata_common_t *result = 0 ;
  libraw_metadata_common_t *_swig_go_result;
  
  
  result = (libraw_metadata_common_t *)new libraw_metadata_common_t();
  *(libraw_metadata_common_t **)&_swig_go_result = (libraw_metadata_common_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_metadata_common_t_librawgo_fabcac84457d17f6(libraw_metadata_common_t *_swig_go_0) {
  libraw_metadata_common_t *arg1 = (libraw_metadata_common_t *) 0 ;
  
  arg1 = *(libraw_metadata_common_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_output_params_t_greybox_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->greybox;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_output_params_t_greybox_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->greybox);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_cropbox_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->cropbox;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_output_params_t_cropbox_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->cropbox);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_aber_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, double *_swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  double *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->aber;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_libraw_output_params_t_aber_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->aber);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_gamm_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, double *_swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  double *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->gamm;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_libraw_output_params_t_gamm_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->gamm);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_user_mul_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float *_swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->user_mul;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_libraw_output_params_t_user_mul_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->user_mul);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_shot_select_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->shot_select = arg2;
  
}


intgo _wrap_libraw_output_params_t_shot_select_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->shot_select);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_bright_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->bright = arg2;
  
}


float _wrap_libraw_output_params_t_bright_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->bright);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_threshold_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->threshold = arg2;
  
}


float _wrap_libraw_output_params_t_threshold_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_half_size_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->half_size = arg2;
  
}


intgo _wrap_libraw_output_params_t_half_size_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->half_size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_four_color_rgb_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->four_color_rgb = arg2;
  
}


intgo _wrap_libraw_output_params_t_four_color_rgb_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->four_color_rgb);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_highlight_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->highlight = arg2;
  
}


intgo _wrap_libraw_output_params_t_highlight_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->highlight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_use_auto_wb_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->use_auto_wb = arg2;
  
}


intgo _wrap_libraw_output_params_t_use_auto_wb_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->use_auto_wb);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_use_camera_wb_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->use_camera_wb = arg2;
  
}


intgo _wrap_libraw_output_params_t_use_camera_wb_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->use_camera_wb);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_use_camera_matrix_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->use_camera_matrix = arg2;
  
}


intgo _wrap_libraw_output_params_t_use_camera_matrix_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->use_camera_matrix);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_output_color_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->output_color = arg2;
  
}


intgo _wrap_libraw_output_params_t_output_color_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->output_color);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_output_profile_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->output_profile;
    if (arg2) {
      arg1->output_profile = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->output_profile, (const char *)arg2);
    } else {
      arg1->output_profile = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_output_params_t_output_profile_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->output_profile);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_camera_profile_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->camera_profile;
    if (arg2) {
      arg1->camera_profile = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->camera_profile, (const char *)arg2);
    } else {
      arg1->camera_profile = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_output_params_t_camera_profile_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->camera_profile);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_bad_pixels_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->bad_pixels;
    if (arg2) {
      arg1->bad_pixels = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->bad_pixels, (const char *)arg2);
    } else {
      arg1->bad_pixels = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_output_params_t_bad_pixels_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->bad_pixels);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_dark_frame_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->dark_frame;
    if (arg2) {
      arg1->dark_frame = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->dark_frame, (const char *)arg2);
    } else {
      arg1->dark_frame = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_output_params_t_dark_frame_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->dark_frame);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_output_bps_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->output_bps = arg2;
  
}


intgo _wrap_libraw_output_params_t_output_bps_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->output_bps);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_output_tiff_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->output_tiff = arg2;
  
}


intgo _wrap_libraw_output_params_t_output_tiff_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->output_tiff);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_user_flip_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->user_flip = arg2;
  
}


intgo _wrap_libraw_output_params_t_user_flip_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->user_flip);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_user_qual_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->user_qual = arg2;
  
}


intgo _wrap_libraw_output_params_t_user_qual_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->user_qual);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_user_black_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->user_black = arg2;
  
}


intgo _wrap_libraw_output_params_t_user_black_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->user_black);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_user_cblack_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->user_cblack;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_libraw_output_params_t_user_cblack_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->user_cblack);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_user_sat_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->user_sat = arg2;
  
}


intgo _wrap_libraw_output_params_t_user_sat_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->user_sat);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_med_passes_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->med_passes = arg2;
  
}


intgo _wrap_libraw_output_params_t_med_passes_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->med_passes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_auto_bright_thr_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->auto_bright_thr = arg2;
  
}


float _wrap_libraw_output_params_t_auto_bright_thr_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->auto_bright_thr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_adjust_maximum_thr_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->adjust_maximum_thr = arg2;
  
}


float _wrap_libraw_output_params_t_adjust_maximum_thr_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->adjust_maximum_thr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_no_auto_bright_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->no_auto_bright = arg2;
  
}


intgo _wrap_libraw_output_params_t_no_auto_bright_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->no_auto_bright);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_use_fuji_rotate_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->use_fuji_rotate = arg2;
  
}


intgo _wrap_libraw_output_params_t_use_fuji_rotate_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->use_fuji_rotate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_green_matching_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->green_matching = arg2;
  
}


intgo _wrap_libraw_output_params_t_green_matching_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->green_matching);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_dcb_iterations_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dcb_iterations = arg2;
  
}


intgo _wrap_libraw_output_params_t_dcb_iterations_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->dcb_iterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_dcb_enhance_fl_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dcb_enhance_fl = arg2;
  
}


intgo _wrap_libraw_output_params_t_dcb_enhance_fl_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->dcb_enhance_fl);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_fbdd_noiserd_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fbdd_noiserd = arg2;
  
}


intgo _wrap_libraw_output_params_t_fbdd_noiserd_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->fbdd_noiserd);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_exp_correc_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->exp_correc = arg2;
  
}


intgo _wrap_libraw_output_params_t_exp_correc_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->exp_correc);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_exp_shift_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exp_shift = arg2;
  
}


float _wrap_libraw_output_params_t_exp_shift_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exp_shift);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_exp_preser_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->exp_preser = arg2;
  
}


float _wrap_libraw_output_params_t_exp_preser_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->exp_preser);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_use_rawspeed_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->use_rawspeed = arg2;
  
}


intgo _wrap_libraw_output_params_t_use_rawspeed_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->use_rawspeed);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_use_dngsdk_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->use_dngsdk = arg2;
  
}


intgo _wrap_libraw_output_params_t_use_dngsdk_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->use_dngsdk);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_no_auto_scale_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->no_auto_scale = arg2;
  
}


intgo _wrap_libraw_output_params_t_no_auto_scale_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->no_auto_scale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_no_interpolation_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->no_interpolation = arg2;
  
}


intgo _wrap_libraw_output_params_t_no_interpolation_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->no_interpolation);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_raw_processing_options_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->raw_processing_options = arg2;
  
}


intgo _wrap_libraw_output_params_t_raw_processing_options_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->raw_processing_options);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_max_raw_memory_mb_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->max_raw_memory_mb = arg2;
  
}


intgo _wrap_libraw_output_params_t_max_raw_memory_mb_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->max_raw_memory_mb);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_sony_arw2_posterization_thr_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, intgo _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->sony_arw2_posterization_thr = arg2;
  
}


intgo _wrap_libraw_output_params_t_sony_arw2_posterization_thr_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (int) ((arg1)->sony_arw2_posterization_thr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_coolscan_nef_gamma_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, float _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->coolscan_nef_gamma = arg2;
  
}


float _wrap_libraw_output_params_t_coolscan_nef_gamma_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->coolscan_nef_gamma);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_p4shot_order_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->p4shot_order, (const char *)arg2, 5-1);
      arg1->p4shot_order[5-1] = 0;
    } else {
      arg1->p4shot_order[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_output_params_t_p4shot_order_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->p4shot_order);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_output_params_t_custom_camera_strings_set_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0, _gostring_* _swig_go_1) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char **arg2 = (char **) 0 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  if (arg1) (arg1)->custom_camera_strings = arg2;
  
}


_gostring_* _wrap_libraw_output_params_t_custom_camera_strings_get_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  result = (char **) ((arg1)->custom_camera_strings);
  *(char ***)&_swig_go_result = (char **)result; 
  return _swig_go_result;
}


libraw_output_params_t *_wrap_new_libraw_output_params_t_librawgo_fabcac84457d17f6() {
  libraw_output_params_t *result = 0 ;
  libraw_output_params_t *_swig_go_result;
  
  
  result = (libraw_output_params_t *)new libraw_output_params_t();
  *(libraw_output_params_t **)&_swig_go_result = (libraw_output_params_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_output_params_t_librawgo_fabcac84457d17f6(libraw_output_params_t *_swig_go_0) {
  libraw_output_params_t *arg1 = (libraw_output_params_t *) 0 ;
  
  arg1 = *(libraw_output_params_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_rawdata_t_raw_alloc_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, void *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->raw_alloc = arg2;
  
}


void *_wrap_libraw_rawdata_t_raw_alloc_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->raw_alloc);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_raw_image_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, short *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  ushort *arg2 = (ushort *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  if (arg1) (arg1)->raw_image = arg2;
  
}


short *_wrap_libraw_rawdata_t_raw_image_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (ushort *) ((arg1)->raw_image);
  *(ushort **)&_swig_go_result = (ushort *)result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_color4_image_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, short **_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  ushort (*arg2)[4] = (ushort (*)[4]) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(ushort (**)[4])&_swig_go_1; 
  
  if (arg1) (arg1)->color4_image = (ushort (*)[4])arg2;
  
}


short **_wrap_libraw_rawdata_t_color4_image_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  ushort (*result)[4] = 0 ;
  short **_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (ushort (*)[4]) ((arg1)->color4_image);
  *(ushort (**)[4])&_swig_go_result = (ushort (*)[4])result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_color3_image_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, short **_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  ushort (*arg2)[3] = (ushort (*)[3]) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(ushort (**)[3])&_swig_go_1; 
  
  if (arg1) (arg1)->color3_image = (ushort (*)[3])arg2;
  
}


short **_wrap_libraw_rawdata_t_color3_image_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  ushort (*result)[3] = 0 ;
  short **_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (ushort (*)[3]) ((arg1)->color3_image);
  *(ushort (**)[3])&_swig_go_result = (ushort (*)[3])result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_float_image_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, float *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  float *arg2 = (float *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  if (arg1) (arg1)->float_image = arg2;
  
}


float *_wrap_libraw_rawdata_t_float_image_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (float *) ((arg1)->float_image);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_float3_image_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, float **_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  float (*arg2)[3] = (float (*)[3]) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(float (**)[3])&_swig_go_1; 
  
  if (arg1) (arg1)->float3_image = (float (*)[3])arg2;
  
}


float **_wrap_libraw_rawdata_t_float3_image_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  float (*result)[3] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (float (*)[3]) ((arg1)->float3_image);
  *(float (**)[3])&_swig_go_result = (float (*)[3])result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_float4_image_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, float **_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  float (*arg2)[4] = (float (*)[4]) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(float (**)[4])&_swig_go_1; 
  
  if (arg1) (arg1)->float4_image = (float (*)[4])arg2;
  
}


float **_wrap_libraw_rawdata_t_float4_image_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  float (*result)[4] = 0 ;
  float **_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (float (*)[4]) ((arg1)->float4_image);
  *(float (**)[4])&_swig_go_result = (float (*)[4])result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_ph1_cblack_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, short **_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  short (*arg2)[2] = (short (*)[2]) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(short (**)[2])&_swig_go_1; 
  
  if (arg1) (arg1)->ph1_cblack = (short (*)[2])arg2;
  
}


short **_wrap_libraw_rawdata_t_ph1_cblack_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  short (*result)[2] = 0 ;
  short **_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (short (*)[2]) ((arg1)->ph1_cblack);
  *(short (**)[2])&_swig_go_result = (short (*)[2])result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_ph1_rblack_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, short **_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  short (*arg2)[2] = (short (*)[2]) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(short (**)[2])&_swig_go_1; 
  
  if (arg1) (arg1)->ph1_rblack = (short (*)[2])arg2;
  
}


short **_wrap_libraw_rawdata_t_ph1_rblack_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  short (*result)[2] = 0 ;
  short **_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (short (*)[2]) ((arg1)->ph1_rblack);
  *(short (**)[2])&_swig_go_result = (short (*)[2])result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_iparams_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, libraw_iparams_t *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_iparams_t *arg2 = (libraw_iparams_t *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(libraw_iparams_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->iparams = *arg2;
  
}


libraw_iparams_t *_wrap_libraw_rawdata_t_iparams_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_iparams_t *result = 0 ;
  libraw_iparams_t *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (libraw_iparams_t *)& ((arg1)->iparams);
  *(libraw_iparams_t **)&_swig_go_result = (libraw_iparams_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_sizes_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, libraw_image_sizes_t *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_image_sizes_t *arg2 = (libraw_image_sizes_t *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(libraw_image_sizes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->sizes = *arg2;
  
}


libraw_image_sizes_t *_wrap_libraw_rawdata_t_sizes_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_image_sizes_t *result = 0 ;
  libraw_image_sizes_t *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (libraw_image_sizes_t *)& ((arg1)->sizes);
  *(libraw_image_sizes_t **)&_swig_go_result = (libraw_image_sizes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_ioparams_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, libraw_internal_output_params_t *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_internal_output_params_t *arg2 = (libraw_internal_output_params_t *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(libraw_internal_output_params_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->ioparams = *arg2;
  
}


libraw_internal_output_params_t *_wrap_libraw_rawdata_t_ioparams_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_internal_output_params_t *result = 0 ;
  libraw_internal_output_params_t *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (libraw_internal_output_params_t *)& ((arg1)->ioparams);
  *(libraw_internal_output_params_t **)&_swig_go_result = (libraw_internal_output_params_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_rawdata_t_color_set_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0, libraw_colordata_t *_swig_go_1) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_colordata_t *arg2 = (libraw_colordata_t *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  arg2 = *(libraw_colordata_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->color = *arg2;
  
}


libraw_colordata_t *_wrap_libraw_rawdata_t_color_get_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  libraw_colordata_t *result = 0 ;
  libraw_colordata_t *_swig_go_result;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  result = (libraw_colordata_t *)& ((arg1)->color);
  *(libraw_colordata_t **)&_swig_go_result = (libraw_colordata_t *)result; 
  return _swig_go_result;
}


libraw_rawdata_t *_wrap_new_libraw_rawdata_t_librawgo_fabcac84457d17f6() {
  libraw_rawdata_t *result = 0 ;
  libraw_rawdata_t *_swig_go_result;
  
  
  result = (libraw_rawdata_t *)new libraw_rawdata_t();
  *(libraw_rawdata_t **)&_swig_go_result = (libraw_rawdata_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_rawdata_t_librawgo_fabcac84457d17f6(libraw_rawdata_t *_swig_go_0) {
  libraw_rawdata_t *arg1 = (libraw_rawdata_t *) 0 ;
  
  arg1 = *(libraw_rawdata_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_makernotes_lens_t_LensID_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, long long _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->LensID = arg2;
  
}


long long _wrap_libraw_makernotes_lens_t_LensID_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->LensID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_Lens_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Lens, (const char *)arg2, 128-1);
      arg1->Lens[128-1] = 0;
    } else {
      arg1->Lens[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_Lens_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Lens);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_LensFormat_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, short _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->LensFormat = arg2;
  
}


short _wrap_libraw_makernotes_lens_t_LensFormat_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->LensFormat);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_LensMount_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, short _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->LensMount = arg2;
  
}


short _wrap_libraw_makernotes_lens_t_LensMount_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->LensMount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_CamID_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, long long _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->CamID = arg2;
  
}


long long _wrap_libraw_makernotes_lens_t_CamID_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->CamID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_CameraFormat_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, short _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->CameraFormat = arg2;
  
}


short _wrap_libraw_makernotes_lens_t_CameraFormat_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->CameraFormat);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_CameraMount_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, short _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->CameraMount = arg2;
  
}


short _wrap_libraw_makernotes_lens_t_CameraMount_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->CameraMount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_body_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->body, (const char *)arg2, 64-1);
      arg1->body[64-1] = 0;
    } else {
      arg1->body[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_body_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->body);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_FocalType_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, short _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FocalType = arg2;
  
}


short _wrap_libraw_makernotes_lens_t_FocalType_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FocalType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_LensFeatures_pre_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LensFeatures_pre, (const char *)arg2, 16-1);
      arg1->LensFeatures_pre[16-1] = 0;
    } else {
      arg1->LensFeatures_pre[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_LensFeatures_pre_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->LensFeatures_pre);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_LensFeatures_suf_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LensFeatures_suf, (const char *)arg2, 16-1);
      arg1->LensFeatures_suf[16-1] = 0;
    } else {
      arg1->LensFeatures_suf[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_LensFeatures_suf_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->LensFeatures_suf);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MinFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MinFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MaxFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MaxFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MaxAp4MinFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4MinFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MaxAp4MinFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MaxAp4MaxFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4MaxFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MaxAp4MaxFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MinAp4MinFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinAp4MinFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MinAp4MinFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinAp4MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MinAp4MaxFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinAp4MaxFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MinAp4MaxFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinAp4MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MaxAp_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MaxAp_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MinAp_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinAp = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MinAp_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinAp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_CurFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->CurFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_CurFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->CurFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_CurAp_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->CurAp = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_CurAp_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->CurAp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MaxAp4CurFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4CurFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MaxAp4CurFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4CurFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MinAp4CurFocal_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinAp4CurFocal = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MinAp4CurFocal_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinAp4CurFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_MinFocusDistance_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinFocusDistance = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_MinFocusDistance_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinFocusDistance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_FocusRangeIndex_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FocusRangeIndex = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_FocusRangeIndex_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->FocusRangeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_LensFStops_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->LensFStops = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_LensFStops_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->LensFStops);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_TeleconverterID_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, long long _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->TeleconverterID = arg2;
  
}


long long _wrap_libraw_makernotes_lens_t_TeleconverterID_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->TeleconverterID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_Teleconverter_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Teleconverter, (const char *)arg2, 128-1);
      arg1->Teleconverter[128-1] = 0;
    } else {
      arg1->Teleconverter[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_Teleconverter_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Teleconverter);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_AdapterID_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, long long _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->AdapterID = arg2;
  
}


long long _wrap_libraw_makernotes_lens_t_AdapterID_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->AdapterID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_Adapter_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Adapter, (const char *)arg2, 128-1);
      arg1->Adapter[128-1] = 0;
    } else {
      arg1->Adapter[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_Adapter_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Adapter);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_AttachmentID_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, long long _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (unsigned long long)_swig_go_1; 
  
  if (arg1) (arg1)->AttachmentID = arg2;
  
}


long long _wrap_libraw_makernotes_lens_t_AttachmentID_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  unsigned long long result;
  long long _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (unsigned long long) ((arg1)->AttachmentID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_Attachment_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Attachment, (const char *)arg2, 128-1);
      arg1->Attachment[128-1] = 0;
    } else {
      arg1->Attachment[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_makernotes_lens_t_Attachment_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Attachment);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_FocalUnits_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, short _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FocalUnits = arg2;
  
}


short _wrap_libraw_makernotes_lens_t_FocalUnits_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FocalUnits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_lens_t_FocalLengthIn35mmFormat_set_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0, float _swig_go_1) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FocalLengthIn35mmFormat = arg2;
  
}


float _wrap_libraw_makernotes_lens_t_FocalLengthIn35mmFormat_get_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->FocalLengthIn35mmFormat);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_makernotes_lens_t *_wrap_new_libraw_makernotes_lens_t_librawgo_fabcac84457d17f6() {
  libraw_makernotes_lens_t *result = 0 ;
  libraw_makernotes_lens_t *_swig_go_result;
  
  
  result = (libraw_makernotes_lens_t *)new libraw_makernotes_lens_t();
  *(libraw_makernotes_lens_t **)&_swig_go_result = (libraw_makernotes_lens_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_makernotes_lens_t_librawgo_fabcac84457d17f6(libraw_makernotes_lens_t *_swig_go_0) {
  libraw_makernotes_lens_t *arg1 = (libraw_makernotes_lens_t *) 0 ;
  
  arg1 = *(libraw_makernotes_lens_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_nikonlens_t_EffectiveMaxAp_set_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0, float _swig_go_1) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->EffectiveMaxAp = arg2;
  
}


float _wrap_libraw_nikonlens_t_EffectiveMaxAp_get_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->EffectiveMaxAp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikonlens_t_LensIDNumber_set_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0, char _swig_go_1) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->LensIDNumber = arg2;
  
}


char _wrap_libraw_nikonlens_t_LensIDNumber_get_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->LensIDNumber);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikonlens_t_LensFStops_set_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0, char _swig_go_1) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->LensFStops = arg2;
  
}


char _wrap_libraw_nikonlens_t_LensFStops_get_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->LensFStops);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikonlens_t_MCUVersion_set_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0, char _swig_go_1) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->MCUVersion = arg2;
  
}


char _wrap_libraw_nikonlens_t_MCUVersion_get_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->MCUVersion);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_nikonlens_t_LensType_set_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0, char _swig_go_1) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->LensType = arg2;
  
}


char _wrap_libraw_nikonlens_t_LensType_get_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->LensType);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_nikonlens_t *_wrap_new_libraw_nikonlens_t_librawgo_fabcac84457d17f6() {
  libraw_nikonlens_t *result = 0 ;
  libraw_nikonlens_t *_swig_go_result;
  
  
  result = (libraw_nikonlens_t *)new libraw_nikonlens_t();
  *(libraw_nikonlens_t **)&_swig_go_result = (libraw_nikonlens_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_nikonlens_t_librawgo_fabcac84457d17f6(libraw_nikonlens_t *_swig_go_0) {
  libraw_nikonlens_t *arg1 = (libraw_nikonlens_t *) 0 ;
  
  arg1 = *(libraw_nikonlens_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_dnglens_t_MinFocal_set_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0, float _swig_go_1) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinFocal = arg2;
  
}


float _wrap_libraw_dnglens_t_MinFocal_get_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dnglens_t_MaxFocal_set_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0, float _swig_go_1) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxFocal = arg2;
  
}


float _wrap_libraw_dnglens_t_MaxFocal_get_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dnglens_t_MaxAp4MinFocal_set_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0, float _swig_go_1) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4MinFocal = arg2;
  
}


float _wrap_libraw_dnglens_t_MaxAp4MinFocal_get_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_dnglens_t_MaxAp4MaxFocal_set_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0, float _swig_go_1) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4MaxFocal = arg2;
  
}


float _wrap_libraw_dnglens_t_MaxAp4MaxFocal_get_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_dnglens_t *_wrap_new_libraw_dnglens_t_librawgo_fabcac84457d17f6() {
  libraw_dnglens_t *result = 0 ;
  libraw_dnglens_t *_swig_go_result;
  
  
  result = (libraw_dnglens_t *)new libraw_dnglens_t();
  *(libraw_dnglens_t **)&_swig_go_result = (libraw_dnglens_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_dnglens_t_librawgo_fabcac84457d17f6(libraw_dnglens_t *_swig_go_0) {
  libraw_dnglens_t *arg1 = (libraw_dnglens_t *) 0 ;
  
  arg1 = *(libraw_dnglens_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_lensinfo_t_MinFocal_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, float _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MinFocal = arg2;
  
}


float _wrap_libraw_lensinfo_t_MinFocal_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_MaxFocal_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, float _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxFocal = arg2;
  
}


float _wrap_libraw_lensinfo_t_MaxFocal_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_MaxAp4MinFocal_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, float _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4MinFocal = arg2;
  
}


float _wrap_libraw_lensinfo_t_MaxAp4MinFocal_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4MinFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_MaxAp4MaxFocal_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, float _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MaxAp4MaxFocal = arg2;
  
}


float _wrap_libraw_lensinfo_t_MaxAp4MaxFocal_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->MaxAp4MaxFocal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_EXIF_MaxAp_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, float _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->EXIF_MaxAp = arg2;
  
}


float _wrap_libraw_lensinfo_t_EXIF_MaxAp_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (float) ((arg1)->EXIF_MaxAp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_LensMake_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LensMake, (const char *)arg2, 128-1);
      arg1->LensMake[128-1] = 0;
    } else {
      arg1->LensMake[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_lensinfo_t_LensMake_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->LensMake);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_Lens_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Lens, (const char *)arg2, 128-1);
      arg1->Lens[128-1] = 0;
    } else {
      arg1->Lens[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_lensinfo_t_Lens_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Lens);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_LensSerial_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LensSerial, (const char *)arg2, 128-1);
      arg1->LensSerial[128-1] = 0;
    } else {
      arg1->LensSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_lensinfo_t_LensSerial_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->LensSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_InternalLensSerial_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InternalLensSerial, (const char *)arg2, 128-1);
      arg1->InternalLensSerial[128-1] = 0;
    } else {
      arg1->InternalLensSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_lensinfo_t_InternalLensSerial_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->InternalLensSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_FocalLengthIn35mmFormat_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, short _swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->FocalLengthIn35mmFormat = arg2;
  
}


short _wrap_libraw_lensinfo_t_FocalLengthIn35mmFormat_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->FocalLengthIn35mmFormat);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_nikon_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, libraw_nikonlens_t *_swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  libraw_nikonlens_t *arg2 = (libraw_nikonlens_t *) 0 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = *(libraw_nikonlens_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->nikon = *arg2;
  
}


libraw_nikonlens_t *_wrap_libraw_lensinfo_t_nikon_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  libraw_nikonlens_t *result = 0 ;
  libraw_nikonlens_t *_swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (libraw_nikonlens_t *)& ((arg1)->nikon);
  *(libraw_nikonlens_t **)&_swig_go_result = (libraw_nikonlens_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_dng_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, libraw_dnglens_t *_swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  libraw_dnglens_t *arg2 = (libraw_dnglens_t *) 0 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = *(libraw_dnglens_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->dng = *arg2;
  
}


libraw_dnglens_t *_wrap_libraw_lensinfo_t_dng_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  libraw_dnglens_t *result = 0 ;
  libraw_dnglens_t *_swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (libraw_dnglens_t *)& ((arg1)->dng);
  *(libraw_dnglens_t **)&_swig_go_result = (libraw_dnglens_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_lensinfo_t_makernotes_set_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0, libraw_makernotes_lens_t *_swig_go_1) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  libraw_makernotes_lens_t *arg2 = (libraw_makernotes_lens_t *) 0 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  arg2 = *(libraw_makernotes_lens_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->makernotes = *arg2;
  
}


libraw_makernotes_lens_t *_wrap_libraw_lensinfo_t_makernotes_get_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  libraw_makernotes_lens_t *result = 0 ;
  libraw_makernotes_lens_t *_swig_go_result;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  result = (libraw_makernotes_lens_t *)& ((arg1)->makernotes);
  *(libraw_makernotes_lens_t **)&_swig_go_result = (libraw_makernotes_lens_t *)result; 
  return _swig_go_result;
}


libraw_lensinfo_t *_wrap_new_libraw_lensinfo_t_librawgo_fabcac84457d17f6() {
  libraw_lensinfo_t *result = 0 ;
  libraw_lensinfo_t *_swig_go_result;
  
  
  result = (libraw_lensinfo_t *)new libraw_lensinfo_t();
  *(libraw_lensinfo_t **)&_swig_go_result = (libraw_lensinfo_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_lensinfo_t_librawgo_fabcac84457d17f6(libraw_lensinfo_t *_swig_go_0) {
  libraw_lensinfo_t *arg1 = (libraw_lensinfo_t *) 0 ;
  
  arg1 = *(libraw_lensinfo_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_makernotes_t_canon_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_canon_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_canon_makernotes_t *arg2 = (libraw_canon_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_canon_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->canon = *arg2;
  
}


libraw_canon_makernotes_t *_wrap_libraw_makernotes_t_canon_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_canon_makernotes_t *result = 0 ;
  libraw_canon_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_canon_makernotes_t *)& ((arg1)->canon);
  *(libraw_canon_makernotes_t **)&_swig_go_result = (libraw_canon_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_nikon_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_nikon_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_nikon_makernotes_t *arg2 = (libraw_nikon_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_nikon_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->nikon = *arg2;
  
}


libraw_nikon_makernotes_t *_wrap_libraw_makernotes_t_nikon_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_nikon_makernotes_t *result = 0 ;
  libraw_nikon_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_nikon_makernotes_t *)& ((arg1)->nikon);
  *(libraw_nikon_makernotes_t **)&_swig_go_result = (libraw_nikon_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_hasselblad_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_hasselblad_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_hasselblad_makernotes_t *arg2 = (libraw_hasselblad_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_hasselblad_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->hasselblad = *arg2;
  
}


libraw_hasselblad_makernotes_t *_wrap_libraw_makernotes_t_hasselblad_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_hasselblad_makernotes_t *result = 0 ;
  libraw_hasselblad_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_hasselblad_makernotes_t *)& ((arg1)->hasselblad);
  *(libraw_hasselblad_makernotes_t **)&_swig_go_result = (libraw_hasselblad_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_fuji_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_fuji_info_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_fuji_info_t *arg2 = (libraw_fuji_info_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_fuji_info_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->fuji = *arg2;
  
}


libraw_fuji_info_t *_wrap_libraw_makernotes_t_fuji_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_fuji_info_t *result = 0 ;
  libraw_fuji_info_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_fuji_info_t *)& ((arg1)->fuji);
  *(libraw_fuji_info_t **)&_swig_go_result = (libraw_fuji_info_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_olympus_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_olympus_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_olympus_makernotes_t *arg2 = (libraw_olympus_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_olympus_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->olympus = *arg2;
  
}


libraw_olympus_makernotes_t *_wrap_libraw_makernotes_t_olympus_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_olympus_makernotes_t *result = 0 ;
  libraw_olympus_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_olympus_makernotes_t *)& ((arg1)->olympus);
  *(libraw_olympus_makernotes_t **)&_swig_go_result = (libraw_olympus_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_sony_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_sony_info_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_sony_info_t *arg2 = (libraw_sony_info_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_sony_info_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->sony = *arg2;
  
}


libraw_sony_info_t *_wrap_libraw_makernotes_t_sony_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_sony_info_t *result = 0 ;
  libraw_sony_info_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_sony_info_t *)& ((arg1)->sony);
  *(libraw_sony_info_t **)&_swig_go_result = (libraw_sony_info_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_kodak_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_kodak_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_kodak_makernotes_t *arg2 = (libraw_kodak_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_kodak_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->kodak = *arg2;
  
}


libraw_kodak_makernotes_t *_wrap_libraw_makernotes_t_kodak_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_kodak_makernotes_t *result = 0 ;
  libraw_kodak_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_kodak_makernotes_t *)& ((arg1)->kodak);
  *(libraw_kodak_makernotes_t **)&_swig_go_result = (libraw_kodak_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_panasonic_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_panasonic_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_panasonic_makernotes_t *arg2 = (libraw_panasonic_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_panasonic_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->panasonic = *arg2;
  
}


libraw_panasonic_makernotes_t *_wrap_libraw_makernotes_t_panasonic_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_panasonic_makernotes_t *result = 0 ;
  libraw_panasonic_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_panasonic_makernotes_t *)& ((arg1)->panasonic);
  *(libraw_panasonic_makernotes_t **)&_swig_go_result = (libraw_panasonic_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_pentax_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_pentax_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_pentax_makernotes_t *arg2 = (libraw_pentax_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_pentax_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->pentax = *arg2;
  
}


libraw_pentax_makernotes_t *_wrap_libraw_makernotes_t_pentax_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_pentax_makernotes_t *result = 0 ;
  libraw_pentax_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_pentax_makernotes_t *)& ((arg1)->pentax);
  *(libraw_pentax_makernotes_t **)&_swig_go_result = (libraw_pentax_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_phaseone_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_p1_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_p1_makernotes_t *arg2 = (libraw_p1_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_p1_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->phaseone = *arg2;
  
}


libraw_p1_makernotes_t *_wrap_libraw_makernotes_t_phaseone_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_p1_makernotes_t *result = 0 ;
  libraw_p1_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_p1_makernotes_t *)& ((arg1)->phaseone);
  *(libraw_p1_makernotes_t **)&_swig_go_result = (libraw_p1_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_samsung_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_samsung_makernotes_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_samsung_makernotes_t *arg2 = (libraw_samsung_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_samsung_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->samsung = *arg2;
  
}


libraw_samsung_makernotes_t *_wrap_libraw_makernotes_t_samsung_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_samsung_makernotes_t *result = 0 ;
  libraw_samsung_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_samsung_makernotes_t *)& ((arg1)->samsung);
  *(libraw_samsung_makernotes_t **)&_swig_go_result = (libraw_samsung_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_makernotes_t_common_set_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0, libraw_metadata_common_t *_swig_go_1) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_metadata_common_t *arg2 = (libraw_metadata_common_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  arg2 = *(libraw_metadata_common_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->common = *arg2;
  
}


libraw_metadata_common_t *_wrap_libraw_makernotes_t_common_get_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  libraw_metadata_common_t *result = 0 ;
  libraw_metadata_common_t *_swig_go_result;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  result = (libraw_metadata_common_t *)& ((arg1)->common);
  *(libraw_metadata_common_t **)&_swig_go_result = (libraw_metadata_common_t *)result; 
  return _swig_go_result;
}


libraw_makernotes_t *_wrap_new_libraw_makernotes_t_librawgo_fabcac84457d17f6() {
  libraw_makernotes_t *result = 0 ;
  libraw_makernotes_t *_swig_go_result;
  
  
  result = (libraw_makernotes_t *)new libraw_makernotes_t();
  *(libraw_makernotes_t **)&_swig_go_result = (libraw_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_makernotes_t_librawgo_fabcac84457d17f6(libraw_makernotes_t *_swig_go_0) {
  libraw_makernotes_t *arg1 = (libraw_makernotes_t *) 0 ;
  
  arg1 = *(libraw_makernotes_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_shootinginfo_t_DriveMode_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->DriveMode = arg2;
  
}


short _wrap_libraw_shootinginfo_t_DriveMode_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->DriveMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_FocusMode_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->FocusMode = arg2;
  
}


short _wrap_libraw_shootinginfo_t_FocusMode_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->FocusMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_MeteringMode_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->MeteringMode = arg2;
  
}


short _wrap_libraw_shootinginfo_t_MeteringMode_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->MeteringMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_AFPoint_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->AFPoint = arg2;
  
}


short _wrap_libraw_shootinginfo_t_AFPoint_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->AFPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_ExposureMode_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureMode = arg2;
  
}


short _wrap_libraw_shootinginfo_t_ExposureMode_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ExposureMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_ExposureProgram_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ExposureProgram = arg2;
  
}


short _wrap_libraw_shootinginfo_t_ExposureProgram_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ExposureProgram);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_ImageStabilization_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, short _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ImageStabilization = arg2;
  
}


short _wrap_libraw_shootinginfo_t_ImageStabilization_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (short) ((arg1)->ImageStabilization);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_BodySerial_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BodySerial, (const char *)arg2, 64-1);
      arg1->BodySerial[64-1] = 0;
    } else {
      arg1->BodySerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_shootinginfo_t_BodySerial_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->BodySerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_shootinginfo_t_InternalBodySerial_set_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InternalBodySerial, (const char *)arg2, 64-1);
      arg1->InternalBodySerial[64-1] = 0;
    } else {
      arg1->InternalBodySerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_shootinginfo_t_InternalBodySerial_get_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->InternalBodySerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_shootinginfo_t *_wrap_new_libraw_shootinginfo_t_librawgo_fabcac84457d17f6() {
  libraw_shootinginfo_t *result = 0 ;
  libraw_shootinginfo_t *_swig_go_result;
  
  
  result = (libraw_shootinginfo_t *)new libraw_shootinginfo_t();
  *(libraw_shootinginfo_t **)&_swig_go_result = (libraw_shootinginfo_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_shootinginfo_t_librawgo_fabcac84457d17f6(libraw_shootinginfo_t *_swig_go_0) {
  libraw_shootinginfo_t *arg1 = (libraw_shootinginfo_t *) 0 ;
  
  arg1 = *(libraw_shootinginfo_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_custom_camera_t_fsize_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, intgo _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->fsize = arg2;
  
}


intgo _wrap_libraw_custom_camera_t_fsize_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->fsize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_rw_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, short _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->rw = arg2;
  
}


short _wrap_libraw_custom_camera_t_rw_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->rw);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_rh_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, short _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->rh = arg2;
  
}


short _wrap_libraw_custom_camera_t_rh_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->rh);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_lm_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->lm = arg2;
  
}


char _wrap_libraw_custom_camera_t_lm_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->lm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_tm_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->tm = arg2;
  
}


char _wrap_libraw_custom_camera_t_tm_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->tm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_rm_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->rm = arg2;
  
}


char _wrap_libraw_custom_camera_t_rm_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->rm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_bm_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->bm = arg2;
  
}


char _wrap_libraw_custom_camera_t_bm_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->bm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_lf_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, short _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->lf = arg2;
  
}


short _wrap_libraw_custom_camera_t_lf_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->lf);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_cf_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->cf = arg2;
  
}


char _wrap_libraw_custom_camera_t_cf_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->cf);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_max_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->max = arg2;
  
}


char _wrap_libraw_custom_camera_t_max_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->max);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_flags_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, char _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (uchar)_swig_go_1; 
  
  if (arg1) (arg1)->flags = arg2;
  
}


char _wrap_libraw_custom_camera_t_flags_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  uchar result;
  char _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (uchar) ((arg1)->flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_t_make_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->t_make, (const char *)arg2, 10-1);
      arg1->t_make[10-1] = 0;
    } else {
      arg1->t_make[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_custom_camera_t_t_make_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->t_make);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_t_model_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  char *arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->t_model, (const char *)arg2, 20-1);
      arg1->t_model[20-1] = 0;
    } else {
      arg1->t_model[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_libraw_custom_camera_t_t_model_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->t_model);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_libraw_custom_camera_t_offset_set_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0, short _swig_go_1) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort arg2 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->offset = arg2;
  
}


short _wrap_libraw_custom_camera_t_offset_get_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_custom_camera_t *_wrap_new_libraw_custom_camera_t_librawgo_fabcac84457d17f6() {
  libraw_custom_camera_t *result = 0 ;
  libraw_custom_camera_t *_swig_go_result;
  
  
  result = (libraw_custom_camera_t *)new libraw_custom_camera_t();
  *(libraw_custom_camera_t **)&_swig_go_result = (libraw_custom_camera_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_custom_camera_t_librawgo_fabcac84457d17f6(libraw_custom_camera_t *_swig_go_0) {
  libraw_custom_camera_t *arg1 = (libraw_custom_camera_t *) 0 ;
  
  arg1 = *(libraw_custom_camera_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_libraw_data_t_image_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, short **_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  ushort (*arg2)[4] = (ushort (*)[4]) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(ushort (**)[4])&_swig_go_1; 
  
  if (arg1) (arg1)->image = (ushort (*)[4])arg2;
  
}


short **_wrap_libraw_data_t_image_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  ushort (*result)[4] = 0 ;
  short **_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (ushort (*)[4]) ((arg1)->image);
  *(ushort (**)[4])&_swig_go_result = (ushort (*)[4])result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_sizes_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_image_sizes_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_image_sizes_t *arg2 = (libraw_image_sizes_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_image_sizes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->sizes = *arg2;
  
}


libraw_image_sizes_t *_wrap_libraw_data_t_sizes_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_image_sizes_t *result = 0 ;
  libraw_image_sizes_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_image_sizes_t *)& ((arg1)->sizes);
  *(libraw_image_sizes_t **)&_swig_go_result = (libraw_image_sizes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_idata_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_iparams_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_iparams_t *arg2 = (libraw_iparams_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_iparams_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->idata = *arg2;
  
}


libraw_iparams_t *_wrap_libraw_data_t_idata_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_iparams_t *result = 0 ;
  libraw_iparams_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_iparams_t *)& ((arg1)->idata);
  *(libraw_iparams_t **)&_swig_go_result = (libraw_iparams_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_lens_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_lensinfo_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_lensinfo_t *arg2 = (libraw_lensinfo_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_lensinfo_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->lens = *arg2;
  
}


libraw_lensinfo_t *_wrap_libraw_data_t_lens_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_lensinfo_t *result = 0 ;
  libraw_lensinfo_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_lensinfo_t *)& ((arg1)->lens);
  *(libraw_lensinfo_t **)&_swig_go_result = (libraw_lensinfo_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_makernotes_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_makernotes_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_makernotes_t *arg2 = (libraw_makernotes_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_makernotes_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->makernotes = *arg2;
  
}


libraw_makernotes_t *_wrap_libraw_data_t_makernotes_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_makernotes_t *result = 0 ;
  libraw_makernotes_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_makernotes_t *)& ((arg1)->makernotes);
  *(libraw_makernotes_t **)&_swig_go_result = (libraw_makernotes_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_shootinginfo_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_shootinginfo_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_shootinginfo_t *arg2 = (libraw_shootinginfo_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_shootinginfo_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->shootinginfo = *arg2;
  
}


libraw_shootinginfo_t *_wrap_libraw_data_t_shootinginfo_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_shootinginfo_t *result = 0 ;
  libraw_shootinginfo_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_shootinginfo_t *)& ((arg1)->shootinginfo);
  *(libraw_shootinginfo_t **)&_swig_go_result = (libraw_shootinginfo_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_params_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_output_params_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_output_params_t *arg2 = (libraw_output_params_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_output_params_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->params = *arg2;
  
}


libraw_output_params_t *_wrap_libraw_data_t_params_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_output_params_t *result = 0 ;
  libraw_output_params_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_output_params_t *)& ((arg1)->params);
  *(libraw_output_params_t **)&_swig_go_result = (libraw_output_params_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_progress_flags_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->progress_flags = arg2;
  
}


intgo _wrap_libraw_data_t_progress_flags_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->progress_flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_process_warnings_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->process_warnings = arg2;
  
}


intgo _wrap_libraw_data_t_process_warnings_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->process_warnings);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_color_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_colordata_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_colordata_t *arg2 = (libraw_colordata_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_colordata_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->color = *arg2;
  
}


libraw_colordata_t *_wrap_libraw_data_t_color_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_colordata_t *result = 0 ;
  libraw_colordata_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_colordata_t *)& ((arg1)->color);
  *(libraw_colordata_t **)&_swig_go_result = (libraw_colordata_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_other_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_imgother_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_imgother_t *arg2 = (libraw_imgother_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_imgother_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->other = *arg2;
  
}


libraw_imgother_t *_wrap_libraw_data_t_other_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_imgother_t *result = 0 ;
  libraw_imgother_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_imgother_t *)& ((arg1)->other);
  *(libraw_imgother_t **)&_swig_go_result = (libraw_imgother_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_thumbnail_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_thumbnail_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_thumbnail_t *arg2 = (libraw_thumbnail_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_thumbnail_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->thumbnail = *arg2;
  
}


libraw_thumbnail_t *_wrap_libraw_data_t_thumbnail_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_thumbnail_t *result = 0 ;
  libraw_thumbnail_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_thumbnail_t *)& ((arg1)->thumbnail);
  *(libraw_thumbnail_t **)&_swig_go_result = (libraw_thumbnail_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_rawdata_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_rawdata_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_rawdata_t *arg2 = (libraw_rawdata_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_rawdata_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->rawdata = *arg2;
  
}


libraw_rawdata_t *_wrap_libraw_data_t_rawdata_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_rawdata_t *result = 0 ;
  libraw_rawdata_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_rawdata_t *)& ((arg1)->rawdata);
  *(libraw_rawdata_t **)&_swig_go_result = (libraw_rawdata_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_data_t_parent_class_set_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, void *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->parent_class = arg2;
  
}


void *_wrap_libraw_data_t_parent_class_get_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (void *) ((arg1)->parent_class);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


libraw_data_t *_wrap_new_libraw_data_t_librawgo_fabcac84457d17f6() {
  libraw_data_t *result = 0 ;
  libraw_data_t *_swig_go_result;
  
  
  result = (libraw_data_t *)new libraw_data_t();
  *(libraw_data_t **)&_swig_go_result = (libraw_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_data_t_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_fuji_compressed_params_q_table_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, int8_t *_swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int8_t *arg2 = (int8_t *) 0 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = *(int8_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->q_table = arg2;
  
}


int8_t *_wrap_fuji_compressed_params_q_table_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int8_t *result = 0 ;
  int8_t *_swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int8_t *) ((arg1)->q_table);
  *(int8_t **)&_swig_go_result = (int8_t *)result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_q_point_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, intgo *_swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int *arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->q_point;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_fuji_compressed_params_q_point_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->q_point);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_max_bits_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->max_bits = arg2;
  
}


intgo _wrap_fuji_compressed_params_max_bits_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int) ((arg1)->max_bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_min_value_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->min_value = arg2;
  
}


intgo _wrap_fuji_compressed_params_min_value_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int) ((arg1)->min_value);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_raw_bits_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->raw_bits = arg2;
  
}


intgo _wrap_fuji_compressed_params_raw_bits_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int) ((arg1)->raw_bits);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_total_values_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->total_values = arg2;
  
}


intgo _wrap_fuji_compressed_params_total_values_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int) ((arg1)->total_values);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_maxDiff_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->maxDiff = arg2;
  
}


intgo _wrap_fuji_compressed_params_maxDiff_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (int) ((arg1)->maxDiff);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_params_line_width_set_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0, short _swig_go_1) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  ushort arg2 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  arg2 = (ushort)_swig_go_1; 
  
  if (arg1) (arg1)->line_width = arg2;
  
}


short _wrap_fuji_compressed_params_line_width_get_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  ushort result;
  short _swig_go_result;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  result = (ushort) ((arg1)->line_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


fuji_compressed_params *_wrap_new_fuji_compressed_params_librawgo_fabcac84457d17f6() {
  fuji_compressed_params *result = 0 ;
  fuji_compressed_params *_swig_go_result;
  
  
  result = (fuji_compressed_params *)new fuji_compressed_params();
  *(fuji_compressed_params **)&_swig_go_result = (fuji_compressed_params *)result; 
  return _swig_go_result;
}


void _wrap_delete_fuji_compressed_params_librawgo_fabcac84457d17f6(fuji_compressed_params *_swig_go_0) {
  fuji_compressed_params *arg1 = (fuji_compressed_params *) 0 ;
  
  arg1 = *(fuji_compressed_params **)&_swig_go_0; 
  
  delete arg1;
  
}


libraw_static_table_t *_wrap_new_libraw_static_table_t__SWIG_0_librawgo_fabcac84457d17f6(intgo *_swig_go_0, intgo _swig_go_1) {
  int *arg1 = (int *) 0 ;
  unsigned int arg2 ;
  libraw_static_table_t *result = 0 ;
  libraw_static_table_t *_swig_go_result;
  
  arg1 = *(int **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (libraw_static_table_t *)new libraw_static_table_t((int const *)arg1,arg2);
  *(libraw_static_table_t **)&_swig_go_result = (libraw_static_table_t *)result; 
  return _swig_go_result;
}


libraw_static_table_t *_wrap_new_libraw_static_table_t__SWIG_1_librawgo_fabcac84457d17f6() {
  libraw_static_table_t *result = 0 ;
  libraw_static_table_t *_swig_go_result;
  
  
  result = (libraw_static_table_t *)new libraw_static_table_t();
  *(libraw_static_table_t **)&_swig_go_result = (libraw_static_table_t *)result; 
  return _swig_go_result;
}


libraw_static_table_t *_wrap_new_libraw_static_table_t__SWIG_2_librawgo_fabcac84457d17f6(libraw_static_table_t *_swig_go_0) {
  libraw_static_table_t *arg1 = 0 ;
  libraw_static_table_t *result = 0 ;
  libraw_static_table_t *_swig_go_result;
  
  arg1 = *(libraw_static_table_t **)&_swig_go_0; 
  
  result = (libraw_static_table_t *)new libraw_static_table_t((libraw_static_table_t const &)*arg1);
  *(libraw_static_table_t **)&_swig_go_result = (libraw_static_table_t *)result; 
  return _swig_go_result;
}


intgo _wrap_libraw_static_table_t_size_librawgo_fabcac84457d17f6(libraw_static_table_t *_swig_go_0) {
  libraw_static_table_t *arg1 = (libraw_static_table_t *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_static_table_t **)&_swig_go_0; 
  
  result = (unsigned int)((libraw_static_table_t const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_libraw_static_table_t_librawgo_fabcac84457d17f6(libraw_static_table_t *_swig_go_0) {
  libraw_static_table_t *arg1 = (libraw_static_table_t *) 0 ;
  
  arg1 = *(libraw_static_table_t **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_LIBRAW_VERSION_librawgo_fabcac84457d17f6() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)((((0) << 16)|((20) << 8)|(0)));
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LIBRAW_USE_STREAMS_DATASTREAM_MAXSIZE_librawgo_fabcac84457d17f6() {
  long result;
  long long _swig_go_result;
  
  
  result = (long)((250*1024L*1024L));
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_libraw_strerror_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  int arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (char *)libraw_strerror(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_libraw_strprogress_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  enum LibRaw_progress arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (enum LibRaw_progress)_swig_go_0; 
  
  result = (char *)libraw_strprogress(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


libraw_data_t *_wrap_libraw_init_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  unsigned int arg1 ;
  libraw_data_t *result = 0 ;
  libraw_data_t *_swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (libraw_data_t *)libraw_init(arg1);
  *(libraw_data_t **)&_swig_go_result = (libraw_data_t *)result; 
  return _swig_go_result;
}


intgo _wrap_libraw_open_file_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)libraw_open_file(arg1,(char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_libraw_open_file_ex_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  INT64 arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (INT64)_swig_go_2; 
  
  result = (int)libraw_open_file_ex(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_libraw_open_buffer_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (int)libraw_open_buffer(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_unpack_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_unpack(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_unpack_thumb_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_unpack_thumb(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_recycle_datastream_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  libraw_recycle_datastream(arg1);
  
}


void _wrap_libraw_recycle_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  libraw_recycle(arg1);
  
}


void _wrap_libraw_close_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  libraw_close(arg1);
  
}


void _wrap_libraw_subtract_black_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  libraw_subtract_black(arg1);
  
}


intgo _wrap_libraw_raw2image_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_raw2image(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_free_image_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  libraw_free_image(arg1);
  
}


_gostring_ _wrap_libraw_version_librawgo_fabcac84457d17f6() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)libraw_version();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_libraw_versionNumber_librawgo_fabcac84457d17f6() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)libraw_versionNumber();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_* _wrap_libraw_cameraList_librawgo_fabcac84457d17f6() {
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  
  result = (char **)libraw_cameraList();
  *(char ***)&_swig_go_result = (char **)result; 
  return _swig_go_result;
}


intgo _wrap_libraw_cameraCount_librawgo_fabcac84457d17f6() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)libraw_cameraCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_set_memerror_handler_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  memory_callback arg2 = (memory_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(memory_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  libraw_set_memerror_handler(arg1,arg2,arg3);
  
}


void _wrap_libraw_set_exifparser_handler_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  exif_parser_callback arg2 = (exif_parser_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(exif_parser_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  libraw_set_exifparser_handler(arg1,arg2,arg3);
  
}


void _wrap_libraw_set_dataerror_handler_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  data_callback arg2 = (data_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(data_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  libraw_set_dataerror_handler(arg1,arg2,arg3);
  
}


void _wrap_libraw_set_progress_handler_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  progress_callback arg2 = (progress_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(progress_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  libraw_set_progress_handler(arg1,arg2,arg3);
  
}


_gostring_ _wrap_libraw_unpack_function_name_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (char *)libraw_unpack_function_name(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_libraw_get_decoder_info_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, libraw_decoder_info_t *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_decoder_info_t *arg2 = (libraw_decoder_info_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(libraw_decoder_info_t **)&_swig_go_1; 
  
  result = (int)libraw_get_decoder_info(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_COLOR_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)libraw_COLOR(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_capabilities_librawgo_fabcac84457d17f6() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)libraw_capabilities();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_adjust_sizes_info_only_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_adjust_sizes_info_only(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_dcraw_ppm_tiff_writer_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)libraw_dcraw_ppm_tiff_writer(arg1,(char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_libraw_dcraw_thumb_writer_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, _gostring_ _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)libraw_dcraw_thumb_writer(arg1,(char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_libraw_dcraw_process_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_dcraw_process(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_libraw_dcraw_make_mem_image_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int *arg2 = (int *) 0 ;
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (libraw_processed_image_t *)libraw_dcraw_make_mem_image(arg1,arg2);
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_libraw_dcraw_make_mem_thumb_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo *_swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int *arg2 = (int *) 0 ;
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (libraw_processed_image_t *)libraw_dcraw_make_mem_thumb(arg1,arg2);
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


void _wrap_libraw_dcraw_clear_mem_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  libraw_dcraw_clear_mem(arg1);
  
}


void _wrap_libraw_set_demosaic_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_demosaic(arg1,arg2);
  
}


void _wrap_libraw_set_output_color_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_output_color(arg1,arg2);
  
}


void _wrap_libraw_set_user_mul_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  float arg3 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  libraw_set_user_mul(arg1,arg2,arg3);
  
}


void _wrap_libraw_set_output_bps_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_output_bps(arg1,arg2);
  
}


void _wrap_libraw_set_gamma_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  float arg3 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  libraw_set_gamma(arg1,arg2,arg3);
  
}


void _wrap_libraw_set_no_auto_bright_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_no_auto_bright(arg1,arg2);
  
}


void _wrap_libraw_set_bright_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, float _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  float arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  libraw_set_bright(arg1,arg2);
  
}


void _wrap_libraw_set_highlight_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_highlight(arg1,arg2);
  
}


void _wrap_libraw_set_fbdd_noiserd_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_fbdd_noiserd(arg1,arg2);
  
}


intgo _wrap_libraw_get_raw_height_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_get_raw_height(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_get_raw_width_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_get_raw_width(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_get_iheight_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_get_iheight(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_get_iwidth_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_get_iwidth(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_libraw_get_cam_mul_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (float)libraw_get_cam_mul(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_libraw_get_pre_mul_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (float)libraw_get_pre_mul(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_libraw_get_rgb_cam_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  int arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (float)libraw_get_rgb_cam(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_libraw_get_color_maximum_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (int)libraw_get_color_maximum(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_libraw_set_output_tif_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0, intgo _swig_go_1) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  int arg2 ;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  libraw_set_output_tif(arg1,arg2);
  
}


libraw_iparams_t *_wrap_libraw_get_iparams_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_iparams_t *result = 0 ;
  libraw_iparams_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_iparams_t *)libraw_get_iparams(arg1);
  *(libraw_iparams_t **)&_swig_go_result = (libraw_iparams_t *)result; 
  return _swig_go_result;
}


libraw_lensinfo_t *_wrap_libraw_get_lensinfo_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_lensinfo_t *result = 0 ;
  libraw_lensinfo_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_lensinfo_t *)libraw_get_lensinfo(arg1);
  *(libraw_lensinfo_t **)&_swig_go_result = (libraw_lensinfo_t *)result; 
  return _swig_go_result;
}


libraw_imgother_t *_wrap_libraw_get_imgother_librawgo_fabcac84457d17f6(libraw_data_t *_swig_go_0) {
  libraw_data_t *arg1 = (libraw_data_t *) 0 ;
  libraw_imgother_t *result = 0 ;
  libraw_imgother_t *_swig_go_result;
  
  arg1 = *(libraw_data_t **)&_swig_go_0; 
  
  result = (libraw_imgother_t *)libraw_get_imgother(arg1);
  *(libraw_imgother_t **)&_swig_go_result = (libraw_imgother_t *)result; 
  return _swig_go_result;
}


void _wrap_LibRaw_imgdata_set_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, libraw_data_t *_swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_data_t *arg2 = (libraw_data_t *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(libraw_data_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->imgdata = *arg2;
  
}


libraw_data_t *_wrap_LibRaw_imgdata_get_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_data_t *result = 0 ;
  libraw_data_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (libraw_data_t *)& ((arg1)->imgdata);
  *(libraw_data_t **)&_swig_go_result = (libraw_data_t *)result; 
  return _swig_go_result;
}


LibRaw *_wrap_new_LibRaw__SWIG_0_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  unsigned int arg1 ;
  LibRaw *result = 0 ;
  LibRaw *_swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (LibRaw *)new LibRaw(arg1);
  *(LibRaw **)&_swig_go_result = (LibRaw *)result; 
  return _swig_go_result;
}


LibRaw *_wrap_new_LibRaw__SWIG_1_librawgo_fabcac84457d17f6() {
  LibRaw *result = 0 ;
  LibRaw *_swig_go_result;
  
  
  result = (LibRaw *)new LibRaw();
  *(LibRaw **)&_swig_go_result = (LibRaw *)result; 
  return _swig_go_result;
}


libraw_output_params_t *_wrap_LibRaw_output_params_ptr_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_output_params_t *result = 0 ;
  libraw_output_params_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (libraw_output_params_t *)(arg1)->output_params_ptr();
  *(libraw_output_params_t **)&_swig_go_result = (libraw_output_params_t *)result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_open_file__SWIG_0_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  char *arg2 = (char *) 0 ;
  INT64 arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (INT64)_swig_go_2; 
  
  result = (int)(arg1)->open_file((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_open_file__SWIG_1_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, _gostring_ _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)(arg1)->open_file((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_open_buffer_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (int)(arg1)->open_buffer(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_open_datastream_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, LibRaw_abstract_datastream *_swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  LibRaw_abstract_datastream *arg2 = (LibRaw_abstract_datastream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(LibRaw_abstract_datastream **)&_swig_go_1; 
  
  result = (int)(arg1)->open_datastream(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_open_bayer_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, char *_swig_go_1, intgo _swig_go_2, short _swig_go_3, short _swig_go_4, short _swig_go_5, short _swig_go_6, short _swig_go_7, short _swig_go_8, char _swig_go_9, char _swig_go_10, intgo _swig_go_11, intgo _swig_go_12, intgo _swig_go_13) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned int arg3 ;
  ushort arg4 ;
  ushort arg5 ;
  ushort arg6 ;
  ushort arg7 ;
  ushort arg8 ;
  ushort arg9 ;
  unsigned char arg10 ;
  unsigned char arg11 ;
  unsigned int arg12 ;
  unsigned int arg13 ;
  unsigned int arg14 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = (ushort)_swig_go_3; 
  arg5 = (ushort)_swig_go_4; 
  arg6 = (ushort)_swig_go_5; 
  arg7 = (ushort)_swig_go_6; 
  arg8 = (ushort)_swig_go_7; 
  arg9 = (ushort)_swig_go_8; 
  arg10 = (unsigned char)_swig_go_9; 
  arg11 = (unsigned char)_swig_go_10; 
  arg12 = (unsigned int)_swig_go_11; 
  arg13 = (unsigned int)_swig_go_12; 
  arg14 = (unsigned int)_swig_go_13; 
  
  result = (int)(arg1)->open_bayer(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_error_count_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->error_count();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_recycle_datastream_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->recycle_datastream();
  
}


intgo _wrap_LibRaw_unpack_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->unpack();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_unpack_thumb_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->unpack_thumb();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_thumbOK__SWIG_0_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, long long _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  INT64 arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  result = (int)(arg1)->thumbOK(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_thumbOK__SWIG_1_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->thumbOK();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_adjust_sizes_info_only_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->adjust_sizes_info_only();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_subtract_black_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->subtract_black();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_subtract_black_internal_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->subtract_black_internal();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_raw2image_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->raw2image();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_raw2image_ex_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)(arg1)->raw2image_ex(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_raw2image_start_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->raw2image_start();
  
}


void _wrap_LibRaw_free_image_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->free_image();
  
}


intgo _wrap_LibRaw_adjust_maximum_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->adjust_maximum();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_set_exifparser_handler_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  exif_parser_callback arg2 = (exif_parser_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(exif_parser_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->set_exifparser_handler(arg2,arg3);
  
}


void _wrap_LibRaw_set_memerror_handler_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  memory_callback arg2 = (memory_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(memory_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->set_memerror_handler(arg2,arg3);
  
}


void _wrap_LibRaw_set_dataerror_handler_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  data_callback arg2 = (data_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(data_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->set_dataerror_handler(arg2,arg3);
  
}


void _wrap_LibRaw_set_progress_handler_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  progress_callback arg2 = (progress_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(progress_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->set_progress_handler(arg2,arg3);
  
}


_gostring_ _wrap_LibRaw_cameramakeridx2maker_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  unsigned int arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (char *)LibRaw::cameramakeridx2maker(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_setMakeFromIndex_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  unsigned int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (int)(arg1)->setMakeFromIndex(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_convertFloatToInt__SWIG_0_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->convertFloatToInt(arg2,arg3,arg4);
  
}


void _wrap_LibRaw_convertFloatToInt__SWIG_1_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  float arg2 ;
  float arg3 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  (arg1)->convertFloatToInt(arg2,arg3);
  
}


void _wrap_LibRaw_convertFloatToInt__SWIG_2_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, float _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  float arg2 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->convertFloatToInt(arg2);
  
}


void _wrap_LibRaw_convertFloatToInt__SWIG_3_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->convertFloatToInt();
  
}


intgo _wrap_LibRaw_capabilities_librawgo_fabcac84457d17f6() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)LibRaw::capabilities();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_version_librawgo_fabcac84457d17f6() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)LibRaw::version();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_versionNumber_librawgo_fabcac84457d17f6() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)LibRaw::versionNumber();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_* _wrap_LibRaw_cameraList_librawgo_fabcac84457d17f6() {
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  
  result = (char **)LibRaw::cameraList();
  *(char ***)&_swig_go_result = (char **)result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_cameraCount_librawgo_fabcac84457d17f6() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)LibRaw::cameraCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_strprogress_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  enum LibRaw_progress arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (enum LibRaw_progress)_swig_go_0; 
  
  result = (char *)LibRaw::strprogress(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_strerror_librawgo_fabcac84457d17f6(intgo _swig_go_0) {
  int arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (char *)LibRaw::strerror(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_dcraw_ppm_tiff_writer_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, _gostring_ _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)(arg1)->dcraw_ppm_tiff_writer((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_dcraw_thumb_writer_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, _gostring_ _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)(arg1)->dcraw_thumb_writer((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_dcraw_process_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->dcraw_process();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_is_fuji_rotated_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->is_fuji_rotated();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_is_sraw_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->is_sraw();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_sraw_midpoint_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->sraw_midpoint();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_is_nikon_sraw_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->is_nikon_sraw();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_is_coolscan_nef_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->is_coolscan_nef();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_is_jpeg_thumb_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->is_jpeg_thumb();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_is_floating_point_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->is_floating_point();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_have_fpdata_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->have_fpdata();
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_LibRaw_dcraw_make_mem_image__SWIG_0_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo *_swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int *arg2 = (int *) 0 ;
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (libraw_processed_image_t *)(arg1)->dcraw_make_mem_image(arg2);
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_LibRaw_dcraw_make_mem_image__SWIG_1_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (libraw_processed_image_t *)(arg1)->dcraw_make_mem_image();
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_LibRaw_dcraw_make_mem_thumb__SWIG_0_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo *_swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int *arg2 = (int *) 0 ;
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (libraw_processed_image_t *)(arg1)->dcraw_make_mem_thumb(arg2);
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


libraw_processed_image_t *_wrap_LibRaw_dcraw_make_mem_thumb__SWIG_1_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_processed_image_t *result = 0 ;
  libraw_processed_image_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (libraw_processed_image_t *)(arg1)->dcraw_make_mem_thumb();
  *(libraw_processed_image_t **)&_swig_go_result = (libraw_processed_image_t *)result; 
  return _swig_go_result;
}


void _wrap_LibRaw_dcraw_clear_mem_librawgo_fabcac84457d17f6(libraw_processed_image_t *_swig_go_0) {
  libraw_processed_image_t *arg1 = (libraw_processed_image_t *) 0 ;
  
  arg1 = *(libraw_processed_image_t **)&_swig_go_0; 
  
  LibRaw::dcraw_clear_mem(arg1);
  
}


void _wrap_LibRaw_get_mem_image_format_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  ((LibRaw const *)arg1)->get_mem_image_format(arg2,arg3,arg4,arg5);
  
}


intgo _wrap_LibRaw_copy_mem_image_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->copy_mem_image(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LibRaw_recycle_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->recycle();
  
}


void _wrap_delete_LibRaw_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_LibRaw_COLOR_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->COLOR(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_FC_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->FC(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_fcol_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->fcol(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_LibRaw_unpack_function_name_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (char *)(arg1)->unpack_function_name();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_get_decoder_info_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, libraw_decoder_info_t *_swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_decoder_info_t *arg2 = (libraw_decoder_info_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(libraw_decoder_info_t **)&_swig_go_1; 
  
  result = (int)(arg1)->get_decoder_info(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


libraw_internal_data_t *_wrap_LibRaw_get_internal_data_pointer_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  libraw_internal_data_t *result = 0 ;
  libraw_internal_data_t *_swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (libraw_internal_data_t *)(arg1)->get_internal_data_pointer();
  *(libraw_internal_data_t **)&_swig_go_result = (libraw_internal_data_t *)result; 
  return _swig_go_result;
}


float _wrap_LibRaw_powf_lim_librawgo_fabcac84457d17f6(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)LibRaw::powf_lim(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_LibRaw_libraw_powf64l_librawgo_fabcac84457d17f6(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (float)LibRaw::libraw_powf64l(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_sgetn_librawgo_fabcac84457d17f6(intgo _swig_go_0, char *_swig_go_1) {
  int arg1 ;
  uchar *arg2 = (uchar *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  result = (unsigned int)LibRaw::sgetn(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_phase_one_subtract_black_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, short *_swig_go_1, short *_swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  ushort *arg2 = (ushort *) 0 ;
  ushort *arg3 = (ushort *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  arg3 = *(ushort **)&_swig_go_2; 
  
  result = (int)(arg1)->phase_one_subtract_black(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_phase_one_correct_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  result = (int)(arg1)->phase_one_correct();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_LibRaw_set_rawspeed_camerafile_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, _gostring_ _swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (int)(arg1)->set_rawspeed_camerafile(arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_LibRaw_setCancelFlag_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->setCancelFlag();
  
}


void _wrap_LibRaw_clearCancelFlag_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  
  (arg1)->clearCancelFlag();
  
}


intgo _wrap_LibRaw_adobe_coeff__SWIG_0_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  unsigned int arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->adobe_coeff(arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


intgo _wrap_LibRaw_adobe_coeff__SWIG_1_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  unsigned int arg2 ;
  char *arg3 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (int)(arg1)->adobe_coeff(arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_LibRaw_set_dng_host_librawgo_fabcac84457d17f6(LibRaw *_swig_go_0, void *_swig_go_1) {
  LibRaw *arg1 = (LibRaw *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(LibRaw **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->set_dng_host(arg2);
  
}


_gostring_* _wrap_static_camera_list_get_librawgo_fabcac84457d17f6() {
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  
  result = (char **)(char **)static_camera_list;
  *(char ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_int_pair_value1_set_librawgo_fabcac84457d17f6(int_pair *_swig_go_0, intgo _swig_go_1) {
  int_pair *arg1 = (int_pair *) 0 ;
  int arg2 ;
  
  arg1 = *(int_pair **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->value1 = arg2;
  
}


intgo _wrap_int_pair_value1_get_librawgo_fabcac84457d17f6(int_pair *_swig_go_0) {
  int_pair *arg1 = (int_pair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(int_pair **)&_swig_go_0; 
  
  result = (int) ((arg1)->value1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_int_pair_value2_set_librawgo_fabcac84457d17f6(int_pair *_swig_go_0, intgo _swig_go_1) {
  int_pair *arg1 = (int_pair *) 0 ;
  int arg2 ;
  
  arg1 = *(int_pair **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->value2 = arg2;
  
}


intgo _wrap_int_pair_value2_get_librawgo_fabcac84457d17f6(int_pair *_swig_go_0) {
  int_pair *arg1 = (int_pair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(int_pair **)&_swig_go_0; 
  
  result = (int) ((arg1)->value2);
  _swig_go_result = result; 
  return _swig_go_result;
}


int_pair *_wrap_new_int_pair_librawgo_fabcac84457d17f6() {
  int_pair *result = 0 ;
  int_pair *_swig_go_result;
  
  
  result = (int_pair *)new int_pair();
  *(int_pair **)&_swig_go_result = (int_pair *)result; 
  return _swig_go_result;
}


void _wrap_delete_int_pair_librawgo_fabcac84457d17f6(int_pair *_swig_go_0) {
  int_pair *arg1 = (int_pair *) 0 ;
  
  arg1 = *(int_pair **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap__R0_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _R0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__R1_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _R1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__R2_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _R2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__R3_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _R3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__R4_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _R4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G0_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G1_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G2_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G3_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G4_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G5_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G5;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G6_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G6;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__G7_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _G7;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__B0_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _B0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__B1_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _B1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__B2_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _B2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__B3_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _B3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__B4_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _B4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap__ltotal_librawgo_fabcac84457d17f6() {
  _xt_lines result;
  intgo _swig_go_result;
  
  
  result = _ltotal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_cur_bit_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->cur_bit = arg2;
  
}


intgo _wrap_fuji_compressed_block_cur_bit_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (int) ((arg1)->cur_bit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_cur_pos_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->cur_pos = arg2;
  
}


intgo _wrap_fuji_compressed_block_cur_pos_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (int) ((arg1)->cur_pos);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_cur_buf_offset_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, long long _swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  INT64 arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = (INT64)_swig_go_1; 
  
  if (arg1) (arg1)->cur_buf_offset = arg2;
  
}


long long _wrap_fuji_compressed_block_cur_buf_offset_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  INT64 result;
  long long _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (INT64) ((arg1)->cur_buf_offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_max_read_size_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->max_read_size = arg2;
  
}


intgo _wrap_fuji_compressed_block_max_read_size_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->max_read_size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_cur_buf_size_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->cur_buf_size = arg2;
  
}


intgo _wrap_fuji_compressed_block_cur_buf_size_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (int) ((arg1)->cur_buf_size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_cur_buf_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, char *_swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(uchar **)&_swig_go_1; 
  
  if (arg1) (arg1)->cur_buf = arg2;
  
}


char *_wrap_fuji_compressed_block_cur_buf_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  uchar *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->cur_buf);
  *(uchar **)&_swig_go_result = (uchar *)result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_fillbytes_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo _swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->fillbytes = arg2;
  
}


intgo _wrap_fuji_compressed_block_fillbytes_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (int) ((arg1)->fillbytes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_input_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, LibRaw_abstract_datastream *_swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  LibRaw_abstract_datastream *arg2 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(LibRaw_abstract_datastream **)&_swig_go_1; 
  
  if (arg1) (arg1)->input = arg2;
  
}


LibRaw_abstract_datastream *_wrap_fuji_compressed_block_input_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  LibRaw_abstract_datastream *result = 0 ;
  LibRaw_abstract_datastream *_swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (LibRaw_abstract_datastream *) ((arg1)->input);
  *(LibRaw_abstract_datastream **)&_swig_go_result = (LibRaw_abstract_datastream *)result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_grad_even_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, int_pair (*_swig_go_1)[41]) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int_pair (*arg2)[41] ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(int_pair (**)[41])&_swig_go_1; 
  
  {
    int_pair (*inp)[41] = (int_pair (*)[41])(arg2);
    int_pair (*dest)[41] = (int_pair (*)[41])(arg1->grad_even);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      int_pair *ip = inp[ii];
      int_pair *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 41; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


int_pair (*_wrap_fuji_compressed_block_grad_even_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0))[3][41] {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int_pair (*result)[41] = 0 ;
  int_pair (*_swig_go_result)[3][41];
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (int_pair (*)[41])(int_pair (*)[41]) ((arg1)->grad_even);
  *(int_pair (**)[41])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_grad_odd_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, int_pair (*_swig_go_1)[41]) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int_pair (*arg2)[41] ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(int_pair (**)[41])&_swig_go_1; 
  
  {
    int_pair (*inp)[41] = (int_pair (*)[41])(arg2);
    int_pair (*dest)[41] = (int_pair (*)[41])(arg1->grad_odd);
    size_t ii = 0;
    for (; ii < 3; ++ii) {
      int_pair *ip = inp[ii];
      int_pair *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 41; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


int_pair (*_wrap_fuji_compressed_block_grad_odd_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0))[3][41] {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int_pair (*result)[41] = 0 ;
  int_pair (*_swig_go_result)[3][41];
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (int_pair (*)[41])(int_pair (*)[41]) ((arg1)->grad_odd);
  *(int_pair (**)[41])&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_linealloc_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, short *_swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  ushort *arg2 = (ushort *) 0 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  
  if (arg1) (arg1)->linealloc = arg2;
  
}


short *_wrap_fuji_compressed_block_linealloc_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  ushort *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (ushort *) ((arg1)->linealloc);
  *(ushort **)&_swig_go_result = (ushort *)result; 
  return _swig_go_result;
}


void _wrap_fuji_compressed_block_linebuf_set_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, short **_swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  ushort **arg2 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(ushort ***)&_swig_go_1; 
  
  {
    size_t ii;
    ushort * *b = (ushort * *) arg1->linebuf;
    for (ii = 0; ii < (size_t)_ltotal; ii++) b[ii] = *((ushort * *) arg2 + ii);
  }
  
}


short **_wrap_fuji_compressed_block_linebuf_get_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  ushort **result = 0 ;
  short **_swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  result = (ushort **)(ushort **) ((arg1)->linebuf);
  *(ushort ***)&_swig_go_result = result; 
  return _swig_go_result;
}


fuji_compressed_block *_wrap_new_fuji_compressed_block_librawgo_fabcac84457d17f6() {
  fuji_compressed_block *result = 0 ;
  fuji_compressed_block *_swig_go_result;
  
  
  result = (fuji_compressed_block *)new fuji_compressed_block();
  *(fuji_compressed_block **)&_swig_go_result = (fuji_compressed_block *)result; 
  return _swig_go_result;
}


void _wrap_delete_fuji_compressed_block_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_fuji_fill_buffer_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  
  fuji_fill_buffer(arg1);
  
}


void _wrap_fuji_zerobits_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo *_swig_go_1) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  fuji_zerobits(arg1,arg2);
  
}


void _wrap_fuji_read_code_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  fuji_read_code(arg1,arg2,arg3);
  
}


intgo _wrap_bitDiff_librawgo_fabcac84457d17f6(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)bitDiff(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_fuji_decode_sample_even_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, fuji_compressed_params *_swig_go_1, short *_swig_go_2, intgo _swig_go_3, int_pair *_swig_go_4) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  fuji_compressed_params *arg2 = (fuji_compressed_params *) 0 ;
  ushort *arg3 = (ushort *) 0 ;
  int arg4 ;
  int_pair *arg5 = (int_pair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(fuji_compressed_params **)&_swig_go_1; 
  arg3 = *(ushort **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(int_pair **)&_swig_go_4; 
  
  result = (int)fuji_decode_sample_even(arg1,(fuji_compressed_params const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_fuji_decode_sample_odd_librawgo_fabcac84457d17f6(fuji_compressed_block *_swig_go_0, fuji_compressed_params *_swig_go_1, short *_swig_go_2, intgo _swig_go_3, int_pair *_swig_go_4) {
  fuji_compressed_block *arg1 = (fuji_compressed_block *) 0 ;
  fuji_compressed_params *arg2 = (fuji_compressed_params *) 0 ;
  ushort *arg3 = (ushort *) 0 ;
  int arg4 ;
  int_pair *arg5 = (int_pair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(fuji_compressed_block **)&_swig_go_0; 
  arg2 = *(fuji_compressed_params **)&_swig_go_1; 
  arg3 = *(ushort **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(int_pair **)&_swig_go_4; 
  
  result = (int)fuji_decode_sample_odd(arg1,(fuji_compressed_params const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_fuji_decode_interpolation_even_librawgo_fabcac84457d17f6(intgo _swig_go_0, short *_swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  ushort *arg2 = (ushort *) 0 ;
  int arg3 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(ushort **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  fuji_decode_interpolation_even(arg1,arg2,arg3);
  
}


void _wrap_fuji_extend_generic_librawgo_fabcac84457d17f6(short **_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ushort **arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(ushort ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  fuji_extend_generic(arg1,arg2,arg3,arg4);
  
}


void _wrap_fuji_extend_red_librawgo_fabcac84457d17f6(short **_swig_go_0, intgo _swig_go_1) {
  ushort **arg1 ;
  int arg2 ;
  
  arg1 = *(ushort ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  fuji_extend_red(arg1,arg2);
  
}


void _wrap_fuji_extend_green_librawgo_fabcac84457d17f6(short **_swig_go_0, intgo _swig_go_1) {
  ushort **arg1 ;
  int arg2 ;
  
  arg1 = *(ushort ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  fuji_extend_green(arg1,arg2);
  
}


void _wrap_fuji_extend_blue_librawgo_fabcac84457d17f6(short **_swig_go_0, intgo _swig_go_1) {
  ushort **arg1 ;
  int arg2 ;
  
  arg1 = *(ushort ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  fuji_extend_blue(arg1,arg2);
  
}


void _wrap__BitScanReverse_librawgo_fabcac84457d17f6(uint32_t *_swig_go_0, long long _swig_go_1) {
  DWORD *arg1 = (DWORD *) 0 ;
  unsigned long arg2 ;
  
  arg1 = *(DWORD **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  _BitScanReverse(arg1,arg2);
  
}


void _wrap_CrxBitstream_mdatBuf_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, uint8_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint8_t *arg2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  {
    size_t ii;
    uint8_t *b = (uint8_t *) arg1->mdatBuf;
    for (ii = 0; ii < (size_t)0x10000; ii++) b[ii] = *((uint8_t *) arg2 + ii);
  }
  
}


uint8_t (*_wrap_CrxBitstream_mdatBuf_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0))[0x10000] {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint8_t *result = 0 ;
  uint8_t (*_swig_go_result)[0x10000];
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result = (uint8_t *)(uint8_t *) ((arg1)->mdatBuf);
  *(uint8_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CrxBitstream_mdatSize_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, uint64_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->mdatSize = arg2;
  
}


uint64_t *_wrap_CrxBitstream_mdatSize_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result =  ((arg1)->mdatSize);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBitstream_curBufOffset_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, uint64_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->curBufOffset = arg2;
  
}


uint64_t *_wrap_CrxBitstream_curBufOffset_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result =  ((arg1)->curBufOffset);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBitstream_curPos_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, uint32_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->curPos = arg2;
  
}


uint32_t *_wrap_CrxBitstream_curPos_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result =  ((arg1)->curPos);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBitstream_curBufSize_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, uint32_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->curBufSize = arg2;
  
}


uint32_t *_wrap_CrxBitstream_curBufSize_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result =  ((arg1)->curBufSize);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBitstream_bitData_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, uint32_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->bitData = arg2;
  
}


uint32_t *_wrap_CrxBitstream_bitData_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result =  ((arg1)->bitData);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBitstream_bitsLeft_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, int32_t *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->bitsLeft = arg2;
  
}


int32_t *_wrap_CrxBitstream_bitsLeft_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result =  ((arg1)->bitsLeft);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBitstream_input_set_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, LibRaw_abstract_datastream *_swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  LibRaw_abstract_datastream *arg2 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  arg2 = *(LibRaw_abstract_datastream **)&_swig_go_1; 
  
  if (arg1) (arg1)->input = arg2;
  
}


LibRaw_abstract_datastream *_wrap_CrxBitstream_input_get_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  LibRaw_abstract_datastream *result = 0 ;
  LibRaw_abstract_datastream *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result = (LibRaw_abstract_datastream *) ((arg1)->input);
  *(LibRaw_abstract_datastream **)&_swig_go_result = (LibRaw_abstract_datastream *)result; 
  return _swig_go_result;
}


CrxBitstream *_wrap_new_CrxBitstream_librawgo_fabcac84457d17f6() {
  CrxBitstream *result = 0 ;
  CrxBitstream *_swig_go_result;
  
  
  result = (CrxBitstream *)new CrxBitstream();
  *(CrxBitstream **)&_swig_go_result = (CrxBitstream *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxBitstream_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CrxBandParam_bitStream_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, CrxBitstream *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  CrxBitstream *arg2 = (CrxBitstream *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(CrxBitstream **)&_swig_go_1; 
  
  if (arg1) (arg1)->bitStream = *arg2;
  
}


CrxBitstream *_wrap_CrxBandParam_bitStream_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  CrxBitstream *result = 0 ;
  CrxBitstream *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (CrxBitstream *)& ((arg1)->bitStream);
  *(CrxBitstream **)&_swig_go_result = (CrxBitstream *)result; 
  return _swig_go_result;
}


void _wrap_CrxBandParam_subbandWidth_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int16_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->subbandWidth = arg2;
  
}


int16_t *_wrap_CrxBandParam_subbandWidth_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->subbandWidth);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_subbandHeight_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int16_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->subbandHeight = arg2;
  
}


int16_t *_wrap_CrxBandParam_subbandHeight_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->subbandHeight);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_roundedBitsMask_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->roundedBitsMask = arg2;
  
}


int32_t *_wrap_CrxBandParam_roundedBitsMask_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->roundedBitsMask);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_roundedBits_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->roundedBits = arg2;
  
}


int32_t *_wrap_CrxBandParam_roundedBits_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->roundedBits);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_curLine_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int16_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->curLine = arg2;
  
}


int16_t *_wrap_CrxBandParam_curLine_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->curLine);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_lineBuf0_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->lineBuf0 = arg2;
  
}


int32_t *_wrap_CrxBandParam_lineBuf0_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->lineBuf0);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxBandParam_lineBuf1_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->lineBuf1 = arg2;
  
}


int32_t *_wrap_CrxBandParam_lineBuf1_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->lineBuf1);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxBandParam_lineBuf2_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->lineBuf2 = arg2;
  
}


int32_t *_wrap_CrxBandParam_lineBuf2_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->lineBuf2);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxBandParam_sParam_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->sParam = arg2;
  
}


int32_t *_wrap_CrxBandParam_sParam_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->sParam);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_kParam_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->kParam = arg2;
  
}


int32_t *_wrap_CrxBandParam_kParam_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->kParam);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxBandParam_paramData_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->paramData = arg2;
  
}


int32_t *_wrap_CrxBandParam_paramData_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->paramData);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxBandParam_nonProgrData_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->nonProgrData = arg2;
  
}


int32_t *_wrap_CrxBandParam_nonProgrData_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->nonProgrData);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxBandParam_supportsPartial_set_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int8_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->supportsPartial = arg2;
  
}


int8_t *_wrap_CrxBandParam_supportsPartial_get_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result =  ((arg1)->supportsPartial);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


CrxBandParam *_wrap_new_CrxBandParam_librawgo_fabcac84457d17f6() {
  CrxBandParam *result = 0 ;
  CrxBandParam *_swig_go_result;
  
  
  result = (CrxBandParam *)new CrxBandParam();
  *(CrxBandParam **)&_swig_go_result = (CrxBandParam *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxBandParam_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CrxWaveletTransform_subband0Buf_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int32_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->subband0Buf = arg2;
  
}


int32_t *_wrap_CrxWaveletTransform_subband0Buf_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->subband0Buf);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_subband1Buf_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int32_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->subband1Buf = arg2;
  
}


int32_t *_wrap_CrxWaveletTransform_subband1Buf_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->subband1Buf);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_subband2Buf_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int32_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->subband2Buf = arg2;
  
}


int32_t *_wrap_CrxWaveletTransform_subband2Buf_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->subband2Buf);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_subband3Buf_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int32_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->subband3Buf = arg2;
  
}


int32_t *_wrap_CrxWaveletTransform_subband3Buf_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result = (int32_t *) ((arg1)->subband3Buf);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_lineBuf_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int32_t **_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t **arg2 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  arg2 = *(int32_t ***)&_swig_go_1; 
  
  {
    size_t ii;
    int32_t * *b = (int32_t * *) arg1->lineBuf;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((int32_t * *) arg2 + ii);
  }
  
}


int32_t *(*_wrap_CrxWaveletTransform_lineBuf_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0))[8] {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int32_t **result = 0 ;
  int32_t *(*_swig_go_result)[8];
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result = (int32_t **)(int32_t **) ((arg1)->lineBuf);
  *(int32_t ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_curLine_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int16_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->curLine = arg2;
  
}


int16_t *_wrap_CrxWaveletTransform_curLine_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result =  ((arg1)->curLine);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_curH_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int16_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->curH = arg2;
  
}


int16_t *_wrap_CrxWaveletTransform_curH_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result =  ((arg1)->curH);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_fltTapH_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int8_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->fltTapH = arg2;
  
}


int8_t *_wrap_CrxWaveletTransform_fltTapH_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result =  ((arg1)->fltTapH);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_height_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int16_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->height = arg2;
  
}


int16_t *_wrap_CrxWaveletTransform_height_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result =  ((arg1)->height);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxWaveletTransform_width_set_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0, int16_t *_swig_go_1) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->width = arg2;
  
}


int16_t *_wrap_CrxWaveletTransform_width_get_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  result =  ((arg1)->width);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


CrxWaveletTransform *_wrap_new_CrxWaveletTransform_librawgo_fabcac84457d17f6() {
  CrxWaveletTransform *result = 0 ;
  CrxWaveletTransform *_swig_go_result;
  
  
  result = (CrxWaveletTransform *)new CrxWaveletTransform();
  *(CrxWaveletTransform **)&_swig_go_result = (CrxWaveletTransform *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxWaveletTransform_librawgo_fabcac84457d17f6(CrxWaveletTransform *_swig_go_0) {
  CrxWaveletTransform *arg1 = (CrxWaveletTransform *) 0 ;
  
  arg1 = *(CrxWaveletTransform **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CrxSubband_bandParam_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, CrxBandParam *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  CrxBandParam *arg2 = (CrxBandParam *) 0 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  arg2 = *(CrxBandParam **)&_swig_go_1; 
  
  if (arg1) (arg1)->bandParam = arg2;
  
}


CrxBandParam *_wrap_CrxSubband_bandParam_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  CrxBandParam *result = 0 ;
  CrxBandParam *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result = (CrxBandParam *) ((arg1)->bandParam);
  *(CrxBandParam **)&_swig_go_result = (CrxBandParam *)result; 
  return _swig_go_result;
}


void _wrap_CrxSubband_mdatOffset_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, uint64_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->mdatOffset = arg2;
  
}


uint64_t *_wrap_CrxSubband_mdatOffset_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->mdatOffset);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_bandBuf_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, uint8_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->bandBuf = arg2;
  
}


uint8_t *_wrap_CrxSubband_bandBuf_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint8_t *result = 0 ;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result = (uint8_t *) ((arg1)->bandBuf);
  *(uint8_t **)&_swig_go_result = (uint8_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxSubband_bandSize_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, int32_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->bandSize = arg2;
  
}


int32_t *_wrap_CrxSubband_bandSize_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->bandSize);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_dataSize_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, uint64_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->dataSize = arg2;
  
}


uint64_t *_wrap_CrxSubband_dataSize_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->dataSize);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_supportsPartial_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, int8_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->supportsPartial = arg2;
  
}


int8_t *_wrap_CrxSubband_supportsPartial_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->supportsPartial);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_quantValue_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, int32_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->quantValue = arg2;
  
}


int32_t *_wrap_CrxSubband_quantValue_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->quantValue);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_width_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, uint16_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint16_t arg2 ;
  uint16_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (uint16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg2 = (uint16_t)*argp2;
  
  
  if (arg1) (arg1)->width = arg2;
  
}


uint16_t *_wrap_CrxSubband_width_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint16_t result;
  uint16_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->width);
  *(uint16_t **)&_swig_go_result = new uint16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_height_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, uint16_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint16_t arg2 ;
  uint16_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (uint16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg2 = (uint16_t)*argp2;
  
  
  if (arg1) (arg1)->height = arg2;
  
}


uint16_t *_wrap_CrxSubband_height_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  uint16_t result;
  uint16_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->height);
  *(uint16_t **)&_swig_go_result = new uint16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_paramK_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, int32_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->paramK = arg2;
  
}


int32_t *_wrap_CrxSubband_paramK_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->paramK);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxSubband_dataOffset_set_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0, int64_t *_swig_go_1) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->dataOffset = arg2;
  
}


int64_t *_wrap_CrxSubband_dataOffset_get_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result =  ((arg1)->dataOffset);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


CrxSubband *_wrap_new_CrxSubband_librawgo_fabcac84457d17f6() {
  CrxSubband *result = 0 ;
  CrxSubband *_swig_go_result;
  
  
  result = (CrxSubband *)new CrxSubband();
  *(CrxSubband **)&_swig_go_result = (CrxSubband *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxSubband_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CrxPlaneComp_compBuf_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, uint8_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->compBuf = arg2;
  
}


uint8_t *_wrap_CrxPlaneComp_compBuf_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  uint8_t *result = 0 ;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result = (uint8_t *) ((arg1)->compBuf);
  *(uint8_t **)&_swig_go_result = (uint8_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_subBands_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, CrxSubband *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  CrxSubband *arg2 = (CrxSubband *) 0 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  arg2 = *(CrxSubband **)&_swig_go_1; 
  
  if (arg1) (arg1)->subBands = arg2;
  
}


CrxSubband *_wrap_CrxPlaneComp_subBands_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  CrxSubband *result = 0 ;
  CrxSubband *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result = (CrxSubband *) ((arg1)->subBands);
  *(CrxSubband **)&_swig_go_result = (CrxSubband *)result; 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_waveletTransform_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, CrxWaveletTransform *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  CrxWaveletTransform *arg2 = (CrxWaveletTransform *) 0 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  arg2 = *(CrxWaveletTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->waveletTransform = arg2;
  
}


CrxWaveletTransform *_wrap_CrxPlaneComp_waveletTransform_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  CrxWaveletTransform *result = 0 ;
  CrxWaveletTransform *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result = (CrxWaveletTransform *) ((arg1)->waveletTransform);
  *(CrxWaveletTransform **)&_swig_go_result = (CrxWaveletTransform *)result; 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_compNumber_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int8_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->compNumber = arg2;
  
}


int8_t *_wrap_CrxPlaneComp_compNumber_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result =  ((arg1)->compNumber);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_dataOffset_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int64_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->dataOffset = arg2;
  
}


int64_t *_wrap_CrxPlaneComp_dataOffset_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result =  ((arg1)->dataOffset);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_compSize_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int32_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->compSize = arg2;
  
}


int32_t *_wrap_CrxPlaneComp_compSize_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result =  ((arg1)->compSize);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_supportsPartial_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int8_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->supportsPartial = arg2;
  
}


int8_t *_wrap_CrxPlaneComp_supportsPartial_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result =  ((arg1)->supportsPartial);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_roundedBitsMask_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int32_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->roundedBitsMask = arg2;
  
}


int32_t *_wrap_CrxPlaneComp_roundedBitsMask_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result =  ((arg1)->roundedBitsMask);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxPlaneComp_tileFlag_set_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int8_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->tileFlag = arg2;
  
}


int8_t *_wrap_CrxPlaneComp_tileFlag_get_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  result =  ((arg1)->tileFlag);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


CrxPlaneComp *_wrap_new_CrxPlaneComp_librawgo_fabcac84457d17f6() {
  CrxPlaneComp *result = 0 ;
  CrxPlaneComp *_swig_go_result;
  
  
  result = (CrxPlaneComp *)new CrxPlaneComp();
  *(CrxPlaneComp **)&_swig_go_result = (CrxPlaneComp *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxPlaneComp_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CrxTile_comps_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, CrxPlaneComp *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  CrxPlaneComp *arg2 = (CrxPlaneComp *) 0 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  arg2 = *(CrxPlaneComp **)&_swig_go_1; 
  
  if (arg1) (arg1)->comps = arg2;
  
}


CrxPlaneComp *_wrap_CrxTile_comps_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  CrxPlaneComp *result = 0 ;
  CrxPlaneComp *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result = (CrxPlaneComp *) ((arg1)->comps);
  *(CrxPlaneComp **)&_swig_go_result = (CrxPlaneComp *)result; 
  return _swig_go_result;
}


void _wrap_CrxTile_tileFlag_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, int8_t *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->tileFlag = arg2;
  
}


int8_t *_wrap_CrxTile_tileFlag_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result =  ((arg1)->tileFlag);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxTile_tileNumber_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, int8_t *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int8_t arg2 ;
  int8_t *argp2 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  argp2 = (int8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int8_t");
  }
  arg2 = (int8_t)*argp2;
  
  
  if (arg1) (arg1)->tileNumber = arg2;
  
}


int8_t *_wrap_CrxTile_tileNumber_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int8_t result;
  int8_t *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result =  ((arg1)->tileNumber);
  *(int8_t **)&_swig_go_result = new int8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxTile_dataOffset_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, int64_t *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->dataOffset = arg2;
  
}


int64_t *_wrap_CrxTile_dataOffset_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result =  ((arg1)->dataOffset);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxTile_tileSize_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, int32_t *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->tileSize = arg2;
  
}


int32_t *_wrap_CrxTile_tileSize_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result =  ((arg1)->tileSize);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_CrxTile_width_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, uint16_t *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  uint16_t arg2 ;
  uint16_t *argp2 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  argp2 = (uint16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg2 = (uint16_t)*argp2;
  
  
  if (arg1) (arg1)->width = arg2;
  
}


uint16_t *_wrap_CrxTile_width_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  uint16_t result;
  uint16_t *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result =  ((arg1)->width);
  *(uint16_t **)&_swig_go_result = new uint16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxTile_height_set_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0, uint16_t *_swig_go_1) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  uint16_t arg2 ;
  uint16_t *argp2 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  argp2 = (uint16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg2 = (uint16_t)*argp2;
  
  
  if (arg1) (arg1)->height = arg2;
  
}


uint16_t *_wrap_CrxTile_height_get_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  uint16_t result;
  uint16_t *_swig_go_result;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  result =  ((arg1)->height);
  *(uint16_t **)&_swig_go_result = new uint16_t(result); 
  return _swig_go_result;
}


CrxTile *_wrap_new_CrxTile_librawgo_fabcac84457d17f6() {
  CrxTile *result = 0 ;
  CrxTile *_swig_go_result;
  
  
  result = (CrxTile *)new CrxTile();
  *(CrxTile **)&_swig_go_result = (CrxTile *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxTile_librawgo_fabcac84457d17f6(CrxTile *_swig_go_0) {
  CrxTile *arg1 = (CrxTile *) 0 ;
  
  arg1 = *(CrxTile **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CrxImage_nPlanes_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->nPlanes = arg2;
  
}


uint8_t *_wrap_CrxImage_nPlanes_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->nPlanes);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_planeWidth_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint16_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint16_t arg2 ;
  uint16_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg2 = (uint16_t)*argp2;
  
  
  if (arg1) (arg1)->planeWidth = arg2;
  
}


uint16_t *_wrap_CrxImage_planeWidth_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint16_t result;
  uint16_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->planeWidth);
  *(uint16_t **)&_swig_go_result = new uint16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_planeHeight_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint16_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint16_t arg2 ;
  uint16_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg2 = (uint16_t)*argp2;
  
  
  if (arg1) (arg1)->planeHeight = arg2;
  
}


uint16_t *_wrap_CrxImage_planeHeight_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint16_t result;
  uint16_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->planeHeight);
  *(uint16_t **)&_swig_go_result = new uint16_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_samplePrecision_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->samplePrecision = arg2;
  
}


uint8_t *_wrap_CrxImage_samplePrecision_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->samplePrecision);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_subbandCount_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->subbandCount = arg2;
  
}


uint8_t *_wrap_CrxImage_subbandCount_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->subbandCount);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_levels_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->levels = arg2;
  
}


uint8_t *_wrap_CrxImage_levels_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->levels);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_nBits_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->nBits = arg2;
  
}


uint8_t *_wrap_CrxImage_nBits_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->nBits);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_encType_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->encType = arg2;
  
}


uint8_t *_wrap_CrxImage_encType_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->encType);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_tileCols_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->tileCols = arg2;
  
}


uint8_t *_wrap_CrxImage_tileCols_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->tileCols);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_tileRows_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint8_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint8_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint8_t");
  }
  arg2 = (uint8_t)*argp2;
  
  
  if (arg1) (arg1)->tileRows = arg2;
  
}


uint8_t *_wrap_CrxImage_tileRows_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint8_t result;
  uint8_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->tileRows);
  *(uint8_t **)&_swig_go_result = new uint8_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_tiles_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, CrxTile *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  CrxTile *arg2 = (CrxTile *) 0 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = *(CrxTile **)&_swig_go_1; 
  
  if (arg1) (arg1)->tiles = arg2;
  
}


CrxTile *_wrap_CrxImage_tiles_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  CrxTile *result = 0 ;
  CrxTile *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result = (CrxTile *) ((arg1)->tiles);
  *(CrxTile **)&_swig_go_result = (CrxTile *)result; 
  return _swig_go_result;
}


void _wrap_CrxImage_mdatOffset_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint64_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->mdatOffset = arg2;
  
}


uint64_t *_wrap_CrxImage_mdatOffset_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->mdatOffset);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_mdatSize_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, uint64_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->mdatSize = arg2;
  
}


uint64_t *_wrap_CrxImage_mdatSize_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result =  ((arg1)->mdatSize);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_CrxImage_outBufs_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, int16_t **_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int16_t **arg2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = *(int16_t ***)&_swig_go_1; 
  
  {
    size_t ii;
    int16_t * *b = (int16_t * *) arg1->outBufs;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int16_t * *) arg2 + ii);
  }
  
}


int16_t *(*_wrap_CrxImage_outBufs_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0))[4] {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int16_t **result = 0 ;
  int16_t *(*_swig_go_result)[4];
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result = (int16_t **)(int16_t **) ((arg1)->outBufs);
  *(int16_t ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CrxImage_planeBuf_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, int16_t *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int16_t *arg2 = (int16_t *) 0 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = *(int16_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->planeBuf = arg2;
  
}


int16_t *_wrap_CrxImage_planeBuf_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int16_t *result = 0 ;
  int16_t *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result = (int16_t *) ((arg1)->planeBuf);
  *(int16_t **)&_swig_go_result = (int16_t *)result; 
  return _swig_go_result;
}


void _wrap_CrxImage_input_set_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, LibRaw_abstract_datastream *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  LibRaw_abstract_datastream *arg2 = (LibRaw_abstract_datastream *) 0 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = *(LibRaw_abstract_datastream **)&_swig_go_1; 
  
  if (arg1) (arg1)->input = arg2;
  
}


LibRaw_abstract_datastream *_wrap_CrxImage_input_get_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  LibRaw_abstract_datastream *result = 0 ;
  LibRaw_abstract_datastream *_swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result = (LibRaw_abstract_datastream *) ((arg1)->input);
  *(LibRaw_abstract_datastream **)&_swig_go_result = (LibRaw_abstract_datastream *)result; 
  return _swig_go_result;
}


CrxImage *_wrap_new_CrxImage_librawgo_fabcac84457d17f6() {
  CrxImage *result = 0 ;
  CrxImage *_swig_go_result;
  
  
  result = (CrxImage *)new CrxImage();
  *(CrxImage **)&_swig_go_result = (CrxImage *)result; 
  return _swig_go_result;
}


void _wrap_delete_CrxImage_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_E_HAS_TILES_ON_THE_RIGHT_librawgo_fabcac84457d17f6() {
  TileFlags result;
  intgo _swig_go_result;
  
  
  result = E_HAS_TILES_ON_THE_RIGHT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_E_HAS_TILES_ON_THE_LEFT_librawgo_fabcac84457d17f6() {
  TileFlags result;
  intgo _swig_go_result;
  
  
  result = E_HAS_TILES_ON_THE_LEFT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_E_HAS_TILES_ON_THE_BOTTOM_librawgo_fabcac84457d17f6() {
  TileFlags result;
  intgo _swig_go_result;
  
  
  result = E_HAS_TILES_ON_THE_BOTTOM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_E_HAS_TILES_ON_THE_TOP_librawgo_fabcac84457d17f6() {
  TileFlags result;
  intgo _swig_go_result;
  
  
  result = E_HAS_TILES_ON_THE_TOP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_exCoefNumTbl_set_librawgo_fabcac84457d17f6(int32_t *_swig_go_0) {
  int32_t *arg1 ;
  
  arg1 = *(int32_t **)&_swig_go_0; 
  
  {
    size_t ii;
    int32_t *b = (int32_t *) exCoefNumTbl;
    for (ii = 0; ii < (size_t)0x120; ii++) b[ii] = *((int32_t *) arg1 + ii);
  }
  
}


int32_t (*_wrap_exCoefNumTbl_get_librawgo_fabcac84457d17f6())[0x120] {
  int32_t *result = 0 ;
  int32_t (*_swig_go_result)[0x120];
  
  
  result = (int32_t *)(int32_t *)exCoefNumTbl;
  *(int32_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_JS_set_librawgo_fabcac84457d17f6(uint32_t *_swig_go_0) {
  uint32_t *arg1 ;
  
  arg1 = *(uint32_t **)&_swig_go_0; 
  
  {
    size_t ii;
    uint32_t *b = (uint32_t *) JS;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((uint32_t *) arg1 + ii);
  }
  
}


uint32_t (*_wrap_JS_get_librawgo_fabcac84457d17f6())[32] {
  uint32_t *result = 0 ;
  uint32_t (*_swig_go_result)[32];
  
  
  result = (uint32_t *)(uint32_t *)JS;
  *(uint32_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_J_set_librawgo_fabcac84457d17f6(uint32_t *_swig_go_0) {
  uint32_t *arg1 ;
  
  arg1 = *(uint32_t **)&_swig_go_0; 
  
  {
    size_t ii;
    uint32_t *b = (uint32_t *) J;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((uint32_t *) arg1 + ii);
  }
  
}


uint32_t (*_wrap_J_get_librawgo_fabcac84457d17f6())[32] {
  uint32_t *result = 0 ;
  uint32_t (*_swig_go_result)[32];
  
  
  result = (uint32_t *)(uint32_t *)J;
  *(uint32_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_crxFillBuffer_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  crxFillBuffer(arg1);
  
}


intgo _wrap_crxBitstreamGetZeros_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  
  result = (int)crxBitstreamGetZeros(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


uint32_t *_wrap_crxBitstreamGetBits_librawgo_fabcac84457d17f6(CrxBitstream *_swig_go_0, intgo _swig_go_1) {
  CrxBitstream *arg1 = (CrxBitstream *) 0 ;
  int arg2 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(CrxBitstream **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = crxBitstreamGetBits(arg1,arg2);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


intgo _wrap_crxPredictKParameter__SWIG_0_librawgo_fabcac84457d17f6(int32_t *_swig_go_0, int32_t *_swig_go_1, int32_t *_swig_go_2) {
  int32_t arg1 ;
  int32_t arg2 ;
  int32_t arg3 ;
  int32_t *argp1 ;
  int32_t *argp2 ;
  int32_t *argp3 ;
  int result;
  intgo _swig_go_result;
  
  
  argp1 = (int32_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg1 = (int32_t)*argp1;
  
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  argp3 = (int32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg3 = (int32_t)*argp3;
  
  
  result = (int)crxPredictKParameter(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxPredictKParameter__SWIG_1_librawgo_fabcac84457d17f6(int32_t *_swig_go_0, int32_t *_swig_go_1) {
  int32_t arg1 ;
  int32_t arg2 ;
  int32_t *argp1 ;
  int32_t *argp2 ;
  int result;
  intgo _swig_go_result;
  
  
  argp1 = (int32_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg1 = (int32_t)*argp1;
  
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  result = (int)crxPredictKParameter(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_crxDecodeSymbolL1__SWIG_0_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1, int32_t *_swig_go_2) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t arg3 ;
  int32_t *argp2 ;
  int32_t *argp3 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  argp3 = (int32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg3 = (int32_t)*argp3;
  
  
  crxDecodeSymbolL1(arg1,arg2,arg3);
  
}


void _wrap_crxDecodeSymbolL1__SWIG_1_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  crxDecodeSymbolL1(arg1,arg2);
  
}


intgo _wrap_crxDecodeLine__SWIG_0_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int)crxDecodeLine(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_crxDecodeSymbolL1Rounded__SWIG_0_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1, int32_t *_swig_go_2) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t arg3 ;
  int32_t *argp2 ;
  int32_t *argp3 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  argp3 = (int32_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg3 = (int32_t)*argp3;
  
  
  crxDecodeSymbolL1Rounded(arg1,arg2,arg3);
  
}


void _wrap_crxDecodeSymbolL1Rounded__SWIG_1_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, int32_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  crxDecodeSymbolL1Rounded(arg1,arg2);
  
}


void _wrap_crxDecodeSymbolL1Rounded__SWIG_2_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  crxDecodeSymbolL1Rounded(arg1);
  
}


intgo _wrap_crxDecodeLineRounded_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int)crxDecodeLineRounded(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxDecodeLineNoRefPrevLine_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int)crxDecodeLineNoRefPrevLine(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxDecodeTopLine_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int)crxDecodeTopLine(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxDecodeTopLineRounded_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int)crxDecodeTopLineRounded(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxDecodeTopLineNoRefPrevLine_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  
  result = (int)crxDecodeTopLineNoRefPrevLine(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxDecodeLine__SWIG_1_librawgo_fabcac84457d17f6(CrxBandParam *_swig_go_0, uint8_t *_swig_go_1) {
  CrxBandParam *arg1 = (CrxBandParam *) 0 ;
  uint8_t *arg2 = (uint8_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam **)&_swig_go_0; 
  arg2 = *(uint8_t **)&_swig_go_1; 
  
  result = (int)crxDecodeLine(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxDecodeLineWithIQuantization_librawgo_fabcac84457d17f6(CrxSubband *_swig_go_0) {
  CrxSubband *arg1 = (CrxSubband *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxSubband **)&_swig_go_0; 
  
  result = (int)crxDecodeLineWithIQuantization(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_crxHorizontal53_librawgo_fabcac84457d17f6(int32_t *_swig_go_0, int32_t *_swig_go_1, CrxWaveletTransform *_swig_go_2, uint32_t *_swig_go_3) {
  int32_t *arg1 = (int32_t *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  CrxWaveletTransform *arg3 = (CrxWaveletTransform *) 0 ;
  uint32_t arg4 ;
  uint32_t *argp4 ;
  
  arg1 = *(int32_t **)&_swig_go_0; 
  arg2 = *(int32_t **)&_swig_go_1; 
  arg3 = *(CrxWaveletTransform **)&_swig_go_2; 
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  crxHorizontal53(arg1,arg2,arg3,arg4);
  
}


int32_t *_wrap_crxIdwt53FilterGetLine_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int32_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  int32_t *result = 0 ;
  int32_t *_swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  result = (int32_t *)crxIdwt53FilterGetLine(arg1,arg2);
  *(int32_t **)&_swig_go_result = (int32_t *)result; 
  return _swig_go_result;
}


intgo _wrap_crxIdwt53FilterDecode_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int32_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  result = (int)crxIdwt53FilterDecode(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxIdwt53FilterTransform_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, uint32_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  result = (int)crxIdwt53FilterTransform(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxIdwt53FilterInitialize_librawgo_fabcac84457d17f6(CrxPlaneComp *_swig_go_0, int32_t *_swig_go_1) {
  CrxPlaneComp *arg1 = (CrxPlaneComp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxPlaneComp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  result = (int)crxIdwt53FilterInitialize(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_crxFreeSubbandData_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, CrxPlaneComp *_swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  CrxPlaneComp *arg2 = (CrxPlaneComp *) 0 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = *(CrxPlaneComp **)&_swig_go_1; 
  
  crxFreeSubbandData(arg1,arg2);
  
}


void _wrap_crxConvertPlaneLine__SWIG_0_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, int32_t *_swig_go_4, intgo _swig_go_5) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int32_t *arg5 = (int32_t *) 0 ;
  int arg6 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(int32_t **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  crxConvertPlaneLine(arg1,arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_crxConvertPlaneLine__SWIG_1_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, int32_t *_swig_go_4) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int32_t *arg5 = (int32_t *) 0 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(int32_t **)&_swig_go_4; 
  
  crxConvertPlaneLine(arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_crxConvertPlaneLine__SWIG_2_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  crxConvertPlaneLine(arg1,arg2,arg3,arg4);
  
}


void _wrap_crxConvertPlaneLine__SWIG_3_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  crxConvertPlaneLine(arg1,arg2,arg3);
  
}


void _wrap_crxConvertPlaneLine__SWIG_4_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, intgo _swig_go_1) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int arg2 ;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  crxConvertPlaneLine(arg1,arg2);
  
}


intgo _wrap_crxParamInit_librawgo_fabcac84457d17f6(CrxBandParam **_swig_go_0, uint64_t *_swig_go_1, uint64_t *_swig_go_2, uint32_t *_swig_go_3, uint32_t *_swig_go_4, int32_t *_swig_go_5, uint32_t *_swig_go_6, LibRaw_abstract_datastream *_swig_go_7) {
  CrxBandParam **arg1 = (CrxBandParam **) 0 ;
  uint64_t arg2 ;
  uint64_t arg3 ;
  uint32_t arg4 ;
  uint32_t arg5 ;
  int32_t arg6 ;
  uint32_t arg7 ;
  LibRaw_abstract_datastream *arg8 = (LibRaw_abstract_datastream *) 0 ;
  uint64_t *argp2 ;
  uint64_t *argp3 ;
  uint32_t *argp4 ;
  uint32_t *argp5 ;
  int32_t *argp6 ;
  uint32_t *argp7 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxBandParam ***)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  argp3 = (uint64_t *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg3 = (uint64_t)*argp3;
  
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  
  argp6 = (int32_t *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg6 = (int32_t)*argp6;
  
  
  argp7 = (uint32_t *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg7 = (uint32_t)*argp7;
  
  arg8 = *(LibRaw_abstract_datastream **)&_swig_go_7; 
  
  result = (int)crxParamInit(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxSetupSubbandData_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0, CrxPlaneComp *_swig_go_1, CrxTile *_swig_go_2, uint32_t *_swig_go_3) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  CrxPlaneComp *arg2 = (CrxPlaneComp *) 0 ;
  CrxTile *arg3 = (CrxTile *) 0 ;
  uint32_t arg4 ;
  uint32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  arg2 = *(CrxPlaneComp **)&_swig_go_1; 
  arg3 = *(CrxTile **)&_swig_go_2; 
  
  argp4 = (uint32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg4 = (uint32_t)*argp4;
  
  
  result = (int)crxSetupSubbandData(arg1,arg2,(CrxTile const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxReadSubbandHeaders_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, CrxImage *_swig_go_1, CrxTile *_swig_go_2, CrxPlaneComp *_swig_go_3, uint8_t **_swig_go_4, int32_t *_swig_go_5) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  CrxImage *arg2 = (CrxImage *) 0 ;
  CrxTile *arg3 = (CrxTile *) 0 ;
  CrxPlaneComp *arg4 = (CrxPlaneComp *) 0 ;
  uint8_t **arg5 = (uint8_t **) 0 ;
  int32_t *arg6 = (int32_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  arg2 = *(CrxImage **)&_swig_go_1; 
  arg3 = *(CrxTile **)&_swig_go_2; 
  arg4 = *(CrxPlaneComp **)&_swig_go_3; 
  arg5 = *(uint8_t ***)&_swig_go_4; 
  arg6 = *(int32_t **)&_swig_go_5; 
  
  result = (int)crxReadSubbandHeaders(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxReadImageHeaders_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, CrxImage *_swig_go_1, uint8_t *_swig_go_2, int32_t *_swig_go_3) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  CrxImage *arg2 = (CrxImage *) 0 ;
  uint8_t *arg3 = (uint8_t *) 0 ;
  int32_t arg4 ;
  int32_t *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  arg2 = *(CrxImage **)&_swig_go_1; 
  arg3 = *(uint8_t **)&_swig_go_2; 
  
  argp4 = (int32_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg4 = (int32_t)*argp4;
  
  
  result = (int)crxReadImageHeaders(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxSetupImageData_librawgo_fabcac84457d17f6(crx_data_header_t *_swig_go_0, CrxImage *_swig_go_1, int16_t *_swig_go_2, uint64_t *_swig_go_3, uint32_t *_swig_go_4, int32_t *_swig_go_5, uint8_t *_swig_go_6) {
  crx_data_header_t *arg1 = (crx_data_header_t *) 0 ;
  CrxImage *arg2 = (CrxImage *) 0 ;
  int16_t *arg3 = (int16_t *) 0 ;
  uint64_t arg4 ;
  uint32_t arg5 ;
  int32_t arg6 ;
  uint8_t *arg7 = (uint8_t *) 0 ;
  uint64_t *argp4 ;
  uint32_t *argp5 ;
  int32_t *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(crx_data_header_t **)&_swig_go_0; 
  arg2 = *(CrxImage **)&_swig_go_1; 
  arg3 = *(int16_t **)&_swig_go_2; 
  
  argp4 = (uint64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg4 = (uint64_t)*argp4;
  
  
  argp5 = (uint32_t *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg5 = (uint32_t)*argp5;
  
  
  argp6 = (int32_t *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg6 = (int32_t)*argp6;
  
  arg7 = *(uint8_t **)&_swig_go_6; 
  
  result = (int)crxSetupImageData(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_crxFreeImageData_librawgo_fabcac84457d17f6(CrxImage *_swig_go_0) {
  CrxImage *arg1 = (CrxImage *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CrxImage **)&_swig_go_0; 
  
  result = (int)crxFreeImageData(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_unpack7bytesto4x16_librawgo_fabcac84457d17f6(char *_swig_go_0, short *_swig_go_1) {
  unsigned char *arg1 = (unsigned char *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  arg1 = *(unsigned char **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  unpack7bytesto4x16(arg1,arg2);
  
}


void _wrap_unpack28bytesto16x16ns_librawgo_fabcac84457d17f6(char *_swig_go_0, short *_swig_go_1) {
  unsigned char *arg1 = (unsigned char *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  arg1 = *(unsigned char **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  unpack28bytesto16x16ns(arg1,arg2);
  
}


void _wrap_swab32arr_librawgo_fabcac84457d17f6(intgo *_swig_go_0, intgo _swig_go_1) {
  unsigned int *arg1 = (unsigned int *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(unsigned int **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  swab32arr(arg1,arg2);
  
}


void _wrap_unpack7bytesto4x16_nikon_librawgo_fabcac84457d17f6(char *_swig_go_0, short *_swig_go_1) {
  unsigned char *arg1 = (unsigned char *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  arg1 = *(unsigned char **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  unpack7bytesto4x16_nikon(arg1,arg2);
  
}


void _wrap_pana_cs6_page_decoder_pixelbuffer_set_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0, intgo *_swig_go_1) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int *arg2 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->pixelbuffer;
    for (ii = 0; ii < (size_t)14; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_pana_cs6_page_decoder_pixelbuffer_get_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->pixelbuffer);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_pana_cs6_page_decoder_lastoffset_set_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0, intgo _swig_go_1) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->lastoffset = arg2;
  
}


intgo _wrap_pana_cs6_page_decoder_lastoffset_get_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->lastoffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_pana_cs6_page_decoder_maxoffset_set_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0, intgo _swig_go_1) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->maxoffset = arg2;
  
}


intgo _wrap_pana_cs6_page_decoder_maxoffset_get_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->maxoffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_pana_cs6_page_decoder_current_set_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0, char _swig_go_1) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned char arg2 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  arg2 = (unsigned char)_swig_go_1; 
  
  if (arg1) (arg1)->current = arg2;
  
}


char _wrap_pana_cs6_page_decoder_current_get_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned char result;
  char _swig_go_result;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  result = (unsigned char) ((arg1)->current);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_pana_cs6_page_decoder_buffer_set_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0, char *_swig_go_1) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  if (arg1) (arg1)->buffer = arg2;
  
}


char *_wrap_pana_cs6_page_decoder_buffer_get_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  result = (unsigned char *) ((arg1)->buffer);
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


pana_cs6_page_decoder *_wrap_new_pana_cs6_page_decoder_librawgo_fabcac84457d17f6(char *_swig_go_0, intgo _swig_go_1) {
  unsigned char *arg1 = (unsigned char *) 0 ;
  unsigned int arg2 ;
  pana_cs6_page_decoder *result = 0 ;
  pana_cs6_page_decoder *_swig_go_result;
  
  arg1 = *(unsigned char **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (pana_cs6_page_decoder *)new pana_cs6_page_decoder(arg1,arg2);
  *(pana_cs6_page_decoder **)&_swig_go_result = (pana_cs6_page_decoder *)result; 
  return _swig_go_result;
}


void _wrap_pana_cs6_page_decoder_read_page_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  (arg1)->read_page();
  
}


intgo _wrap_pana_cs6_page_decoder_nextpixel_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  result = (unsigned int)(arg1)->nextpixel();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_pana_cs6_page_decoder_librawgo_fabcac84457d17f6(pana_cs6_page_decoder *_swig_go_0) {
  pana_cs6_page_decoder *arg1 = (pana_cs6_page_decoder *) 0 ;
  
  arg1 = *(pana_cs6_page_decoder **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_cleargps_librawgo_fabcac84457d17f6(libraw_gps_info_t *_swig_go_0) {
  libraw_gps_info_t *arg1 = (libraw_gps_info_t *) 0 ;
  
  arg1 = *(libraw_gps_info_t **)&_swig_go_0; 
  
  cleargps(arg1);
  
}


void _wrap_x3f_clear_librawgo_fabcac84457d17f6(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  x3f_clear(arg1);
  
}


void _wrap_foveon_data_t_make_set_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0, _gostring_ _swig_go_1) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->make = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->make, (const char *)arg2);
    } else {
      arg1->make = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_foveon_data_t_make_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->make);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_foveon_data_t_model_set_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0, _gostring_ _swig_go_1) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->model = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->model, (const char *)arg2);
    } else {
      arg1->model = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_foveon_data_t_model_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (char *) ((arg1)->model);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_raw_width_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->raw_width);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_raw_height_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->raw_height);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_white_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->white);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_left_margin_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->left_margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_top_margin_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->top_margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_width_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->width);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_data_t_height_get_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  result = (int)(int) ((arg1)->height);
  _swig_go_result = result; 
  return _swig_go_result;
}


foveon_data_t *_wrap_new_foveon_data_t_librawgo_fabcac84457d17f6() {
  foveon_data_t *result = 0 ;
  foveon_data_t *_swig_go_result;
  
  
  result = (foveon_data_t *)new foveon_data_t();
  *(foveon_data_t **)&_swig_go_result = (foveon_data_t *)result; 
  return _swig_go_result;
}


void _wrap_delete_foveon_data_t_librawgo_fabcac84457d17f6(foveon_data_t *_swig_go_0) {
  foveon_data_t *arg1 = (foveon_data_t *) 0 ;
  
  arg1 = *(foveon_data_t **)&_swig_go_0; 
  
  delete arg1;
  
}


foveon_data_t (*_wrap_foveon_data_get_librawgo_fabcac84457d17f6())[] {
  foveon_data_t *result = 0 ;
  foveon_data_t (*_swig_go_result)[];
  
  
  result = (foveon_data_t *)(foveon_data_t *)foveon_data;
  *(foveon_data_t **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_foveon_count_get_librawgo_fabcac84457d17f6() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)foveon_count;
  _swig_go_result = result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

